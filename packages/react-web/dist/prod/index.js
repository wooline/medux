import{ConnectedRouter,connectRouter,routerMiddleware}from"connected-react-router";import React from"react";import{createBrowserHistory,createMemoryHistory}from"history";import{renderApp,renderSSR}from"@medux/react";import{renderToNodeStream,renderToString}from"react-dom/server";import ReactDOM from"react-dom";import{invalidview}from"@medux/core";import{withRouter}from"react-router-dom";export{routerActions}from"connected-react-router";export{loadView,exportModule}from"@medux/react";export function buildApp(a,b,c,d){void 0===c&&(c={}),void 0===d&&(d="root");var e=createBrowserHistory();if(c.reducers=c.reducers||{},c.reducers&&c.reducers.router)throw new Error("the reducer name 'router' is not allowed");var f=connectRouter(e);c.reducers.router=function(a,b){var d=f(a,b);return c.routerParser&&a!==d?c.routerParser(d,a):d};// SSR需要数据是单向的，store->view，不能store->view->store->view，而view:ConnectedRouter初始化时会触发一次LOCATION_CHANGE
var g=!1;return c.middlewares=c.middlewares||[],c.middlewares.unshift(function filterRouter(){return function(a){return function(b){if("@@router/LOCATION_CHANGE"===b.type){if(!g)return g=!0,b;invalidview()}return a(b)}}},routerMiddleware(e)),renderApp(function(a,b,c){var f=withRouter(b),g=React.createElement(a,null,React.createElement(ConnectedRouter,{history:e},React.createElement(f,null)));if("function"==typeof d)d(g);else{var h=window[c]?ReactDOM.hydrate:ReactDOM.render;h(g,"string"==typeof d?document.getElementById(d):d)}},a,b,c)}export function buildSSR(a,b,c,d,e){void 0===d&&(d={}),void 0===e&&(e=!1);var f=createMemoryHistory({initialEntries:c});if(d.reducers=d.reducers||{},d.reducers&&d.reducers.router)throw new Error("the reducer name 'router' is not allowed");var g=connectRouter(f);d.reducers.router=function(a,b){var c=g(a.router,b);a.router=d.routerParser&&a.router!==c?d.routerParser(c,a.router):c};var h=!1;d.middlewares=d.middlewares||[],d.middlewares.unshift(function filterRouter(){return function(a){return function(b){if("@@router/LOCATION_CHANGE"===b.type){if(!h)return h=!0,b;invalidview()}return a(b)}}},routerMiddleware(f));var i=e?renderToNodeStream:renderToString;return renderSSR(function(a,b){return i(React.createElement(a,null,React.createElement(ConnectedRouter,{history:f},React.createElement(b,null))))},a,b,d)}
//# sourceMappingURL=index.js.map