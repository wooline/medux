{"version":3,"sources":["../../src/index.tsx"],"names":["createHistory","React","Router","StaticRouter","withRouter","renderApp","renderSSR","renderToNodeStream","renderToString","ReactDOM","loadView","exportModule","ActionTypes","LoadingState","exportActions","BaseModelHandlers","effect","errorAction","reducer","historyActions","undefined","getHistoryActions","buildApp","moduleGetter","appModuleName","history","transformRoute","storeOptions","container","historyData","historyProxy","Provider","AppMainView","ssrInitStoreKey","WithRouter","app","render","window","hydrate","document","getElementById","buildSSR","location","renderToStream","initialized"],"mappings":"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","sourcesContent":["import {RootState as BaseRootState, ModuleGetter, RouteData, StoreOptions} from '@medux/core/types/export';\nimport {HistoryActions, Location, TransformRoute, createHistory} from '@medux/web';\nimport React, {ReactElement} from 'react';\nimport {Router, StaticRouter, withRouter} from 'react-router-dom';\nimport {renderApp, renderSSR} from '@medux/react';\nimport {renderToNodeStream, renderToString} from 'react-dom/server';\n\nimport {History} from 'history';\nimport ReactDOM from 'react-dom';\n\n//TODO use StaticRouter\n\nexport {loadView, exportModule} from '@medux/react';\n\nexport {ActionTypes, LoadingState, exportActions, BaseModelHandlers, effect, errorAction, reducer} from '@medux/core';\n\nlet historyActions: HistoryActions<RouteData> | undefined = undefined;\n\nexport function getHistoryActions() {\n  return historyActions!;\n}\n\nexport function buildApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  moduleGetter: M,\n  appModuleName: A,\n  history: History,\n  transformRoute: TransformRoute,\n  storeOptions: StoreOptions = {},\n  container: string | Element | ((component: ReactElement<any>) => void) = 'root'\n): Promise<void> {\n  const historyData = createHistory(history, transformRoute);\n  const {historyProxy} = historyData;\n  historyActions = historyData.historyActions;\n\n  return renderApp(\n    (Provider, AppMainView, ssrInitStoreKey) => {\n      const WithRouter = withRouter(AppMainView);\n      const app = (\n        <Provider>\n          <Router history={history}>\n            <WithRouter />\n          </Router>\n        </Provider>\n      );\n      if (typeof container === 'function') {\n        container(app);\n      } else {\n        const render = window[ssrInitStoreKey] ? ReactDOM.hydrate : ReactDOM.render;\n        render(app, typeof container === 'string' ? document.getElementById(container) : container);\n      }\n    },\n    moduleGetter,\n    appModuleName,\n    historyProxy,\n    storeOptions\n  );\n}\n\nexport function buildSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  moduleGetter: M,\n  appModuleName: A,\n  location: Location,\n  transformRoute: TransformRoute,\n  storeOptions: StoreOptions = {},\n  renderToStream: boolean = false\n): Promise<{html: string | ReadableStream; data: any; ssrInitStoreKey: string}> {\n  const historyData = createHistory({} as any, transformRoute);\n  const {historyProxy} = historyData;\n  historyProxy.initialized = false;\n  historyActions = historyData.historyActions;\n\n  const render = renderToStream ? renderToNodeStream : renderToString;\n  return renderSSR(\n    (Provider, AppMainView) => {\n      return render(\n        <Provider>\n          <StaticRouter location={location}>\n            <AppMainView />\n          </StaticRouter>\n        </Provider>\n      );\n    },\n    moduleGetter,\n    appModuleName,\n    historyProxy,\n    storeOptions\n  );\n}\n\nexport type RootState<G extends ModuleGetter> = BaseRootState<G, Location>;\n"],"file":"index.js"}