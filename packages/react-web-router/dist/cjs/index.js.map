{"version":3,"sources":["../../src/index.tsx"],"names":["historyActions","undefined","getHistoryActions","buildApp","moduleGetter","appModuleName","history","transformRoute","storeOptions","container","historyData","historyProxy","Provider","AppMainView","ssrInitStoreKey","WithRouter","app","render","window","ReactDOM","hydrate","document","getElementById","buildSSR","location","renderToStream","listen","initialized","renderToNodeStream","renderToString"],"mappings":";;;;;;;;;;AACA;;AACA;;AACA;;AACA;;;;;AACA;;AAGA;;AAMA;;;;;;;;;AAJA;AAMA,IAAIA,cAAqD,GAAGC,SAA5D;;AAEO,SAASC,iBAAT,GAA6B;AAClC,SAAOF,cAAP;AACD;;AAEM,SAASG,QAAT,CACLC,YADK,EAELC,aAFK,EAGLC,OAHK,EAILC,cAJK,EAKLC,YALK,EAMLC,SANK,EAOL;AAAA,MAFAD,YAEA;AAFAA,IAAAA,YAEA,GAF6B,EAE7B;AAAA;;AAAA,MADAC,SACA;AADAA,IAAAA,SACA,GADyE,MACzE;AAAA;;AACA,MAAMC,WAAW,GAAG,wBAAcJ,OAAd,EAAuBC,cAAvB,CAApB;AADA,MAEOI,YAFP,GAEuBD,WAFvB,CAEOC,YAFP;AAGAX,EAAAA,cAAc,GAAGU,WAAW,CAACV,cAA7B;AAEA,SAAO,uBACL,UAACY,QAAD,EAAWC,WAAX,EAAwBC,eAAxB,EAA4C;AAC1C,QAAMC,UAAU,GAAG,gCAAWF,WAAX,CAAnB;;AACA,QAAMG,GAAG,GACP,6BAAC,QAAD,QACE,6BAAC,sBAAD;AAAQ,MAAA,OAAO,EAAEV;AAAjB,OACE,6BAAC,UAAD,OADF,CADF,CADF;;AAOA,QAAI,OAAOG,SAAP,KAAqB,UAAzB,EAAqC;AACnCA,MAAAA,SAAS,CAACO,GAAD,CAAT;AACD,KAFD,MAEO;AACL,UAAMC,MAAM,GAAGC,MAAM,CAACJ,eAAD,CAAN,GAA0BK,kBAASC,OAAnC,GAA6CD,kBAASF,MAArE;AACAA,MAAAA,MAAM,CAACD,GAAD,EAAM,OAAOP,SAAP,KAAqB,QAArB,GAAgCY,QAAQ,CAACC,cAAT,CAAwBb,SAAxB,CAAhC,GAAqEA,SAA3E,CAAN;AACD;AACF,GAhBI,EAiBLL,YAjBK,EAkBLC,aAlBK,EAmBLM,YAnBK,EAoBLH,YApBK,CAAP;AAsBD;;AAEM,SAASe,QAAT,CACLnB,YADK,EAELC,aAFK,EAGLmB,QAHK,EAILjB,cAJK,EAKLC,YALK,EAMLiB,cANK,EAOyE;AAAA,MAF9EjB,YAE8E;AAF9EA,IAAAA,YAE8E,GAFjD,EAEiD;AAAA;;AAAA,MAD9EiB,cAC8E;AAD9EA,IAAAA,cAC8E,GADpD,KACoD;AAAA;;AAC9E,MAAMf,WAAW,GAAG,wBAAc;AAACgB,IAAAA,MAAM,EAAE;AAAA,aAAM,KAAK,CAAX;AAAA;AAAT,GAAd,EAA6CnB,cAA7C,CAApB;AAD8E,MAEvEI,YAFuE,GAEvDD,WAFuD,CAEvEC,YAFuE;AAG9EA,EAAAA,YAAY,CAACgB,WAAb,GAA2B,KAA3B;AACA3B,EAAAA,cAAc,GAAGU,WAAW,CAACV,cAA7B;AAEA,MAAMiB,MAAM,GAAGQ,cAAc,GAAGG,0BAAH,GAAwBC,sBAArD;AACA,SAAO,uBACL,UAACjB,QAAD,EAAWC,WAAX,EAA2B;AACzB,WAAOI,MAAM,CACX,6BAAC,QAAD,QACE,6BAAC,4BAAD;AAAc,MAAA,QAAQ,EAAEO;AAAxB,OACE,6BAAC,WAAD,OADF,CADF,CADW,CAAb;AAOD,GATI,EAULpB,YAVK,EAWLC,aAXK,EAYLM,YAZK,EAaLH,YAbK,CAAP;AAeD","sourcesContent":["import {RootState as BaseRootState, ModuleGetter, RouteData, StoreOptions} from '@medux/core/types/export';\nimport {HistoryActions, Location, TransformRoute, createHistory} from '@medux/web';\nimport React, {ReactElement} from 'react';\nimport {Router, StaticRouter, withRouter} from 'react-router-dom';\nimport {renderApp, renderSSR} from '@medux/react';\nimport {renderToNodeStream, renderToString} from 'react-dom/server';\n\nimport {History} from 'history';\nimport ReactDOM from 'react-dom';\n\n//TODO use StaticRouter\n\nexport {loadView, exportModule} from '@medux/react';\n\nexport {ActionTypes, LoadingState, exportActions, BaseModelHandlers, effect, errorAction, reducer} from '@medux/core';\n\nlet historyActions: HistoryActions<RouteData> | undefined = undefined;\n\nexport function getHistoryActions() {\n  return historyActions!;\n}\n\nexport function buildApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  moduleGetter: M,\n  appModuleName: A,\n  history: History,\n  transformRoute: TransformRoute,\n  storeOptions: StoreOptions = {},\n  container: string | Element | ((component: ReactElement<any>) => void) = 'root'\n) {\n  const historyData = createHistory(history, transformRoute);\n  const {historyProxy} = historyData;\n  historyActions = historyData.historyActions;\n\n  return renderApp(\n    (Provider, AppMainView, ssrInitStoreKey) => {\n      const WithRouter = withRouter(AppMainView);\n      const app = (\n        <Provider>\n          <Router history={history}>\n            <WithRouter />\n          </Router>\n        </Provider>\n      );\n      if (typeof container === 'function') {\n        container(app);\n      } else {\n        const render = window[ssrInitStoreKey] ? ReactDOM.hydrate : ReactDOM.render;\n        render(app, typeof container === 'string' ? document.getElementById(container) : container);\n      }\n    },\n    moduleGetter,\n    appModuleName,\n    historyProxy,\n    storeOptions\n  );\n}\n\nexport function buildSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  moduleGetter: M,\n  appModuleName: A,\n  location: string,\n  transformRoute: TransformRoute,\n  storeOptions: StoreOptions = {},\n  renderToStream: boolean = false\n): Promise<{html: string | ReadableStream; data: any; ssrInitStoreKey: string}> {\n  const historyData = createHistory({listen: () => void 0} as any, transformRoute);\n  const {historyProxy} = historyData;\n  historyProxy.initialized = false;\n  historyActions = historyData.historyActions;\n\n  const render = renderToStream ? renderToNodeStream : renderToString;\n  return renderSSR(\n    (Provider, AppMainView) => {\n      return render(\n        <Provider>\n          <StaticRouter location={location}>\n            <AppMainView />\n          </StaticRouter>\n        </Provider>\n      );\n    },\n    moduleGetter,\n    appModuleName,\n    historyProxy,\n    storeOptions\n  );\n}\n\nexport type RootState<G extends ModuleGetter> = BaseRootState<G, Location>;\n"],"file":"index.js"}