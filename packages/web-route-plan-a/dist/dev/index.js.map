{"version":3,"sources":["../../src/index.ts"],"names":["compilePath","compileToPath","matchPath","getSearch","searchOrHash","key","length","reg","RegExp","str","split","ISO_DATE_FORMAT","searchParse","search","undefined","JSON","parse","unescape","prop","value","test","Date","searchStringify","searchData","stringify","escape","pathnameParse","pathname","routeConfig","path","args","rule","hasOwnProperty","match","replace","exact","endsWith","item","viewName","pathConfig","push","moduleName","params","Object","keys","compileConfig","viewToRule","ruleToKeys","end","strict","sensitive","reduce","prev","cur","name","buildLocationToRoute","locationToRoute","location","paths","views","hashParams","hash","moduleParams","forEach","routeToLocation","routeData","urls","toPath","url","hashData","data","startsWith","join"],"mappings":"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","sourcesContent":["import {BrowserLocation, TransformRoute} from '@medux/web';\nimport {DisplayViews, RouteData} from '@medux/core/types/export';\nimport {compilePath, compileToPath, matchPath} from './matchPath';\n\nexport interface RouteConfig {\n  [path: string]: string | [string, RouteConfig];\n}\n\nfunction getSearch(searchOrHash: string, key: string): string {\n  if (searchOrHash.length < 4) {\n    return '';\n  }\n  const reg = new RegExp(`[&?]${key}=`);\n  const str = ('#' + searchOrHash).split(reg)[1];\n  if (!str) {\n    return '';\n  }\n  return str.split('&')[0];\n}\n\nconst ISO_DATE_FORMAT = /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(\\.\\d+)?(Z|[+-][01]\\d:[0-5]\\d)$/;\n\n/*\n  将字符串变成 Data，因为 JSON 中没有 Date 类型，所以用正则表达式匹配自动转换\n*/\nfunction searchParse(search: string, key: string = 'q'): undefined | {[moduleName: string]: {[key: string]: any}} {\n  search = getSearch(search, key);\n  if (!search) {\n    return undefined;\n  }\n  return JSON.parse(unescape(search), (prop: any, value: any) => {\n    if (typeof value === 'string' && ISO_DATE_FORMAT.test(value)) {\n      return new Date(value);\n    }\n    return value;\n  });\n}\n\nfunction searchStringify(searchData: any, key: string = 'q'): string {\n  if (!searchData) {\n    return '';\n  }\n  const str = JSON.stringify(searchData);\n  if (!str || str === '{}') {\n    return '';\n  }\n  return `${key}=${escape(str)}`;\n}\nfunction pathnameParse(pathname: string, routeConfig: RouteConfig, path: string[], args: {[moduleName: string]: {[key: string]: any}}) {\n  for (const rule in routeConfig) {\n    if (routeConfig.hasOwnProperty(rule)) {\n      const match = matchPath(pathname, {path: rule.replace(/\\$$/, ''), exact: rule.endsWith('$')});\n      if (match) {\n        const item = routeConfig[rule];\n        const [viewName, pathConfig] = typeof item === 'string' ? [item, null] : item;\n        path.push(viewName);\n        const moduleName = viewName.split('.')[0];\n        const {params} = match;\n        if (params && Object.keys(params).length > 0) {\n          args[moduleName] = {...args[moduleName], ...params};\n        }\n        if (pathConfig) {\n          pathnameParse(pathname, pathConfig, path, args);\n        }\n        return;\n      }\n    }\n  }\n}\n\nfunction compileConfig(routeConfig: RouteConfig, viewToRule: {[viewName: string]: string} = {}, ruleToKeys: {[rule: string]: (string | number)[]} = {}) {\n  for (const rule in routeConfig) {\n    if (routeConfig.hasOwnProperty(rule)) {\n      if (!ruleToKeys[rule]) {\n        const {keys} = compilePath(rule.replace(/\\$$/, ''), {end: rule.endsWith('$'), strict: false, sensitive: false});\n        ruleToKeys[rule] = keys.reduce((prev: (string | number)[], cur) => {\n          prev.push(cur.name);\n          return prev;\n        }, []);\n      }\n      const item = routeConfig[rule];\n      const [viewName, pathConfig] = typeof item === 'string' ? [item, null] : item;\n      viewToRule[viewName] = rule;\n      if (pathConfig) {\n        compileConfig(pathConfig, viewToRule, ruleToKeys);\n      }\n    }\n  }\n  return {viewToRule, ruleToKeys};\n}\n\nexport function buildLocationToRoute(routeConfig: RouteConfig): TransformRoute {\n  const {viewToRule, ruleToKeys} = compileConfig(routeConfig);\n  const locationToRoute: (location: BrowserLocation) => RouteData = location => {\n    const paths: string[] = [];\n    const params: {[moduleName: string]: {[key: string]: any}} = searchParse(location.search) || {};\n    pathnameParse(location.pathname, routeConfig, paths, params);\n    const views: DisplayViews = paths.reduce((prev: DisplayViews, cur) => {\n      const [moduleName, viewName] = cur.split('.');\n      if (viewName) {\n        if (!prev[moduleName]) {\n          prev[moduleName] = {};\n        }\n        prev[moduleName][viewName] = true;\n      }\n      return prev;\n    }, {});\n    const hashParams: {[moduleName: string]: {[key: string]: any}} = searchParse(location.hash) || {};\n    for (const moduleName in hashParams) {\n      if (hashParams.hasOwnProperty(moduleName)) {\n        const moduleParams = hashParams[moduleName];\n        Object.keys(moduleParams).forEach(key => {\n          params[moduleName][key] = moduleParams[key];\n        });\n      }\n    }\n    return {paths, params, views};\n  };\n  const routeToLocation: (routeData: RouteData) => BrowserLocation = routeData => {\n    const {paths, params} = routeData;\n    const urls: string[] = [];\n    const args: {[moduleName: string]: {[key: string]: any}} = {};\n    for (const moduleName in params) {\n      if (params.hasOwnProperty(moduleName)) {\n        args[moduleName] = {...params[moduleName]};\n      }\n    }\n    for (const viewName of paths) {\n      const rule = viewToRule[viewName];\n      const moduleName = viewName.split('.')[0];\n      const toPath = compileToPath(rule.replace(/\\$$/, ''));\n      const url = toPath(params[moduleName]);\n      urls.push(url);\n      const keys = ruleToKeys[rule] || [];\n      keys.forEach(key => {\n        delete args[moduleName][key];\n      });\n    }\n    const searchData = {};\n    const hashData = {};\n    for (const moduleName in args) {\n      if (args.hasOwnProperty(moduleName)) {\n        const data = args[moduleName];\n        const keys = Object.keys(data);\n        if (keys.length > 0) {\n          keys.forEach(key => {\n            if (key.startsWith('_')) {\n              if (!hashData[moduleName]) {\n                hashData[moduleName] = {};\n              }\n              hashData[moduleName][key] = data[key];\n            } else {\n              if (!searchData[moduleName]) {\n                searchData[moduleName] = {};\n              }\n              searchData[moduleName][key] = data[key];\n            }\n          });\n        }\n      }\n    }\n    return {\n      pathname: urls.join(''),\n      search: searchStringify(searchData),\n      hash: searchStringify(hashData),\n    };\n  };\n  return {\n    locationToRoute,\n    routeToLocation,\n  };\n}\n"],"file":"index.js"}