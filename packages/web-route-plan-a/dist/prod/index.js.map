{"version":3,"sources":["../../src/index.ts"],"names":["compilePath","compileToPath","matchPath","getSearch","searchOrHash","key","length","reg","RegExp","str","split","ISO_DATE_FORMAT","searchParse","search","JSON","parse","unescape","prop","value","test","Date","searchStringify","searchData","stringify","escape","pathnameParse","pathname","routeConfig","path","args","rule","hasOwnProperty","match","replace","exact","endsWith","item","viewName","pathConfig","push","moduleName","params","Object","keys","compileConfig","viewToRule","ruleToKeys","end","strict","sensitive","reduce","prev","cur","name","buildLocationToRoute","locationToRoute","location","paths","views","hashParams","hash","moduleParams","forEach","routeToLocation","routeData","urls","toPath","url","hashData","data","startsWith","join"],"mappings":"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","sourcesContent":["import {BrowserLocation, TransformRoute} from '@medux/web';\nimport {DisplayViews, RouteData} from '@medux/core/types/export';\nimport {compilePath, compileToPath, matchPath} from './matchPath';\n\nexport interface RouteConfig {\n  [path: string]: string | [string, RouteConfig];\n}\n\nfunction getSearch(searchOrHash: string, key: string): string {\n  if (searchOrHash.length < 4) {\n    return '';\n  }\n  const reg = new RegExp(`[&?]${key}=`);\n  const str = ('#' + searchOrHash).split(reg)[1];\n  if (!str) {\n    return '';\n  }\n  return str.split('&')[0];\n}\n\nconst ISO_DATE_FORMAT = /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(\\.\\d+)?(Z|[+-][01]\\d:[0-5]\\d)$/;\n\n/*\n  将字符串变成 Data，因为 JSON 中没有 Date 类型，所以用正则表达式匹配自动转换\n*/\nfunction searchParse(search: string, key: string = 'q'): undefined | {[moduleName: string]: {[key: string]: any}} {\n  search = getSearch(search, key);\n  if (!search) {\n    return undefined;\n  }\n  return JSON.parse(unescape(search), (prop: any, value: any) => {\n    if (typeof value === 'string' && ISO_DATE_FORMAT.test(value)) {\n      return new Date(value);\n    }\n    return value;\n  });\n}\n\nfunction searchStringify(searchData: any, key: string = 'q'): string {\n  if (!searchData) {\n    return '';\n  }\n  const str = JSON.stringify(searchData);\n  if (!str || str === '{}') {\n    return '';\n  }\n  return `${key}=${escape(str)}`;\n}\nfunction pathnameParse(pathname: string, routeConfig: RouteConfig, path: string[], args: {[moduleName: string]: {[key: string]: any}}) {\n  for (const rule in routeConfig) {\n    if (routeConfig.hasOwnProperty(rule)) {\n      const match = matchPath(pathname, {path: rule.replace(/\\$$/, ''), exact: rule.endsWith('$')});\n      if (match) {\n        const item = routeConfig[rule];\n        const [viewName, pathConfig] = typeof item === 'string' ? [item, null] : item;\n        path.push(viewName);\n        const moduleName = viewName.split('.')[0];\n        const {params} = match;\n        if (params && Object.keys(params).length > 0) {\n          args[moduleName] = {...args[moduleName], ...params};\n        }\n        if (pathConfig) {\n          pathnameParse(pathname, pathConfig, path, args);\n        }\n        return;\n      }\n    }\n  }\n}\n\nfunction compileConfig(routeConfig: RouteConfig, viewToRule: {[viewName: string]: string} = {}, ruleToKeys: {[rule: string]: (string | number)[]} = {}) {\n  for (const rule in routeConfig) {\n    if (routeConfig.hasOwnProperty(rule)) {\n      if (!ruleToKeys[rule]) {\n        const {keys} = compilePath(rule.replace(/\\$$/, ''), {end: rule.endsWith('$'), strict: false, sensitive: false});\n        ruleToKeys[rule] = keys.reduce((prev: (string | number)[], cur) => {\n          prev.push(cur.name);\n          return prev;\n        }, []);\n      }\n      const item = routeConfig[rule];\n      const [viewName, pathConfig] = typeof item === 'string' ? [item, null] : item;\n      viewToRule[viewName] = rule;\n      if (pathConfig) {\n        compileConfig(pathConfig, viewToRule, ruleToKeys);\n      }\n    }\n  }\n  return {viewToRule, ruleToKeys};\n}\n\nexport function buildLocationToRoute(routeConfig: RouteConfig): TransformRoute {\n  const {viewToRule, ruleToKeys} = compileConfig(routeConfig);\n  const locationToRoute: (location: BrowserLocation) => RouteData = location => {\n    const paths: string[] = [];\n    const params: {[moduleName: string]: {[key: string]: any}} = searchParse(location.search) || {};\n    pathnameParse(location.pathname, routeConfig, paths, params);\n    const views: DisplayViews = paths.reduce((prev: DisplayViews, cur) => {\n      const [moduleName, viewName] = cur.split('.');\n      if (viewName) {\n        if (!prev[moduleName]) {\n          prev[moduleName] = {};\n        }\n        prev[moduleName][viewName] = true;\n      }\n      return prev;\n    }, {});\n    const hashParams: {[moduleName: string]: {[key: string]: any}} = searchParse(location.hash) || {};\n    for (const moduleName in hashParams) {\n      if (hashParams.hasOwnProperty(moduleName)) {\n        const moduleParams = hashParams[moduleName];\n        Object.keys(moduleParams).forEach(key => {\n          params[moduleName][key] = moduleParams[key];\n        });\n      }\n    }\n    return {paths, params, views};\n  };\n  const routeToLocation: (routeData: RouteData) => BrowserLocation = routeData => {\n    const {paths, params} = routeData;\n    const urls: string[] = [];\n    const args: {[moduleName: string]: {[key: string]: any}} = {};\n    for (const moduleName in params) {\n      if (params.hasOwnProperty(moduleName)) {\n        args[moduleName] = {...params[moduleName]};\n      }\n    }\n    for (const viewName of paths) {\n      const rule = viewToRule[viewName];\n      const moduleName = viewName.split('.')[0];\n      const toPath = compileToPath(rule.replace(/\\$$/, ''));\n      const url = toPath(params[moduleName]);\n      urls.push(url);\n      const keys = ruleToKeys[rule] || [];\n      keys.forEach(key => {\n        delete args[moduleName][key];\n      });\n    }\n    const searchData = {};\n    const hashData = {};\n    for (const moduleName in args) {\n      if (args.hasOwnProperty(moduleName)) {\n        const data = args[moduleName];\n        const keys = Object.keys(data);\n        if (keys.length > 0) {\n          keys.forEach(key => {\n            if (key.startsWith('_')) {\n              if (!hashData[moduleName]) {\n                hashData[moduleName] = {};\n              }\n              hashData[moduleName][key] = data[key];\n            } else {\n              if (!searchData[moduleName]) {\n                searchData[moduleName] = {};\n              }\n              searchData[moduleName][key] = data[key];\n            }\n          });\n        }\n      }\n    }\n    return {\n      pathname: urls.join(''),\n      search: searchStringify(searchData),\n      hash: searchStringify(hashData),\n    };\n  };\n  return {\n    locationToRoute,\n    routeToLocation,\n  };\n}\n"],"file":"index.js"}