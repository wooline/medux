import React,{useEffect,useState}from"react";import{exportModule as baseExportModule,renderApp as baseRenderApp,renderSSR as baseRenderSSR,getView,isPromiseView,viewWillMount,viewWillUnmount}from"@medux/core";import{Provider}from"react-redux";export function renderApp(a,b,c,d){return baseRenderApp(function(b,c,d,e){a(function ReduxProvider(a){// eslint-disable-next-line react/prop-types
return React.createElement(Provider,{store:b},a.children)},d.Main,e)},b,c,d)}export function renderSSR(a,b,c,d){return void 0===d&&(d={}),baseRenderSSR(function(b,c,d,e){var f=b.getState();return{ssrInitStoreKey:e,data:f,html:a(function ReduxProvider(a){// eslint-disable-next-line react/prop-types
return React.createElement(Provider,{store:b},a.children)},d.Main)}},b,c,d)}export var loadView=function(a,b,c,d){var e=function(f){var g=useState(function(){var d=getView(a,b,c);return isPromiseView(d)?(d.then(function(a){e.propTypes=a.propTypes,e.contextTypes=a.contextTypes,e.defaultProps=a.defaultProps,i({Component:a})}),null):(e.propTypes=d.propTypes,e.contextTypes=d.contextTypes,e.defaultProps=d.defaultProps,{Component:d})}),h=g[0],i=g[1];return useEffect(function(){return h?(viewWillMount(b,c),function(){viewWillUnmount(b,c)}):void 0},[h]),h?React.createElement(h.Component,f):d?React.createElement(d,f):null};return e};export var exportModule=baseExportModule;
//# sourceMappingURL=index.js.map