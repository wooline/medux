{"version":3,"sources":["../../src/index.tsx"],"names":["React","useState","exportModule","baseExportModule","renderApp","baseRenderApp","renderSSR","baseRenderSSR","getView","isPromiseView","Provider","render","moduleGetter","appModuleName","historyProxy","storeOptions","store","appModel","appViews","ssrInitStoreKey","ReduxProvider","props","children","Main","data","getState","html","loadView","moduleName","viewName","Loading","loader","moduleViewResult","then","Component","Object","keys","forEach","key","setView","view"],"mappings":"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","sourcesContent":["import {ExportModule, HistoryProxy, LoadView, ModuleGetter, StoreOptions} from '@medux/core/types/export';\nimport React, {ComponentType, FunctionComponent, ReactNode, useState} from 'react';\nimport {exportModule as baseExportModule, renderApp as baseRenderApp, renderSSR as baseRenderSSR, getView, isPromiseView} from '@medux/core';\n\nimport {Provider} from 'react-redux';\n\nexport function renderApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (Provider: ComponentType<{children: ReactNode}>, AppMainView: ComponentType<any>, ssrInitStoreKey: string) => void,\n  moduleGetter: M,\n  appModuleName: A,\n  historyProxy: HistoryProxy,\n  storeOptions: StoreOptions\n): Promise<void> {\n  return baseRenderApp(\n    (\n      store,\n      appModel,\n      appViews: {\n        [key: string]: ComponentType<any>;\n      },\n      ssrInitStoreKey\n    ) => {\n      const ReduxProvider: ComponentType<{children: ReactNode}> = props => {\n        // eslint-disable-next-line react/prop-types\n        return <Provider store={store}>{props.children}</Provider>;\n      };\n      render(ReduxProvider, appViews.Main, ssrInitStoreKey);\n    },\n    moduleGetter,\n    appModuleName,\n    historyProxy,\n    storeOptions\n  );\n}\n\nexport function renderSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (Provider: ComponentType<{children: ReactNode}>, AppMainView: ComponentType<any>) => any,\n  moduleGetter: M,\n  appModuleName: A,\n  historyProxy: HistoryProxy,\n  storeOptions: StoreOptions = {}\n) {\n  return baseRenderSSR(\n    (\n      store,\n      appModel,\n      appViews: {\n        [key: string]: React.ComponentType;\n      },\n      ssrInitStoreKey\n    ) => {\n      const data = store.getState();\n      const ReduxProvider: ComponentType<{children: ReactNode}> = props => {\n        // eslint-disable-next-line react/prop-types\n        return <Provider store={store}>{props.children}</Provider>;\n      };\n      return {\n        ssrInitStoreKey,\n        data,\n        html: render(ReduxProvider, appViews.Main),\n      };\n    },\n    moduleGetter,\n    appModuleName,\n    historyProxy,\n    storeOptions\n  );\n}\n\nexport const loadView: LoadView = (moduleGetter, moduleName, viewName, Loading?: ComponentType<any>) => {\n  const loader: FunctionComponent<any> = function Loader(props: any) {\n    const [view, setView] = useState<{Component: ComponentType} | null>(() => {\n      const moduleViewResult = getView<ComponentType>(moduleGetter, moduleName, viewName);\n      if (isPromiseView<ComponentType>(moduleViewResult)) {\n        moduleViewResult.then(Component => {\n          Object.keys(loader).forEach(key => (Component[key] = loader[key]));\n          Object.keys(Component).forEach(key => (loader[key] = Component[key]));\n          setView({Component});\n        });\n        return null;\n      } else {\n        Object.keys(loader).forEach(key => (moduleViewResult[key] = loader[key]));\n        Object.keys(moduleViewResult).forEach(key => (loader[key] = moduleViewResult[key]));\n        return {Component: moduleViewResult};\n      }\n    });\n    return view ? <view.Component {...props} /> : Loading ? <Loading {...props} /> : null;\n  };\n\n  return loader as any;\n};\n\nexport const exportModule: ExportModule<ComponentType<any>> = baseExportModule;\n"],"file":"index.js"}