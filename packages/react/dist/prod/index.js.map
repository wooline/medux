{"version":3,"sources":["../../src/index.tsx"],"names":["React","useState","useEffect","ReactDOM","renderToNodeStream","renderToString","Provider","createBrowserHistory","createMemoryHistory","withRouter","ConnectedRouter","connectRouter","routerMiddleware","renderApp","renderSSR","getView","isPromiseView","viewWillMount","viewWillUnmount","isServer","getClientStore","exportModule","baseExportModule","buildApp","moduleGetter","appModuleName","storeOptions","container","history","reducers","router","Error","state","action","routerData","routerParser","middlewares","unshift","store","appModel","appViews","ssrInitStoreKey","WithRouter","Main","app","render","window","hydrate","document","getElementById","buildSSR","initialEntries","renderToStream","data","getState","html","loadView","moduleName","viewName","Loading","props","moduleViewResult","then","view","setComponent","Component","exportView","model","View","modelReady","setModelReady","propTypes","contextTypes","defaultProps","initState","ActionHandles","views","maps","key","hasOwnProperty"],"mappings":"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","sourcesContent":["import React, {ReactElement, ComponentType, FunctionComponent, useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {renderToNodeStream, renderToString} from 'react-dom/server';\nimport {Provider} from 'react-redux';\nimport {createBrowserHistory} from 'history';\nimport createMemoryHistory from 'history/createMemoryHistory';\nimport {withRouter} from 'react-router-dom';\nimport {ConnectedRouter, connectRouter, routerMiddleware} from 'connected-react-router';\nimport {renderApp, renderSSR, getView, isPromiseView, viewWillMount, viewWillUnmount, isServer, getClientStore, exportModule as baseExportModule} from '@medux/core';\nimport {Model, ModuleGetter, StoreOptions, LoadView, ExportModule} from '@medux/core/types/export';\n\nexport type RouterParser<T = any> = (nextRouter: T, prevRouter?: T) => T;\n\nexport function buildApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  moduleGetter: M,\n  appModuleName: A,\n  storeOptions: StoreOptions & {routerParser?: RouterParser} = {},\n  container: string | Element | ((component: ReactElement<any>) => void) = 'root'\n): Promise<void> {\n  const history = createBrowserHistory();\n  storeOptions.reducers = storeOptions.reducers || {};\n  if (storeOptions.reducers && storeOptions.reducers.router) {\n    throw new Error(\"the reducer name 'router' is not allowed\");\n  }\n  const router = connectRouter(history);\n  storeOptions.reducers.router = (state, action) => {\n    const routerData = router(state.router, action as any);\n    if (storeOptions.routerParser && state.router !== routerData) {\n      state.router = storeOptions.routerParser(routerData, state.router);\n    } else {\n      state.router = routerData;\n    }\n  };\n  storeOptions.middlewares = storeOptions.middlewares || [];\n  storeOptions.middlewares.unshift(routerMiddleware(history));\n\n  return renderApp(\n    (\n      store,\n      appModel,\n      appViews: {\n        [key: string]: React.ComponentType<any>;\n      },\n      ssrInitStoreKey\n    ) => {\n      const WithRouter = withRouter(appViews.Main);\n      const app = (\n        <Provider store={store}>\n          <ConnectedRouter history={history}>\n            <WithRouter />\n          </ConnectedRouter>\n        </Provider>\n      );\n      if (typeof container === 'function') {\n        container(app);\n      } else {\n        const render = window[ssrInitStoreKey] ? ReactDOM.hydrate : ReactDOM.render;\n        render(app, typeof container === 'string' ? document.getElementById(container) : container);\n      }\n    },\n    moduleGetter,\n    appModuleName,\n    storeOptions\n  );\n}\n\nexport function buildSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  moduleGetter: M,\n  appModuleName: A,\n  initialEntries: string[],\n  storeOptions: StoreOptions & {routerParser?: RouterParser} = {},\n  renderToStream: boolean = false\n): Promise<{html: string | ReadableStream; data: any; ssrInitStoreKey: string}> {\n  const history = createMemoryHistory({initialEntries});\n  storeOptions.reducers = storeOptions.reducers || {};\n  if (storeOptions.reducers && storeOptions.reducers.router) {\n    throw new Error(\"the reducer name 'router' is not allowed\");\n  }\n  const router = connectRouter(history);\n  storeOptions.reducers.router = (state, action) => {\n    const routerData = router(state.router, action as any);\n    if (storeOptions.routerParser && state.router !== routerData) {\n      state.router = storeOptions.routerParser(routerData, state.router);\n    } else {\n      state.router = routerData;\n    }\n  };\n  storeOptions.middlewares = storeOptions.middlewares || [];\n  storeOptions.middlewares.unshift(routerMiddleware(history));\n  const render = renderToStream ? renderToNodeStream : renderToString;\n  return renderSSR(\n    (\n      store,\n      appModel,\n      appViews: {\n        [key: string]: React.ComponentType;\n      },\n      ssrInitStoreKey\n    ) => {\n      const data = store.getState();\n      return {\n        ssrInitStoreKey,\n        data,\n        html: render(\n          <Provider store={store}>\n            <ConnectedRouter history={history}>\n              <appViews.Main />\n            </ConnectedRouter>\n          </Provider>\n        ),\n      };\n    },\n    moduleGetter,\n    appModuleName,\n    storeOptions\n  );\n}\n\nexport const loadView: LoadView = (moduleGetter, moduleName, viewName, Loading?: ComponentType<any>) => {\n  return function Wrap(props: any) {\n    const [Component, setComponent] = useState<ComponentType | null>(() => {\n      const moduleViewResult = getView(moduleGetter[moduleName], viewName);\n      if (isPromiseView<ComponentType>(moduleViewResult)) {\n        moduleViewResult.then(view => {\n          setComponent(view);\n        });\n        return null;\n      } else {\n        return moduleViewResult;\n      }\n    });\n    return Component ? <Component {...props} /> : Loading ? <Loading {...props} /> : null;\n  } as any;\n};\n\nfunction exportView<V extends ComponentType>(Component: V, model: Model, viewName: string, Loading?: ComponentType<any>): V {\n  if (isServer()) {\n    return Component;\n  } else {\n    const View: FunctionComponent<any> = function View(props: any) {\n      const [modelReady, setModelReady] = useState(() => {\n        const state = getClientStore().getState();\n        const moduleName = model.moduleName;\n        model(getClientStore()).then(() => {\n          if (!modelReady) {\n            setModelReady(true);\n          }\n        });\n        return !!state[moduleName];\n      });\n      useEffect(() => {\n        viewWillMount(model.moduleName, viewName);\n        return () => {\n          viewWillUnmount(model.moduleName, viewName);\n        };\n      }, []);\n      return modelReady ? <Component {...props} /> : Loading ? <Loading {...props} /> : null;\n    };\n    View.propTypes = Component.propTypes;\n    View.contextTypes = Component.contextTypes;\n    View.defaultProps = Component.defaultProps;\n    return View as any;\n  }\n}\n\nexport const exportModule: ExportModule<ComponentType<any>> = (moduleName, initState, ActionHandles, views, Loading?: ComponentType<any>) => {\n  const data = baseExportModule(moduleName, initState, ActionHandles, views);\n  const maps: typeof views = {} as any;\n  for (const key in data.views) {\n    if (data.views.hasOwnProperty(key)) {\n      maps[key] = exportView(data.views[key], data.model, key, Loading);\n    }\n  }\n  data.views = maps;\n  return data;\n};\n"],"file":"index.js"}