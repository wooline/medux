{"version":3,"sources":["../../src/index.tsx"],"names":["React","useEffect","useState","exportModule","baseExportModule","renderApp","baseRenderApp","renderSSR","baseRenderSSR","getView","isPromiseView","isServer","viewWillMount","viewWillUnmount","Provider","render","moduleGetter","appModuleName","storeOptions","store","appModel","appViews","ssrInitStoreKey","ReduxProvider","props","children","Main","data","getState","html","autoID","loadView","moduleName","viewName","Loading","onFocus","vid","onBlur","loader","Loader","moduleViewResult","then","Component","Object","keys","forEach","key","setView","view","subscriptions","didFocus","didBlur","navigation","addListener","remove"],"mappings":"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","sourcesContent":["import {ExportModule, LoadView, ModuleGetter, StoreOptions} from '@medux/core/types/export';\nimport React, {ComponentType, FunctionComponent, ReactNode, useEffect, useState} from 'react';\nimport {exportModule as baseExportModule, renderApp as baseRenderApp, renderSSR as baseRenderSSR, getView, isPromiseView, isServer, viewWillMount, viewWillUnmount} from '@medux/core';\n\nimport {Provider} from 'react-redux';\n\nexport function renderApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (Provider: ComponentType<{children: ReactNode}>, AppMainView: ComponentType<any>, ssrInitStoreKey: string) => void,\n  moduleGetter: M,\n  appModuleName: A,\n  storeOptions: StoreOptions\n): Promise<void> {\n  return baseRenderApp(\n    (\n      store,\n      appModel,\n      appViews: {\n        [key: string]: ComponentType<any>;\n      },\n      ssrInitStoreKey\n    ) => {\n      const ReduxProvider: ComponentType<{children: ReactNode}> = props => {\n        // eslint-disable-next-line react/prop-types\n        return <Provider store={store}>{props.children}</Provider>;\n      };\n      render(ReduxProvider, appViews.Main, ssrInitStoreKey);\n    },\n    moduleGetter,\n    appModuleName,\n    storeOptions\n  );\n}\n\nexport function renderSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (Provider: ComponentType<{children: ReactNode}>, AppMainView: ComponentType<any>) => any,\n  moduleGetter: M,\n  appModuleName: A,\n  storeOptions: StoreOptions = {}\n) {\n  return baseRenderSSR(\n    (\n      store,\n      appModel,\n      appViews: {\n        [key: string]: React.ComponentType;\n      },\n      ssrInitStoreKey\n    ) => {\n      const data = store.getState();\n      const ReduxProvider: ComponentType<{children: ReactNode}> = props => {\n        // eslint-disable-next-line react/prop-types\n        return <Provider store={store}>{props.children}</Provider>;\n      };\n      return {\n        ssrInitStoreKey,\n        data,\n        html: render(ReduxProvider, appViews.Main),\n      };\n    },\n    moduleGetter,\n    appModuleName,\n    storeOptions\n  );\n}\nlet autoID = 0;\nexport const loadView: LoadView = (moduleGetter, moduleName, viewName, Loading?: ComponentType<any>) => {\n  const onFocus = (vid: number) => viewWillMount(moduleName, viewName, vid + '');\n  const onBlur = (vid: number) => viewWillUnmount(moduleName, viewName, vid + '');\n  const loader: FunctionComponent<any> = function Loader(props: any) {\n    const [vid] = useState<number>(() => {\n      if (!isServer()) {\n        return autoID++;\n      } else {\n        return 0;\n      }\n    });\n    const [view, setView] = useState<{Component: ComponentType} | null>(() => {\n      const moduleViewResult = getView<ComponentType>(moduleGetter, moduleName, viewName);\n      if (isPromiseView<ComponentType>(moduleViewResult)) {\n        moduleViewResult.then(Component => {\n          Object.keys(loader).forEach(key => (Component[key] = loader[key]));\n          Object.keys(Component).forEach(key => (loader[key] = Component[key]));\n          setView({Component});\n        });\n        return null;\n      } else {\n        Object.keys(loader).forEach(key => (moduleViewResult[key] = loader[key]));\n        Object.keys(moduleViewResult).forEach(key => (loader[key] = moduleViewResult[key]));\n        return {Component: moduleViewResult};\n      }\n    });\n    useEffect(() => {\n      if (view) {\n        let subscriptions: {didFocus: null | {remove: Function}; didBlur: null | {remove: Function}} = {didFocus: null, didBlur: null};\n        if (props.navigation) {\n          subscriptions.didFocus = props.navigation.addListener('didFocus', () => onFocus(vid));\n          subscriptions.didBlur = props.navigation.addListener('didBlur', () => onBlur(vid));\n        }\n        onFocus(vid);\n\n        return () => {\n          subscriptions.didFocus && subscriptions.didFocus.remove();\n          subscriptions.didBlur && subscriptions.didBlur.remove();\n          onBlur(vid);\n        };\n      } else {\n        return void 0;\n      }\n    }, [view]);\n    return view ? <view.Component {...props} onFocus={onFocus} onBlur={onBlur} /> : Loading ? <Loading {...props} /> : null;\n  };\n\n  return loader as any;\n};\n\nexport const exportModule: ExportModule<ComponentType<any>> = baseExportModule;\n"],"file":"index.js"}