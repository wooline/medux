{"version":3,"sources":["../../src/index.tsx"],"names":["React","useState","useEffect","ReactDOM","renderToNodeStream","renderToString","Provider","createBrowserHistory","createMemoryHistory","withRouter","ConnectedRouter","connectRouter","routerMiddleware","renderApp","renderSSR","getView","isPromiseView","invalidview","viewWillMount","viewWillUnmount","isServer","getClientStore","exportModule","baseExportModule","buildApp","moduleGetter","appModuleName","storeOptions","container","history","reducers","router","Error","state","action","routerData","routerParser","routerInited","filterRouter","next","type","middlewares","unshift","store","appModel","appViews","ssrInitStoreKey","WithRouter","Main","app","render","window","hydrate","document","getElementById","buildSSR","initialEntries","renderToStream","data","getState","html","loadView","moduleName","viewName","Loading","Wrap","props","moduleViewResult","then","view","setComponent","Component","exportView","model","View","modelReady","setModelReady","propTypes","contextTypes","defaultProps","initState","ActionHandles","views","maps","key","hasOwnProperty"],"mappings":"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","sourcesContent":["import React, {ReactElement, ComponentType, FunctionComponent, useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {renderToNodeStream, renderToString} from 'react-dom/server';\nimport {Provider} from 'react-redux';\nimport {createBrowserHistory, createMemoryHistory} from 'history';\nimport {withRouter} from 'react-router-dom';\nimport {ConnectedRouter, connectRouter, routerMiddleware} from 'connected-react-router';\nimport {renderApp, renderSSR, getView, isPromiseView, invalidview, viewWillMount, viewWillUnmount, isServer, getClientStore, exportModule as baseExportModule} from '@medux/core';\nimport {Model, ModuleGetter, StoreOptions, LoadView, ExportModule} from '@medux/core/types/export';\n\nexport type RouterParser<T = any> = (nextRouter: T, prevRouter?: T) => T;\n\nexport function buildApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  moduleGetter: M,\n  appModuleName: A,\n  storeOptions: StoreOptions & {routerParser?: RouterParser} = {},\n  container: string | Element | ((component: ReactElement<any>) => void) = 'root'\n): Promise<void> {\n  const history = createBrowserHistory();\n  storeOptions.reducers = storeOptions.reducers || {};\n  if (storeOptions.reducers && storeOptions.reducers.router) {\n    throw new Error(\"the reducer name 'router' is not allowed\");\n  }\n  const router = connectRouter(history);\n  storeOptions.reducers.router = (state, action) => {\n    const routerData = router(state, action as any);\n    if (storeOptions.routerParser && state !== routerData) {\n      return storeOptions.routerParser(routerData, state);\n    } else {\n      return routerData;\n    }\n  };\n  // SSR需要数据是单向的，store->view，不能store->view->store->view，而view:ConnectedRouter初始化时会触发一次LOCATION_CHANGE\n  let routerInited = false;\n  const filterRouter = () => (next: Function) => (action: {type: string}) => {\n    if (action.type === '@@router/LOCATION_CHANGE') {\n      if (!routerInited) {\n        routerInited = true;\n        return action;\n      } else {\n        invalidview();\n      }\n    }\n    return next(action);\n  };\n  storeOptions.middlewares = storeOptions.middlewares || [];\n  storeOptions.middlewares.unshift(filterRouter, routerMiddleware(history));\n\n  return renderApp(\n    (\n      store,\n      appModel,\n      appViews: {\n        [key: string]: React.ComponentType<any>;\n      },\n      ssrInitStoreKey\n    ) => {\n      const WithRouter = withRouter(appViews.Main);\n      const app = (\n        <Provider store={store}>\n          <ConnectedRouter history={history}>\n            <WithRouter />\n          </ConnectedRouter>\n        </Provider>\n      );\n      if (typeof container === 'function') {\n        container(app);\n      } else {\n        const render = window[ssrInitStoreKey] ? ReactDOM.hydrate : ReactDOM.render;\n        render(app, typeof container === 'string' ? document.getElementById(container) : container);\n      }\n    },\n    moduleGetter,\n    appModuleName,\n    storeOptions\n  );\n}\n\nexport function buildSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  moduleGetter: M,\n  appModuleName: A,\n  initialEntries: string[],\n  storeOptions: StoreOptions & {routerParser?: RouterParser} = {},\n  renderToStream: boolean = false\n): Promise<{html: string | ReadableStream; data: any; ssrInitStoreKey: string}> {\n  const history = createMemoryHistory({initialEntries});\n  storeOptions.reducers = storeOptions.reducers || {};\n  if (storeOptions.reducers && storeOptions.reducers.router) {\n    throw new Error(\"the reducer name 'router' is not allowed\");\n  }\n  const router = connectRouter(history);\n  storeOptions.reducers.router = (state, action) => {\n    const routerData = router(state.router, action as any);\n    if (storeOptions.routerParser && state.router !== routerData) {\n      state.router = storeOptions.routerParser(routerData, state.router);\n    } else {\n      state.router = routerData;\n    }\n  };\n  let routerInited = false;\n  const filterRouter = () => (next: Function) => (action: {type: string}) => {\n    if (action.type === '@@router/LOCATION_CHANGE') {\n      if (!routerInited) {\n        routerInited = true;\n        return action;\n      } else {\n        invalidview();\n      }\n    }\n    return next(action);\n  };\n  storeOptions.middlewares = storeOptions.middlewares || [];\n  storeOptions.middlewares.unshift(filterRouter, routerMiddleware(history));\n  const render = renderToStream ? renderToNodeStream : renderToString;\n  return renderSSR(\n    (\n      store,\n      appModel,\n      appViews: {\n        [key: string]: React.ComponentType;\n      },\n      ssrInitStoreKey\n    ) => {\n      const data = store.getState();\n      return {\n        ssrInitStoreKey,\n        data,\n        html: render(\n          <Provider store={store}>\n            <ConnectedRouter history={history}>\n              <appViews.Main />\n            </ConnectedRouter>\n          </Provider>\n        ),\n      };\n    },\n    moduleGetter,\n    appModuleName,\n    storeOptions\n  );\n}\n\nexport const loadView: LoadView = (moduleGetter, moduleName, viewName, Loading?: ComponentType<any>) => {\n  return function Wrap(props: any) {\n    const [Component, setComponent] = useState<ComponentType | null>(() => {\n      const moduleViewResult = getView(moduleGetter[moduleName], viewName);\n      if (isPromiseView<ComponentType>(moduleViewResult)) {\n        moduleViewResult.then(view => {\n          setComponent(view);\n        });\n        return null;\n      } else {\n        return moduleViewResult;\n      }\n    });\n    return Component ? <Component {...props} /> : Loading ? <Loading {...props} /> : null;\n  } as any;\n};\n\nfunction exportView<V extends ComponentType>(Component: V, model: Model, viewName: string, Loading?: ComponentType<any>): V {\n  if (isServer()) {\n    return Component;\n  } else {\n    const View: FunctionComponent<any> = function View(props: any) {\n      const [modelReady, setModelReady] = useState(() => {\n        const state = getClientStore().getState();\n        const moduleName = model.moduleName;\n        model(getClientStore()).then(() => {\n          if (!modelReady) {\n            setModelReady(true);\n          }\n        });\n        return !!state[moduleName];\n      });\n      useEffect(() => {\n        viewWillMount(model.moduleName, viewName);\n        return () => {\n          viewWillUnmount(model.moduleName, viewName);\n        };\n      }, []);\n      return modelReady ? <Component {...props} /> : Loading ? <Loading {...props} /> : null;\n    };\n    View.propTypes = Component.propTypes;\n    View.contextTypes = Component.contextTypes;\n    View.defaultProps = Component.defaultProps;\n    return View as any;\n  }\n}\n\nexport const exportModule: ExportModule<ComponentType<any>> = (moduleName, initState, ActionHandles, views, Loading?: ComponentType<any>) => {\n  const data = baseExportModule(moduleName, initState, ActionHandles, views);\n  const maps: typeof views = {} as any;\n  for (const key in data.views) {\n    if (data.views.hasOwnProperty(key)) {\n      maps[key] = exportView(data.views[key], data.model, key, Loading);\n    }\n  }\n  data.views = maps;\n  return data;\n};\n"],"file":"index.js"}