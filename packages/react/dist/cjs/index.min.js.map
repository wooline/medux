{"version":3,"file":"index.min.js","sources":["../../src/index.tsx"],"sourcesContent":["import {LoadView as BaseLoadView, ExportModule, HistoryProxy, ModuleGetter, StoreOptions} from '@medux/core/types/export';\nimport React, {ComponentType, FC, ReactNode, useState} from 'react';\nimport {exportModule as baseExportModule, renderApp as baseRenderApp, renderSSR as baseRenderSSR, getView, isPromiseView} from '@medux/core';\n\nimport {Provider} from 'react-redux';\n\nexport function renderApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (Provider: ComponentType<{children: ReactNode}>, AppMainView: any, ssrInitStoreKey: string) => void,\n  moduleGetter: M,\n  appModuleName: A,\n  historyProxy: HistoryProxy,\n  storeOptions: StoreOptions\n) {\n  return baseRenderApp(\n    (\n      store,\n      appModel,\n      appViews: {\n        [key: string]: ComponentType<any>;\n      },\n      ssrInitStoreKey\n    ) => {\n      const ReduxProvider: ComponentType<{children: ReactNode}> = props => {\n        // eslint-disable-next-line react/prop-types\n        return <Provider store={store}>{props.children}</Provider>;\n      };\n      render(ReduxProvider, appViews.Main, ssrInitStoreKey);\n    },\n    moduleGetter,\n    appModuleName,\n    historyProxy,\n    storeOptions\n  );\n}\n\nexport function renderSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (Provider: ComponentType<{children: ReactNode}>, AppMainView: ComponentType<any>) => any,\n  moduleGetter: M,\n  appModuleName: A,\n  historyProxy: HistoryProxy,\n  storeOptions: StoreOptions = {}\n) {\n  return baseRenderSSR(\n    (\n      store,\n      appModel,\n      appViews: {\n        [key: string]: React.ComponentType;\n      },\n      ssrInitStoreKey\n    ) => {\n      const data = store.getState();\n      const ReduxProvider: ComponentType<{children: ReactNode}> = props => {\n        // eslint-disable-next-line react/prop-types\n        return <Provider store={store}>{props.children}</Provider>;\n      };\n      return {\n        store,\n        ssrInitStoreKey,\n        data,\n        html: render(ReduxProvider, appViews.Main),\n      };\n    },\n    moduleGetter,\n    appModuleName,\n    historyProxy,\n    storeOptions\n  );\n}\n\nexport type LoadView<T extends ModuleGetter> = BaseLoadView<T, {forwardRef?: boolean}, ComponentType<any>>;\n\nexport const loadView: LoadView<any> = (moduleName, viewName, options, Loading) => {\n  const {forwardRef, ...modelOptions} = options || {};\n  const Loader: FC<any> = function ViewLoader(props: any) {\n    const [view, setView] = useState<{Component: ComponentType} | null>(() => {\n      const moduleViewResult = getView<ComponentType>(moduleName, viewName, modelOptions);\n      if (isPromiseView<ComponentType>(moduleViewResult)) {\n        moduleViewResult.then(Component => {\n          // loader.propTypes = Component.propTypes;\n          // loader.contextTypes = Component.contextTypes;\n          // loader.defaultProps = Component.defaultProps;\n          // Object.keys(loader).forEach(key => (Component[key] = loader[key]));\n          // Object.keys(Component).forEach(key => (loader[key] = Component[key]));\n          setView({Component});\n        });\n        return null;\n      } else {\n        // loader.propTypes = moduleViewResult.propTypes;\n        // loader.contextTypes = moduleViewResult.contextTypes;\n        // loader.defaultProps = moduleViewResult.defaultProps;\n        // Object.keys(loader).forEach(key => (moduleViewResult[key] = loader[key]));\n        // Object.keys(moduleViewResult).forEach(key => (loader[key] = moduleViewResult[key]));\n        return {Component: moduleViewResult};\n      }\n    });\n    const {forwardRef, ...other} = props;\n    const ref = forwardRef ? {ref: forwardRef} : {};\n    return view ? <view.Component {...other} {...ref} /> : Loading ? <Loading {...props} /> : null;\n  };\n  // eslint-disable-next-line react/display-name\n  const Component = forwardRef ? React.forwardRef((props, ref) => <Loader {...props} forwardRef={ref} />) : Loader;\n\n  return Component as any;\n};\n776002663516496;\n// export const loadView: LoadView<any> = (moduleName, viewName, options, Loading) => {\n//   return class Loader extends React.Component {\n//     public state: LoadViewState = {\n//       Component: null,\n//     };\n//     public constructor(props: any, context?: any) {\n//       super(props, context);\n//       const moduleViewResult = getView<ComponentType>(moduleName, viewName, options);\n//       if (isPromiseView<ComponentType>(moduleViewResult)) {\n//         moduleViewResult.then(Component => {\n//           Object.keys(Loader).forEach(key => (Component[key] = Loader[key]));\n//           Object.keys(Component).forEach(key => (Loader[key] = Component[key]));\n//           this.setState({\n//             Component,\n//           });\n//         });\n//       } else {\n//         Object.keys(Loader).forEach(key => (moduleViewResult[key] = Loader[key]));\n//         Object.keys(moduleViewResult).forEach(key => (Loader[key] = moduleViewResult[key]));\n//         this.state = {\n//           Component: moduleViewResult,\n//         };\n//       }\n//     }\n//     public render() {\n//       const {Component} = this.state;\n//       return Component ? <Component {...this.props} /> : Loading ? <Loading {...this.props} /> : null;\n//     }\n//   } as any;\n// };\n\nexport const exportModule: ExportModule<ComponentType<any>> = baseExportModule;\n"],"names":["exportModule","baseExportModule","moduleName","viewName","options","Loading","forwardRef","modelOptions","Loader","props","useState","moduleViewResult","getView","isPromiseView","then","Component","setView","view","other","ref","React","render","moduleGetter","appModuleName","historyProxy","storeOptions","baseRenderApp","store","appModel","appViews","ssrInitStoreKey","Provider","children","Main","baseRenderSSR","data","getState","html"],"mappings":"iVAyIaA,EAAiDC,uDAjEvB,SAACC,EAAYC,EAAUC,EAASC,SAC/BD,GAAW,GAA1CE,IAAAA,WAAeC,sBAChBC,EAAkB,SAAoBC,SAClBC,YAA4C,eAC5DC,EAAmBC,UAAuBV,EAAYC,EAAUI,UAClEM,gBAA6BF,IAC/BA,EAAiBG,MAAK,SAAAC,GAMpBC,EAAQ,CAACD,UAAAA,OAEJ,MAOA,CAACA,UAAWJ,MAlBhBM,OAAMD,OAqBNV,EAAwBG,EAAxBH,WAAeY,IAAST,kBACzBU,EAAMb,EAAa,CAACa,IAAKb,GAAc,UACtCW,EAAOG,gBAACH,EAAKF,eAAcG,EAAWC,IAAUd,EAAUe,gBAACf,EAAYI,GAAY,aAG1EH,EAAac,EAAMd,YAAW,SAACG,EAAOU,UAAQC,gBAACZ,OAAWC,GAAOH,WAAYa,QAAWX,qBA/FrG,SACLa,EACAC,EACAC,EACAC,EACAC,UAEOC,aACL,SACEC,EACAC,EACAC,EAGAC,GAMAT,GAJ4D,SAAAZ,UAEnDW,gBAACW,YAASJ,MAAOA,GAAQlB,EAAMuB,YAElBH,EAASI,KAAMH,KAEvCR,EACAC,EACAC,EACAC,sBAIG,SACLJ,EACAC,EACAC,EACAC,EACAC,mBAAAA,IAAAA,EAA6B,IAEtBS,aACL,SACEP,EACAC,EACAC,EAGAC,OAEMK,EAAOR,EAAMS,iBAKZ,CACLT,MAAAA,EACAG,gBAAAA,EACAK,KAAAA,EACAE,KAAMhB,GARoD,SAAAZ,UAEnDW,gBAACW,YAASJ,MAAOA,GAAQlB,EAAMuB,YAMVH,EAASI,SAGzCX,EACAC,EACAC,EACAC"}