import {routeChangeAction, RouteData, Location} from 'src/index';
import {routeReducer} from 'src/store';

describe('route', () => {
  test('routeReducer', () => {
    let location: Location = {url: '/', pathname: '/', action: 'PUSH', key: '123'};
    const data: RouteData = {views: {aaa: {bbb: true}}, params: {}, paths: ['aaa', 'bbb'], action: 'PUSH', key: '123'};
    let route = routeReducer(undefined, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/'],
      stack: ['/'],
      location,
      data,
    });
    location = {url: '/home', pathname: '/home', action: 'PUSH', key: '123'};
    route = routeReducer(route, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/home', '123|/'],
      stack: ['/home', '/'],
      location,
      data,
    });
    location = {url: '/home?aaa=1', pathname: '/home', action: 'PUSH', key: '123'};
    route = routeReducer(route, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/home?aaa=1', '123|/home', '123|/'],
      stack: ['/home', '/'],
      location,
      data,
    });
    location = {url: '/home?aaa=2', pathname: '/home', action: 'PUSH', key: '123'};
    route = routeReducer(route, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/home?aaa=2', '123|/home?aaa=1', '123|/home', '123|/'],
      stack: ['/home', '/'],
      location,
      data,
    });
    location = {url: '/index?aaa=3', pathname: '/index', action: 'PUSH', key: '123'};
    route = routeReducer(route, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/index?aaa=3', '123|/home?aaa=2', '123|/home?aaa=1', '123|/home', '123|/'],
      stack: ['/index', '/home', '/'],
      location,
      data,
    });
    location = {url: '/home?aaa=3', pathname: '/home', action: 'REPLACE', key: '123'};
    route = routeReducer(route, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/home?aaa=3', '123|/home?aaa=2', '123|/home?aaa=1', '123|/home', '123|/'],
      stack: ['/home', '/'],
      location,
      data,
    });
    location = {url: '/index?aaa=3', pathname: '/index', action: 'REPLACE', key: '123'};
    route = routeReducer(route, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/index?aaa=3', '123|/home?aaa=2', '123|/home?aaa=1', '123|/home', '123|/'],
      stack: ['/index', '/home', '/'],
      location,
      data,
    });
    location = {url: '/index?aaa=4', pathname: '/index', action: 'REPLACE', key: '123'};
    route = routeReducer(route, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/index?aaa=4', '123|/home?aaa=2', '123|/home?aaa=1', '123|/home', '123|/'],
      stack: ['/index', '/home', '/'],
      location,
      data,
    });
    location = {url: '/index?aaa=5', pathname: '/index', action: 'POP', key: '123'};
    route = routeReducer(route, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/index?aaa=5', '123|/home?aaa=1', '123|/home', '123|/'],
      stack: ['/index', '/home', '/'],
      location,
      data,
    });
    location = {url: '/index?aaa=6', pathname: '/index', action: 'POP1' as any, key: '123'};
    route = routeReducer(route, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/index?aaa=6', '123|/home', '123|/'],
      stack: ['/index', '/home', '/'],
      location,
      data,
    });
    location = {url: '/doc', pathname: '/doc', action: 'POP2' as any, key: '123'};
    route = routeReducer(route, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/doc'],
      stack: ['/doc'],
      location,
      data,
    });
    location = {url: '/user', pathname: '/user', action: 'POP3' as any, key: '123'};
    route = routeReducer(route, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/user'],
      stack: ['/user'],
      location,
      data,
    });
    location = {url: '/index?aaa=4', pathname: '/index', action: 'RELAUNCH', key: '123'};
    route = routeReducer(route, routeChangeAction(location, data));
    expect(route).toEqual({
      history: ['123|/index?aaa=4'],
      stack: ['/index'],
      location,
      data,
    });
  });
});
