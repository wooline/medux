{"version":3,"sources":["../../src/store.ts"],"names":["MetaData","NSP","client","isPromise","ActionTypes","errorAction","routeChangeAction","applyMiddleware","compose","createStore","injectModel","isPlainObject","getActionData","action","arr","Object","keys","filter","key","length","undefined","data","bindHistory","store","history","inTimeTravelling","handleLocationChange","location","getState","route","equal","locationToRouteData","dispatch","subscribe","storeRouteState","getLocation","patch","buildStore","preloadedState","storeReducers","storeMiddlewares","storeEnhancers","defaultRouteParams","Error","state","type","F_ROUTE_CHANGE","payload","combineReducers","rootState","meta","_medux_","prevState","currentState","forEach","moduleName","handlersCommon","reducerMap","handlersEvery","replace","RegExp","handlers","handlerModules","orderList","priority","fun","appModuleName","unshift","push","__isHandler__","moduleNameMap","changed","some","middleware","next","originalAction","isServer","split","M_LOADING","effectMap","promiseResults","effectResult","decorators","__decorators__","results","decorator","index","__decoratorResults__","then","reslove","reject","Promise","all","preLoadMiddleware","actionName","moduleGetter","initModel","middlewareEnhancer","enhancer","newCreateStore","newStore","modelStore","router","injectedModules","currentViews","enhancers","isDev","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION__OPTIONS","clientStore","addEventListener","event","reason"],"mappings":"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","sourcesContent":["import {Action, BaseModelState, MetaData, ModelStore, NSP, RouteData, RouteState, client, isPromise} from './basic';\nimport {ActionTypes, errorAction, routeChangeAction} from './actions';\nimport {Middleware, ReducersMapObject, StoreEnhancer, applyMiddleware, compose, createStore} from 'redux';\n\nimport {injectModel} from './module';\nimport {isPlainObject} from './sprite';\n\n/**\n * dispatch push action\n * middleware 拦截并调用history.push\n * history触发侦听器，dispatch change action\n * store侦听器，判断是否时光\n */\n\n// let invalidViewTimer: number;\n\n// function checkInvalidview() {\n//   invalidViewTimer = 0;\n//   const currentViews = MetaData.clientStore._medux_.currentViews;\n//   const views: DisplayViews = {};\n//   for (const moduleName in currentViews) {\n//     if (currentViews.hasOwnProperty(moduleName)) {\n//       const element = currentViews[moduleName];\n//       for (const viewname in element) {\n//         if (element[viewname]) {\n//           const n = Object.keys(element[viewname]).length;\n//           if (n) {\n//             if (!views[moduleName]) {\n//               views[moduleName] = {};\n//             }\n//             views[moduleName][viewname] = true;\n//           }\n//         }\n//       }\n//     }\n//   }\n//   // MetaData.clientStore.dispatch(viewInvalidAction(views));\n// }\n\n// export function invalidview() {\n//   if (MetaData.isServer) {\n//     return;\n//   }\n//   if (!invalidViewTimer) {\n//     invalidViewTimer = setTimeout(checkInvalidview, 300);\n//   }\n// }\n\n// export function viewWillMount(moduleName: string, viewName: string, vid: string) {\n//   if (MetaData.isServer) {\n//     return;\n//   }\n//   const currentViews = MetaData.clientStore._medux_.currentViews;\n//   if (!currentViews[moduleName]) {\n//     currentViews[moduleName] = {[viewName]: {[vid]: true}};\n//   } else {\n//     const views = currentViews[moduleName];\n//     if (!views[viewName]) {\n//       views[viewName] = {[vid]: true};\n//     } else {\n//       views[viewName][vid] = true;\n//     }\n//   }\n//   invalidview();\n// }\n\n// export function viewWillUnmount(moduleName: string, viewName: string, vid: string) {\n//   if (MetaData.isServer) {\n//     return;\n//   }\n//   const currentViews = MetaData.clientStore._medux_.currentViews;\n//   if (currentViews[moduleName] && currentViews[moduleName][viewName]) {\n//     const views = currentViews[moduleName][viewName];\n//     delete views[vid];\n//   }\n//   invalidview();\n// }\n\nexport function getActionData<T>(action: Action): T {\n  const arr = Object.keys(action).filter(key => key !== 'type' && key !== 'priority' && key !== 'time');\n  if (arr.length === 0) {\n    return undefined as any;\n  } else if (arr.length === 1) {\n    return action[arr[0]];\n  } else {\n    const data = {...action};\n    delete data['type'];\n    delete data['priority'];\n    delete data['time'];\n    return data as any;\n  }\n}\nexport interface HistoryProxy<L = any> {\n  getLocation(): L;\n  subscribe(listener: (location: L) => void): void;\n  locationToRouteData(location: L): RouteData;\n  equal(a: L, b: L): boolean;\n  patch(location: L, routeData: RouteData): void;\n}\n\nfunction bindHistory<L>(store: ModelStore, history: HistoryProxy<L>) {\n  let inTimeTravelling = false;\n  const handleLocationChange = (location: L) => {\n    if (!inTimeTravelling) {\n      const {route}: {route: RouteState} = store.getState() as any;\n      if (route) {\n        if (history.equal(route.location, location)) {\n          return;\n        }\n      }\n      const data = history.locationToRouteData(location);\n      store.dispatch(routeChangeAction({location, data}));\n    } else {\n      inTimeTravelling = false;\n    }\n  };\n  history.subscribe(handleLocationChange);\n  store.subscribe(() => {\n    const storeRouteState: RouteState<L> = store.getState().route;\n    if (!history.equal(storeRouteState.location, history.getLocation())) {\n      inTimeTravelling = true;\n      history.patch(storeRouteState.location, storeRouteState.data);\n    }\n  });\n  handleLocationChange(history.getLocation());\n}\n\nexport function buildStore(\n  history: HistoryProxy<any>,\n  preloadedState: {[key: string]: any} = {},\n  storeReducers: ReducersMapObject<any, any> = {},\n  storeMiddlewares: Middleware[] = [],\n  storeEnhancers: StoreEnhancer[] = [],\n  defaultRouteParams: {[moduleName: string]: {[key: string]: any} | undefined} = {}\n): ModelStore {\n  if (!isPlainObject(preloadedState)) {\n    throw new Error('preloadedState must be plain objects!');\n  }\n  if (!isPlainObject(storeReducers)) {\n    throw new Error('storeReducers must be plain objects!');\n  }\n  if (storeReducers.route) {\n    throw new Error(\"the reducer name 'route' is not allowed\");\n  }\n  MetaData.defaultRouteParams = defaultRouteParams;\n  storeReducers.route = (state: RouteState, action: Action) => {\n    if (action.type === ActionTypes.F_ROUTE_CHANGE) {\n      const payload: RouteState = getActionData(action);\n      if (!state) {\n        return payload;\n      }\n      return {...state, ...payload};\n    }\n    return state;\n  };\n  let store: ModelStore;\n  const combineReducers = (rootState: {[moduleName: string]: BaseModelState}, action: Action) => {\n    if (!store) {\n      return rootState;\n    }\n    const meta = store._medux_;\n    meta.prevState = rootState;\n    const currentState = {...rootState};\n    meta.currentState = currentState;\n    Object.keys(storeReducers).forEach(moduleName => {\n      currentState[moduleName] = storeReducers[moduleName](currentState[moduleName], action);\n    });\n    const handlersCommon = meta.reducerMap[action.type] || {};\n    // 支持泛监听，形如 */loading\n    const handlersEvery = meta.reducerMap[action.type.replace(new RegExp(`[^${NSP}]+`), '*')] || {};\n    const handlers = {...handlersCommon, ...handlersEvery};\n    const handlerModules = Object.keys(handlers);\n\n    if (handlerModules.length > 0) {\n      const orderList: string[] = []; //\n      const priority: string[] = action.priority ? [...action.priority] : [];\n      handlerModules.forEach(moduleName => {\n        const fun = handlers[moduleName];\n        if (moduleName === MetaData.appModuleName) {\n          orderList.unshift(moduleName);\n        } else {\n          orderList.push(moduleName);\n        }\n        if (!fun.__isHandler__) {\n          priority.unshift(moduleName);\n        }\n      });\n      orderList.unshift(...priority);\n      const moduleNameMap: {[key: string]: boolean} = {};\n      orderList.forEach(moduleName => {\n        if (!moduleNameMap[moduleName]) {\n          moduleNameMap[moduleName] = true;\n          const fun = handlers[moduleName];\n          currentState[moduleName] = fun(getActionData(action));\n        }\n      });\n    }\n    const changed = Object.keys(rootState).length !== Object.keys(currentState).length || Object.keys(rootState).some(moduleName => rootState[moduleName] !== currentState[moduleName]);\n    meta.prevState = changed ? currentState : rootState;\n    return meta.prevState;\n  };\n\n  const middleware = () => (next: Function) => (originalAction: Action) => {\n    if (MetaData.isServer) {\n      if (originalAction.type.split(NSP)[1] === ActionTypes.M_LOADING) {\n        return originalAction;\n      }\n    }\n    const action: Action = next(originalAction);\n    const handlersCommon = store._medux_.effectMap[action.type] || {};\n    // 支持泛监听，形如 */loading\n    const handlersEvery = store._medux_.effectMap[action.type.replace(new RegExp(`[^${NSP}]+`), '*')] || {};\n    const handlers = {...handlersCommon, ...handlersEvery};\n    const handlerModules = Object.keys(handlers);\n\n    if (handlerModules.length > 0) {\n      const orderList: string[] = action.priority ? [...action.priority] : [];\n      handlerModules.forEach(moduleName => {\n        const fun = handlers[moduleName];\n        if (fun.__isHandler__) {\n          orderList.push(moduleName);\n        } else {\n          orderList.unshift(moduleName);\n        }\n      });\n      const moduleNameMap: {[key: string]: boolean} = {};\n      const promiseResults: Promise<any>[] = [];\n      orderList.forEach(moduleName => {\n        if (!moduleNameMap[moduleName]) {\n          moduleNameMap[moduleName] = true;\n          const fun = handlers[moduleName];\n          const effectResult = fun(getActionData(action));\n          const decorators = fun.__decorators__;\n          if (decorators) {\n            const results: any[] = [];\n            decorators.forEach((decorator, index) => {\n              results[index] = decorator[0](action, moduleName, effectResult);\n            });\n            fun.__decoratorResults__ = results;\n          }\n\n          effectResult.then(\n            (reslove: any) => {\n              if (decorators) {\n                const results = fun.__decoratorResults__ || [];\n                decorators.forEach((decorator, index) => {\n                  if (decorator[1]) {\n                    decorator[1]('Resolved', results[index], reslove);\n                  }\n                });\n                fun.__decoratorResults__ = undefined;\n              }\n              return reslove;\n            },\n            (reject: any) => {\n              if (decorators) {\n                const results = fun.__decoratorResults__ || [];\n                decorators.forEach((decorator, index) => {\n                  if (decorator[1]) {\n                    decorator[1]('Rejected', results[index], reject);\n                  }\n                });\n                fun.__decoratorResults__ = undefined;\n              }\n            }\n          );\n          promiseResults.push(effectResult);\n        }\n      });\n      if (promiseResults.length) {\n        return Promise.all(promiseResults);\n      }\n    }\n    return action;\n  };\n\n  const preLoadMiddleware = () => (next: Function) => (action: Action) => {\n    const [moduleName, actionName] = action.type.split(NSP);\n    if (moduleName && actionName && MetaData.moduleGetter[moduleName]) {\n      const initModel = injectModel(MetaData.moduleGetter, moduleName, store);\n      if (isPromise(initModel)) {\n        return initModel.then(() => next(action));\n      }\n    }\n    return next(action);\n  };\n\n  const middlewareEnhancer = applyMiddleware(preLoadMiddleware, ...storeMiddlewares, middleware);\n  const enhancer: StoreEnhancer = newCreateStore => {\n    return (...args) => {\n      const newStore = newCreateStore(...args);\n      const modelStore: ModelStore = newStore as any;\n      modelStore._medux_ = {\n        prevState: {router: null},\n        currentState: {router: null},\n        reducerMap: {},\n        effectMap: {},\n        injectedModules: {},\n        currentViews: {},\n      };\n      return newStore;\n    };\n  };\n  const enhancers = [...storeEnhancers, middlewareEnhancer, enhancer];\n  if (MetaData.isDev && client && client.__REDUX_DEVTOOLS_EXTENSION__) {\n    enhancers.push(client.__REDUX_DEVTOOLS_EXTENSION__(client.__REDUX_DEVTOOLS_EXTENSION__OPTIONS));\n  }\n  store = createStore(combineReducers as any, preloadedState, compose(...enhancers));\n  bindHistory(store, history);\n  MetaData.clientStore = store;\n  if (client) {\n    if ('onerror' in client) {\n      client.addEventListener(\n        'error',\n        event => {\n          store.dispatch(errorAction(event));\n        },\n        true\n      );\n    }\n    if ('onunhandledrejection' in client) {\n      client.addEventListener(\n        'unhandledrejection',\n        event => {\n          store.dispatch(errorAction(event.reason));\n        },\n        true\n      );\n    }\n  }\n  return store;\n}\n"],"file":"store.js"}