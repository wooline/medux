{"version":3,"sources":["../../src/loading.ts"],"names":["MetaData","NSP","TaskCountEvent","TaskCounter","ActionTypes","loadings","depthTime","setLoadingDepthTime","second","setLoading","item","moduleName","group","appModuleName","isServer","key","addListener","e","store","clientStore","actions","actionCreatorMap","M_LOADING","action","data","dispatch","addItem"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,GAAlB,QAA4B,SAA5B;AACA,SAAQC,cAAR,EAAwBC,WAAxB,QAA0C,UAA1C;AAEA,SAAQC,WAAR,QAA0B,WAA1B;AAEA,IAAMC,QAA6C,GAAG,EAAtD;AAEA,IAAIC,SAAS,GAAG,CAAhB;AAEA,OAAO,SAASC,mBAAT,CAA6BC,MAA7B,EAA6C;AAClDF,EAAAA,SAAS,GAAGE,MAAZ;AACD;AACD,OAAO,SAASC,UAAT,CAA4CC,IAA5C,EAAqDC,UAArD,EAAkGC,KAAlG,EAA+H;AAAA,MAA1ED,UAA0E;AAA1EA,IAAAA,UAA0E,GAArDX,QAAQ,CAACa,aAA4C;AAAA;;AAAA,MAA7BD,KAA6B;AAA7BA,IAAAA,KAA6B,GAAb,QAAa;AAAA;;AACpI,MAAIZ,QAAQ,CAACc,QAAb,EAAuB;AACrB,WAAOJ,IAAP;AACD;;AACD,MAAMK,GAAG,GAAGJ,UAAU,GAAGV,GAAb,GAAmBW,KAA/B;;AACA,MAAI,CAACP,QAAQ,CAACU,GAAD,CAAb,EAAoB;AAClBV,IAAAA,QAAQ,CAACU,GAAD,CAAR,GAAgB,IAAIZ,WAAJ,CAAgBG,SAAhB,CAAhB;AACAD,IAAAA,QAAQ,CAACU,GAAD,CAAR,CAAcC,WAAd,CAA0Bd,cAA1B,EAA0C,UAAAe,CAAC,EAAI;AAC7C,UAAMC,KAAK,GAAGlB,QAAQ,CAACmB,WAAvB;;AACA,UAAID,KAAJ,EAAW;AAAA;;AACT,YAAME,OAAO,GAAGpB,QAAQ,CAACqB,gBAAT,CAA0BV,UAA1B,EAAsCP,WAAW,CAACkB,SAAlD,CAAhB;AACA,YAAMC,MAAM,GAAGH,OAAO,0BAAGR,KAAH,IAAWK,CAAC,CAACO,IAAb,YAAtB;AACAN,QAAAA,KAAK,CAACO,QAAN,CAAeF,MAAf;AACD;AACF,KAPD;AAQD;;AACDlB,EAAAA,QAAQ,CAACU,GAAD,CAAR,CAAcW,OAAd,CAAsBhB,IAAtB;AACA,SAAOA,IAAP;AACD","sourcesContent":["import {MetaData, NSP} from './basic';\nimport {TaskCountEvent, TaskCounter} from './sprite';\n\nimport {ActionTypes} from './actions';\n\nconst loadings: {[moduleName: string]: TaskCounter} = {};\n\nlet depthTime = 2;\n\nexport function setLoadingDepthTime(second: number) {\n  depthTime = second;\n}\nexport function setLoading<T extends Promise<any>>(item: T, moduleName: string = MetaData.appModuleName, group: string = 'global'): T {\n  if (MetaData.isServer) {\n    return item;\n  }\n  const key = moduleName + NSP + group;\n  if (!loadings[key]) {\n    loadings[key] = new TaskCounter(depthTime);\n    loadings[key].addListener(TaskCountEvent, e => {\n      const store = MetaData.clientStore;\n      if (store) {\n        const actions = MetaData.actionCreatorMap[moduleName][ActionTypes.M_LOADING];\n        const action = actions({[group]: e.data});\n        store.dispatch(action);\n      }\n    });\n  }\n  loadings[key].addItem(item);\n  return item;\n}\n"],"file":"loading.js"}