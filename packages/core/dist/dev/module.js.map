{"version":3,"sources":["../../src/module.ts"],"names":["MetaData","injectActions","isPromise","reducer","buildStore","errorAction","exportModule","moduleName","initState","ActionHandles","views","model","store","hasInjected","_medux_","injectedModules","moduleState","getState","handlers","actions","initAction","INIT","result","dispatch","catch","err","then","BaseModelHandlers","presetData","isModule","action","callThisAction","handler","actionCreatorMap","__actionName__","payload","UPDATE","LOADING","state","loading","updateState","prevState","currentState","isPromiseModule","module","isPromiseView","moduleView","exportActions","moduleGetter","Object","keys","reduce","maps","Proxy","get","target","key","data","type","set","injectModel","default","getView","viewName","view","isServer","initModel","clientStore","getModuleByName","getModuleListByNames","moduleNames","preModules","map","Promise","resolve","all","renderApp","render","appModuleName","storeOptions","ssrInitStoreKey","initData","window","reducers","middlewares","enhancers","preModuleNames","push","filter","appModule","renderSSR","initAppModel"],"mappings":"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","sourcesContent":["import {Action, ActionCreatorList, ActionHandler, BaseModelState, MetaData, ModelStore, injectActions, isPromise, reducer} from './basic';\nimport {Middleware, ReducersMapObject, Store, StoreEnhancer} from 'redux';\n\nimport {buildStore} from './store';\nimport {errorAction} from './actions';\n\nexport interface Model<ModelState extends BaseModelState = BaseModelState> {\n  moduleName: string;\n  initState: ModelState;\n  (store: ModelStore): void | Promise<void>;\n}\n\nexport interface Module<M extends Model = Model, VS extends {[key: string]: any} = {[key: string]: any}, AS extends ActionCreatorList = {}, N extends string = string> {\n  default: {\n    moduleName: N;\n    model: M;\n    views: VS;\n    actions: AS;\n  };\n}\n\nexport interface ModuleGetter {\n  [moduleName: string]: () => Module | Promise<Module>;\n}\n\ntype ReturnModule<T> = T extends () => Promise<infer R> ? R : T extends () => infer R ? R : never;\n// export type ReturnViews<T extends () => any> = T extends () => Promise<Module<Model, infer R>> ? R : T extends () => Module<Model, infer R> ? R : never;\ntype ModuleName<M extends any> = M['default']['moduleName'];\ntype ModuleStates<M extends any> = M['default']['model']['initState'];\ntype ModuleViews<M extends any> = M['default']['views'];\ntype ModuleActions<M extends any> = M['default']['actions'];\ntype MountViews<M extends any> = {[key in keyof M['default']['views']]?: boolean};\nexport type RootState<G extends ModuleGetter> = {\n  views: {[key in keyof G]?: MountViews<ReturnModule<G[key]>>};\n} & {[key in keyof G]?: ModuleStates<ReturnModule<G[key]>>};\n\nexport type ExportModule<Component> = <S extends BaseModelState, V extends {[key: string]: Component}, T extends BaseModelHandlers<S, any>, N extends string>(\n  moduleName: N,\n  initState: S,\n  ActionHandles: {new (initState: S, presetData?: any): T},\n  views: V\n) => Module<Model<S>, V, Actions<T>, N>['default'];\n\nexport const exportModule: ExportModule<any> = (moduleName, initState, ActionHandles, views) => {\n  const model = (store: ModelStore) => {\n    const hasInjected = store._medux_.injectedModules[moduleName];\n    if (!hasInjected) {\n      store._medux_.injectedModules[moduleName] = true;\n      const moduleState: BaseModelState = store.getState()[moduleName];\n      const handlers = new ActionHandles(initState, moduleState);\n      (handlers as any).moduleName = moduleName;\n      (handlers as any).store = store;\n      const actions = injectActions(store, moduleName, handlers as any);\n      (handlers as any).actions = actions;\n      if (!moduleState) {\n        const initAction = actions.INIT((handlers as any).initState);\n        const result = store.dispatch(initAction);\n        if (isPromise(result)) {\n          return result\n            .catch(err => {\n              return store.dispatch(errorAction(err)) as any;\n            })\n            .then(() => void 0);\n        }\n      }\n    }\n    return void 0;\n  };\n  model.moduleName = moduleName;\n  model.initState = initState;\n  const actions = {} as any;\n  return {\n    moduleName,\n    model,\n    views,\n    actions,\n  };\n};\n\nexport class BaseModelHandlers<S extends BaseModelState, R> {\n  protected readonly initState: S;\n  protected readonly moduleName: string = '';\n  protected readonly store: ModelStore = null as any;\n  protected readonly actions: Actions<this> = null as any;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public constructor(initState: S, presetData?: any) {\n    initState.isModule = true;\n    this.initState = initState;\n  }\n\n  protected get state(): S {\n    return this.store._medux_.prevState[this.moduleName];\n  }\n\n  protected get rootState(): R {\n    return this.store._medux_.prevState as R;\n  }\n\n  protected get currentState(): S {\n    return this.store._medux_.currentState[this.moduleName];\n  }\n\n  protected get currentRootState(): R {\n    return this.store._medux_.currentState as R;\n  }\n\n  protected dispatch(action: Action): Action | Promise<void> {\n    return this.store.dispatch(action) as any;\n  }\n\n  protected callThisAction<T extends any[]>(handler: (...args: T) => any, ...rest: T): {type: string; playload?: any} {\n    const actions = MetaData.actionCreatorMap[this.moduleName];\n    return actions[(handler as ActionHandler).__actionName__](rest[0]);\n  }\n\n  @reducer\n  protected INIT(payload: S): S {\n    return payload;\n  }\n\n  @reducer\n  protected UPDATE(payload: S): S {\n    return payload;\n  }\n\n  @reducer\n  protected LOADING(payload: {[group: string]: string}): S {\n    const state = this.state;\n    if (!state) {\n      return state;\n    }\n    return {\n      ...state,\n      loading: {...state.loading, ...payload},\n    };\n  }\n\n  protected updateState(payload: Partial<S>) {\n    this.dispatch(this.callThisAction(this.UPDATE, {...this.state, ...payload}));\n  }\n}\n\ntype Handler<F> = F extends (...args: infer P) => any\n  ? (\n      ...args: P\n    ) => {\n      type: string;\n    }\n  : never;\n\nexport type Actions<Ins> = {[K in keyof Ins]: Ins[K] extends (...args: any[]) => any ? Handler<Ins[K]> : never};\n\nexport function isPromiseModule(module: Module | Promise<Module>): module is Promise<Module> {\n  return typeof module['then'] === 'function';\n}\nexport function isPromiseView<T>(moduleView: T | Promise<T>): moduleView is Promise<T> {\n  return typeof moduleView['then'] === 'function';\n}\n\nexport function exportActions<G extends {[N in keyof G]: N extends ModuleName<ReturnModule<G[N]>> ? G[N] : never}>(moduleGetter: G): {[key in keyof G]: ModuleActions<ReturnModule<G[key]>>} {\n  MetaData.moduleGetter = moduleGetter as any;\n  MetaData.actionCreatorMap = Object.keys(moduleGetter).reduce((maps, moduleName) => {\n    maps[moduleName] =\n      typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(\n            {},\n            {\n              get: (target: {}, key: string) => {\n                return (data: any) => ({type: moduleName + '/' + key, data});\n              },\n              set: () => {\n                return true;\n              },\n            }\n          );\n    return maps;\n  }, {});\n  return MetaData.actionCreatorMap as any;\n}\n\nexport function injectModel<MG extends ModuleGetter, N extends Extract<keyof MG, string>>(moduleGetter: MG, moduleName: N, store: ModelStore): void | Promise<void> {\n  const hasInjected = store._medux_.injectedModules[moduleName];\n  if (!hasInjected) {\n    moduleGetter = MetaData.moduleGetter as any;\n    const result = moduleGetter[moduleName]();\n    if (isPromiseModule(result)) {\n      return result.then(module => {\n        moduleGetter[moduleName] = (() => module) as any;\n        return module.default.model(store);\n      });\n    } else {\n      return result.default.model(store);\n    }\n  }\n}\n\nexport function getView<T>(moduleGetter: ModuleGetter, moduleName: string, viewName: string): T | Promise<T> {\n  moduleGetter = MetaData.moduleGetter;\n  const result = moduleGetter[moduleName]();\n  if (isPromiseModule(result)) {\n    return result.then(module => {\n      moduleGetter[moduleName] = () => module;\n      const view: T = module.default.views[viewName];\n      if (MetaData.isServer) {\n        return view;\n      }\n      const initModel = module.default.model(MetaData.clientStore);\n      if (isPromise(initModel)) {\n        return initModel.then(() => view);\n      } else {\n        return view;\n      }\n    });\n  } else {\n    const view: T = result.default.views[viewName];\n    if (MetaData.isServer) {\n      return view;\n    }\n    const initModel = result.default.model(MetaData.clientStore);\n    if (isPromise(initModel)) {\n      return initModel.then(() => view);\n    } else {\n      return view;\n    }\n  }\n}\n\nexport type LoadView = <MG extends ModuleGetter, M extends Extract<keyof MG, string>, V extends ModuleViews<ReturnModule<MG[M]>>, N extends Extract<keyof V, string>>(\n  moduleGetter: MG,\n  moduleName: M,\n  viewName: N\n) => V[N];\n\nfunction getModuleByName(moduleName: string, moduleGetter: ModuleGetter): Promise<Module> | Module {\n  const result = moduleGetter[moduleName]();\n  if (isPromiseModule(result)) {\n    return result.then(module => {\n      //在SSR时loadView不能出现异步，否则浏览器初轮渲染不会包括异步组件，从而导致和服务器返回不一致\n      moduleGetter[moduleName] = () => module;\n      return module;\n    });\n  } else {\n    return result;\n  }\n}\nfunction getModuleListByNames(moduleNames: string[], moduleGetter: ModuleGetter): Promise<Module[]> {\n  const preModules = moduleNames.map(moduleName => {\n    const module = getModuleByName(moduleName, moduleGetter);\n    if (isPromiseModule(module)) {\n      return module;\n    } else {\n      return Promise.resolve(module);\n    }\n  });\n  return Promise.all(preModules);\n}\nexport interface StoreOptions {\n  ssrInitStoreKey?: string;\n  reducers?: ReducersMapObject;\n  middlewares?: Middleware[];\n  enhancers?: StoreEnhancer[];\n  initData?: {[key: string]: any};\n}\n\nexport function renderApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (store: Store, appModel: Model, appViews: {[key: string]: any}, ssrInitStoreKey: string) => void,\n  moduleGetter: M,\n  appModuleName: A,\n  storeOptions: StoreOptions = {}\n): Promise<void> {\n  MetaData.appModuleName = appModuleName;\n  const ssrInitStoreKey = storeOptions.ssrInitStoreKey || 'meduxInitStore';\n  let initData = {};\n  if (storeOptions.initData || window[ssrInitStoreKey]) {\n    initData = {...window[ssrInitStoreKey], ...storeOptions.initData};\n  }\n  const store = buildStore(initData, storeOptions.reducers, storeOptions.middlewares, storeOptions.enhancers);\n  const preModuleNames: string[] = [appModuleName];\n  if (initData) {\n    preModuleNames.push(...Object.keys(initData).filter(key => key !== appModuleName && initData[key].isModule));\n  }\n  return getModuleListByNames(preModuleNames, moduleGetter).then(([appModule]) => {\n    const initModel = appModule.default.model(store);\n    render(store as any, appModule.default.model, appModule.default.views, ssrInitStoreKey);\n    return initModel;\n  });\n}\nexport function renderSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (store: Store, appModel: Model, appViews: {[key: string]: any}, ssrInitStoreKey: string) => {html: any; data: any; ssrInitStoreKey: string},\n  moduleGetter: M,\n  appModuleName: A,\n  storeOptions: StoreOptions = {}\n) {\n  MetaData.appModuleName = appModuleName;\n  const ssrInitStoreKey = storeOptions.ssrInitStoreKey || 'meduxInitStore';\n  const store = buildStore(storeOptions.initData, storeOptions.reducers, storeOptions.middlewares, storeOptions.enhancers);\n  const appModule = moduleGetter[appModuleName]() as Module;\n  let initAppModel = appModule.default.model(store);\n  if (!isPromise(initAppModel)) {\n    initAppModel = Promise.resolve();\n  }\n  return initAppModel.then(() => {\n    return render(store as any, appModule.default.model, appModule.default.views, ssrInitStoreKey);\n  });\n}\n"],"file":"module.js"}