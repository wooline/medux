{"version":3,"sources":["../../src/basic.ts"],"names":["config","NSP","VSP","MSP","setConfig","_config","MetaData","isServer","global","window","isDev","process","env","NODE_ENV","actionCreatorMap","clientStore","appModuleName","moduleGetter","client","undefined","isPromise","data","getClientStore","reducer","target","key","descriptor","fun","value","__actionName__","__isReducer__","enumerable","effect","loadingForGroupName","loadingForModuleName","__isEffect__","before","curAction","moduleName","promiseResult","__decorators__","push","logger","after","delayPromise","second","delay","Promise","resolve","setTimeout","args","all","apply","then","items","isProcessedError","error","meduxProcessed","setProcessedError","bindThis","thisObj","newFun","bind","Object","keys","forEach","transformAction","actionName","action","listenerModule","actionHandlerMap","Error","addModuleActionCreatorList","actions","payload","type","injectActions","store","handlers","actionNames","handler","split","trim","replace","RegExp","arr","__isHandler__","_medux_","effectMap","reducerMap"],"mappings":"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","sourcesContent":["/*global global:true process:true*/\nimport {LoadingState} from './sprite';\nimport {ModuleGetter} from './module';\nimport {setLoading} from './loading';\n\n// export const root: {__REDUX_DEVTOOLS_EXTENSION__?: any; __REDUX_DEVTOOLS_EXTENSION__OPTIONS?: any; onerror: any; onunhandledrejection: any} = ((typeof self == 'object' &&\n//   self.self === self &&\n//   self) ||\n//   (typeof global == 'object' && global.global === global && global) ||\n//   this) as any;\nexport const config: {\n  NSP: string;\n  VSP: string;\n  MSP: string;\n} = {\n  NSP: '/',\n  VSP: '.',\n  MSP: ',',\n};\nexport function setConfig(_config: {NSP?: string; VSP?: string; MSP?: string}) {\n  _config.NSP && (config.NSP = _config.NSP);\n  _config.VSP && (config.VSP = _config.VSP);\n  _config.MSP && (config.MSP = _config.MSP);\n}\nexport const MetaData: {\n  isServer: boolean;\n  isDev: boolean;\n  actionCreatorMap: ActionCreatorMap;\n  clientStore: ModelStore;\n  appModuleName: string;\n  moduleGetter: ModuleGetter;\n} = {\n  isServer: typeof global !== 'undefined' && typeof window === 'undefined',\n  isDev: process.env.NODE_ENV !== 'production',\n  actionCreatorMap: null as any,\n  clientStore: null as any,\n  appModuleName: null as any,\n  moduleGetter: null as any,\n};\n\nexport const client: Window | undefined = MetaData.isServer ? undefined : typeof window === 'undefined' ? (global as any) : window;\nexport interface ActionCreatorMap {\n  [moduleName: string]: ActionCreatorList;\n}\nexport interface ActionCreatorList {\n  [actionName: string]: ActionCreator;\n}\nexport type ActionCreator = (...args: any[]) => Action;\ninterface Store {\n  dispatch(action: Action): Action | Promise<void>;\n  getState(): {[key: string]: any};\n  subscribe(listener: () => void): void;\n}\nexport interface ModelStore extends Store {\n  _medux_: {\n    reducerMap: ReducerMap;\n    effectMap: EffectMap;\n    injectedModules: {[moduleName: string]: boolean};\n    currentViews: CurrentViews;\n    beforeState: StoreState;\n    prevState: StoreState;\n    currentState: StoreState;\n  };\n}\nexport interface RouteData {\n  views: DisplayViews;\n  params: {[moduleName: string]: {[key: string]: any} | undefined};\n  paths: string[];\n  stackParams: {[moduleName: string]: {[key: string]: any} | undefined}[];\n}\nexport interface RouteState<L = any> {\n  location: L;\n  data: RouteData;\n}\nexport type StoreState = {\n  [moduleName: string]: BaseModelState;\n} & {route: RouteState};\n\nexport interface DisplayViews {\n  [moduleName: string]: {[viewName: string]: boolean | undefined} | undefined;\n}\nexport interface CurrentViews {\n  [moduleName: string]: {[viewName: string]: {[key: string]: boolean}};\n}\nexport interface ReducerHandler extends ActionHandler {\n  (payload: any): BaseModelState;\n}\nexport interface EffectHandler extends ActionHandler {\n  (payload: any, prevRootState: StoreState): Promise<any>;\n}\nexport interface ActionHandlerList {\n  [actionName: string]: ActionHandler;\n}\nexport interface ActionHandlerMap {\n  [actionName: string]: {[moduleName: string]: ActionHandler};\n}\nexport interface ReducerMap extends ActionHandlerMap {\n  [actionName: string]: {[moduleName: string]: ReducerHandler};\n}\nexport interface EffectMap extends ActionHandlerMap {\n  [actionName: string]: {[moduleName: string]: EffectHandler};\n}\nexport interface Action {\n  type: string;\n  priority?: string[];\n  payload?: any[];\n}\nexport interface ActionHandler {\n  __actionName__: string;\n  __isReducer__?: boolean;\n  __isEffect__?: boolean;\n  __isHandler__?: boolean;\n  __decorators__?: [(action: Action, moduleName: string, effectResult: Promise<any>) => any, null | ((status: 'Rejected' | 'Resolved', beforeResult: any, effectResult: any) => void)][];\n  __decoratorResults__?: any[];\n  (payload?: any): any;\n}\nexport interface BaseModelState<R = {[key: string]: any}> {\n  isModule?: boolean;\n  routeParams?: R;\n  loading?: {\n    [key: string]: LoadingState;\n  };\n}\n\nexport function isPromise(data: any): data is Promise<any> {\n  return typeof data === 'object' && typeof data['then'] === 'function';\n}\nexport function getClientStore() {\n  return MetaData.clientStore;\n}\nexport function isServer(): boolean {\n  return MetaData.isServer;\n}\nexport function reducer(target: any, key: string, descriptor: PropertyDescriptor) {\n  if (!key && !descriptor) {\n    key = target.key;\n    descriptor = target.descriptor;\n  }\n  const fun = descriptor.value as ActionHandler;\n  fun.__actionName__ = key;\n  fun.__isReducer__ = true;\n  descriptor.enumerable = true;\n  return target.descriptor === descriptor ? target : descriptor;\n}\n\nexport function effect(loadingForGroupName?: string | null, loadingForModuleName?: string) {\n  if (loadingForGroupName === undefined) {\n    loadingForGroupName = 'global';\n    loadingForModuleName = MetaData.appModuleName;\n  }\n  return (target: any, key: string, descriptor: PropertyDescriptor) => {\n    if (!key && !descriptor) {\n      key = target.key;\n      descriptor = target.descriptor;\n    }\n    const fun = descriptor.value as ActionHandler;\n    fun.__actionName__ = key;\n    fun.__isEffect__ = true;\n    descriptor.enumerable = true;\n    if (loadingForGroupName) {\n      const before = (curAction: Action, moduleName: string, promiseResult: Promise<any>) => {\n        if (!MetaData.isServer) {\n          if (!loadingForModuleName) {\n            loadingForModuleName = moduleName;\n          }\n          setLoading(promiseResult, loadingForModuleName, loadingForGroupName as string);\n        }\n      };\n      if (!fun.__decorators__) {\n        fun.__decorators__ = [];\n      }\n      fun.__decorators__.push([before, null]);\n    }\n    return target.descriptor === descriptor ? target : descriptor;\n  };\n}\nexport function logger(\n  before: (action: Action, moduleName: string, promiseResult: Promise<any>) => void,\n  after: null | ((status: 'Rejected' | 'Resolved', beforeResult: any, effectResult: any) => void)\n) {\n  return (target: any, key: string, descriptor: PropertyDescriptor) => {\n    if (!key && !descriptor) {\n      key = target.key;\n      descriptor = target.descriptor;\n    }\n    const fun: ActionHandler = descriptor.value;\n    if (!fun.__decorators__) {\n      fun.__decorators__ = [];\n    }\n    fun.__decorators__.push([before, after]);\n  };\n}\nexport function delayPromise(second: number) {\n  return (target: any, key: string, descriptor: PropertyDescriptor) => {\n    if (!key && !descriptor) {\n      key = target.key;\n      descriptor = target.descriptor;\n    }\n    const fun = descriptor.value;\n    descriptor.value = (...args: any[]) => {\n      const delay = new Promise(resolve => {\n        setTimeout(() => {\n          resolve(true);\n        }, second * 1000);\n      });\n      return Promise.all([delay, fun.apply(target, args)]).then(items => {\n        return items[1];\n      });\n    };\n  };\n}\nexport function isProcessedError(error: any): boolean | undefined {\n  if (typeof error !== 'object' || error.meduxProcessed === undefined) {\n    return undefined;\n  } else {\n    return !!error.meduxProcessed;\n  }\n}\nexport function setProcessedError(error: any, meduxProcessed: boolean): {meduxProcessed: boolean; [key: string]: any} {\n  if (typeof error === 'object') {\n    error.meduxProcessed = meduxProcessed;\n    return error;\n  } else {\n    return {\n      meduxProcessed,\n      error,\n    };\n  }\n}\nfunction bindThis(fun: ActionHandler, thisObj: any) {\n  const newFun = fun.bind(thisObj);\n  Object.keys(fun).forEach(key => {\n    newFun[key] = fun[key];\n  });\n\n  return newFun as ActionHandler;\n}\nfunction transformAction(actionName: string, action: ActionHandler, listenerModule: string, actionHandlerMap: ActionHandlerMap) {\n  if (!actionHandlerMap[actionName]) {\n    actionHandlerMap[actionName] = {};\n  }\n  if (actionHandlerMap[actionName][listenerModule]) {\n    throw new Error(`Action duplicate or conflict : ${actionName}.`);\n  }\n  actionHandlerMap[actionName][listenerModule] = action;\n}\n\nfunction addModuleActionCreatorList(moduleName: string, actionName: string) {\n  const actions = MetaData.actionCreatorMap[moduleName];\n  if (!actions[actionName]) {\n    actions[actionName] = (...payload: any[]) => ({type: moduleName + config.NSP + actionName, payload});\n  }\n}\nexport function injectActions(store: ModelStore, moduleName: string, handlers: ActionHandlerList) {\n  for (const actionNames in handlers) {\n    if (typeof handlers[actionNames] === 'function') {\n      let handler = handlers[actionNames];\n      if (handler.__isReducer__ || handler.__isEffect__) {\n        handler = bindThis(handler, handlers);\n        actionNames.split(config.MSP).forEach(actionName => {\n          actionName = actionName.trim().replace(new RegExp(`^this[${config.NSP}]`), `${moduleName}${config.NSP}`);\n          const arr = actionName.split(config.NSP);\n          if (arr[1]) {\n            handler.__isHandler__ = true;\n            transformAction(actionName, handler, moduleName, handler.__isEffect__ ? store._medux_.effectMap : store._medux_.reducerMap);\n          } else {\n            handler.__isHandler__ = false;\n            transformAction(moduleName + config.NSP + actionName, handler, moduleName, handler.__isEffect__ ? store._medux_.effectMap : store._medux_.reducerMap);\n            addModuleActionCreatorList(moduleName, actionName);\n          }\n        });\n      }\n    }\n  }\n  return MetaData.actionCreatorMap[moduleName];\n}\n"],"file":"basic.js"}