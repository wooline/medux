{"version":3,"sources":["../../src/module.ts"],"names":["MetaData","getModuleActionCreatorList","injectActions","isPromise","reducer","buildStore","errorAction","exportFacade","moduleName","actions","exportModule","initState","ActionHandles","views","model","store","hasInjected","_medux_","injectedModules","moduleState","getState","handlers","initAction","INIT","action","dispatch","Promise","resolve","BaseModelHandlers","isModule","callThisAction","handler","__actionName__","payload","UPDATE","LOADING","state","loading","updateState","prevState","currentState","isPromiseModule","module","isPromiseView","moduleView","exportActions","moduleGetter","Object","keys","reduce","prev","cur","loadModel","result","then","default","getView","viewName","clientStore","view","isServer","getModuleByName","getModuleListByNames","moduleNames","preModules","map","all","renderApp","render","appModuleName","storeOptions","ssrInitStoreKey","initData","window","reducers","middlewares","enhancers","preModuleNames","push","filter","key","appModule","initModel","renderSSR","catch","err"],"mappings":"2nBAAA,OAAkEA,QAAlE,CAAwFC,0BAAxF,CAAoHC,aAApH,CAAmIC,SAAnI,CAA8IC,OAA9I,KAA4J,SAA5J,CAGA,OAAQC,UAAR,KAAyB,SAAzB,CACA,OAAQC,WAAR,KAA0B,WAA1B,CAiCA,MAAO,SAASC,CAAAA,YAAT,CAAmDC,CAAnD,CAAuE,CAC5E,GAAMC,CAAAA,CAAU,CAAGR,0BAA0B,CAACO,CAAD,CAA7C,CACA,MAAO,CACLA,UAAU,CAAVA,CADK,CAELC,OAAO,CAAPA,CAFK,CAIR,CAQD,MAAO,IAAMC,CAAAA,YAA+B,CAAG,SAACF,CAAD,CAAaG,CAAb,CAAwBC,CAAxB,CAAuCC,CAAvC,CAAiD,CAC9F,GAAMC,CAAAA,CAAK,CAAG,SAACC,CAAD,CAAuB,CACnC,GAAMC,CAAAA,CAAW,CAAGD,CAAK,CAACE,OAAN,CAAcC,eAAd,CAA8BV,CAA9B,CAApB,CACA,GAAI,CAACQ,CAAL,CAAkB,CAChBD,CAAK,CAACE,OAAN,CAAcC,eAAd,CAA8BV,CAA9B,IADgB,IAEVW,CAAAA,CAA2B,CAAGJ,CAAK,CAACK,QAAN,GAAiBZ,CAAjB,CAFpB,CAGVa,CAAQ,CAAG,GAAIT,CAAAA,CAAJ,CAAkBD,CAAlB,CAA6BQ,CAA7B,CAHD,CAIfE,CAAD,CAAkBb,UAAlB,CAA+BA,CAJf,CAKfa,CAAD,CAAkBN,KAAlB,CAA0BA,CALV,CAMhB,GAAMN,CAAAA,CAAO,CAAGP,aAAa,CAACa,CAAD,CAAQP,CAAR,CAAoBa,CAApB,CAA7B,CAEA,GADCA,CAAD,CAAkBZ,OAAlB,CAA4BA,CAC5B,CAAI,CAACU,CAAL,CAAkB,IACVG,CAAAA,CAAU,CAAGb,CAAO,CAACc,IAAR,CAAcF,CAAD,CAAkBV,SAA/B,CADH,CAEVa,CAAM,CAAGT,CAAK,CAACU,QAAN,CAAeH,CAAf,CAFC,OAGZnB,CAAAA,SAAS,CAACqB,CAAD,CAHG,CAIPA,CAJO,CAMPE,OAAO,CAACC,OAAR,CAAgB,IAAK,EAArB,CAEV,CACC,MAAOD,CAAAA,OAAO,CAACC,OAAR,CAAgB,IAAK,EAArB,CAEV,CACC,MAAOD,CAAAA,OAAO,CAACC,OAAR,CAAgB,IAAK,EAArB,CAEV,CAxBD,CAyBAb,CAAK,CAACN,UAAN,CAAmBA,CA1B2E,CA2B9FM,CAAK,CAACH,SAAN,CAAkBA,CA3B4E,CA4B9F,GAAMF,CAAAA,CAAO,CAAGR,0BAA0B,CAACO,CAAD,CAA1C,CACA,MAAO,CACLA,UAAU,CAAVA,CADK,CAELM,KAAK,CAALA,CAFK,CAGLD,KAAK,CAALA,CAHK,CAILJ,OAAO,CAAPA,CAJK,CAMR,CAnCM,CAqCP,UAAamB,CAAAA,iBAAb,wCAME;AACA,WAAmBjB,CAAnB,CAAmD,MANhCA,SAMgC,aALhCH,UAKgC,CALX,EAKW,MAJhCO,KAIgC,CAJZ,IAIY,MAHhCN,OAGgC,CAHP,IAGO,CACjDE,CAAS,CAACkB,QAAV,GADiD,CAEjD,KAAKlB,SAAL,CAAiBA,CAClB,CAVH,2BA4BYc,QA5BZ,CA4BE,kBAAmBD,CAAnB,CAA2D,CACzD,MAAO,MAAKT,KAAL,CAAWU,QAAX,CAAoBD,CAApB,CACR,CA9BH,GAgCYM,cAhCZ,CAgCE,wBAA0CC,CAA1C,CAAoH,CAClH,GAAMtB,CAAAA,CAAO,CAAGR,0BAA0B,CAAC,KAAKO,UAAN,CAA1C,CACA,MAAOC,CAAAA,CAAO,CAAEsB,CAAD,CAA2BC,cAA5B,CAAP,yCACR,CAnCH,GAsCYT,IAtCZ,CAqCE,cACeU,CADf,CAC8B,CAC5B,MAAOA,CAAAA,CACR,CAxCH,GA2CYC,MA3CZ,CA0CE,gBACiBD,CADjB,CACgC,CAC9B,MAAOA,CAAAA,CACR,CA7CH,GAgDYE,OAhDZ,CA+CE,iBACkBF,CADlB,CACyD,CACvD,GAAMG,CAAAA,CAAK,CAAG,KAAKA,KAAnB,CADuD,MAElDA,CAAAA,CAFkD,kBAMlDA,CANkD,EAOrDC,OAAO,kBAAMD,CAAK,CAACC,OAAZ,CAAwBJ,CAAxB,CAP8C,GAG9CG,CAMV,CAzDH,GA2DYE,WA3DZ,CA2DE,qBAAsBL,CAAtB,CAA2C,CACzC,KAAKR,QAAL,CAAc,KAAKK,cAAL,CAAoB,KAAKI,MAAzB,kBAAqC,KAAKE,KAA1C,CAAoDH,CAApD,EAAd,CACD,CA7DH,gDAY2B,CACvB,MAAO,MAAKlB,KAAL,CAAWE,OAAX,CAAmBsB,SAAnB,CAA6B,KAAK/B,UAAlC,CACR,CAdH,qCAgB+B,CAC3B,MAAO,MAAKO,KAAL,CAAWE,OAAX,CAAmBsB,SAC3B,CAlBH,wCAoBkC,CAC9B,MAAO,MAAKxB,KAAL,CAAWE,OAAX,CAAmBuB,YAAnB,CAAgC,KAAKhC,UAArC,CACR,CAtBH,4CAwBsC,CAClC,MAAO,MAAKO,KAAL,CAAWE,OAAX,CAAmBuB,YAC3B,CA1BH,mEAqCGpC,OArCH,kIA0CGA,OA1CH,qIA+CGA,OA/CH,wFA0EA,MAAO,SAASqC,CAAAA,eAAT,CAAyBC,CAAzB,CAAsF,CAC3F,MAAiC,UAA1B,QAAOA,CAAAA,CAAM,KACrB,CACD,MAAO,SAASC,CAAAA,aAAT,CAA0BC,CAA1B,CAAgF,CACrF,MAAqC,UAA9B,QAAOA,CAAAA,CAAU,KACzB,CACD,MAAO,SAASC,CAAAA,aAAT,CAA+CC,CAA/C,CAAyH,CAC9H,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,CAAZ,EAA0BG,MAA1B,CAAiC,SAACC,CAAD,CAAOC,CAAP,CAAe,CAErD,MADAD,CAAAA,CAAI,CAACC,CAAD,CAAJ,CAAYlD,0BAA0B,CAACkD,CAAD,CACtC,CAAOD,CACR,CAHM,CAGJ,EAHI,CAIR,CACD,MAAO,SAASE,CAAAA,SAAT,CAAgHN,CAAhH,CAAkItC,CAAlI,CAA0K,CAC/KsC,CAAY,CAAG9C,QAAQ,CAAC8C,YADuJ,CAE/K,GAAMO,CAAAA,CAAM,CAAGP,CAAY,CAACtC,CAAD,CAAZ,EAAf,CAF+K,MAG3KiC,CAAAA,eAAe,CAACY,CAAD,CAH4J,CAItKA,CAAM,CAACC,IAAP,CAAY,SAAAZ,CAAM,CAAI,CAE3B,MADAI,CAAAA,CAAY,CAACtC,CAAD,CAAZ,CAA4B,iBAAMkC,CAAAA,CAAN,CAC5B,CAAOA,CAAM,CAACa,OAAP,CAAezC,KACvB,CAHM,CAJsK,CAStKY,OAAO,CAACC,OAAR,CAAgB0B,CAAM,CAACE,OAAP,CAAezC,KAA/B,CAEV,CAED,MAAO,SAAS0C,CAAAA,OAAT,CAAoBV,CAApB,CAAgDtC,CAAhD,CAAoEiD,CAApE,CAAsG,CAC3GX,CAAY,CAAG9C,QAAQ,CAAC8C,YADmF,IAErGO,CAAAA,CAAM,CAAGP,CAAY,CAACtC,CAAD,CAAZ,EAF4F,CAGrGO,CAAK,CAAGf,QAAQ,CAAC0D,WAHoF,CAI3G,GAAIjB,eAAe,CAACY,CAAD,CAAnB,CACE,MAAOA,CAAAA,CAAM,CAACC,IAAP,CAAY,SAAAZ,CAAM,CAAI,CAC3BI,CAAY,CAACtC,CAAD,CAAZ,CAA2B,iBAAMkC,CAAAA,CAAN,CADA,CAE3B,GAAMiB,CAAAA,CAAI,CAAGjB,CAAM,CAACa,OAAP,CAAe1C,KAAf,CAAqB4C,CAArB,CAAb,CAF2B,MAGtBzD,CAAAA,QAAQ,CAAC4D,QAHa,CAMpBD,CANoB,CAIlBjB,CAAM,CAACa,OAAP,CAAezC,KAAf,CAAqBC,CAArB,EAA4BuC,IAA5B,CAAiC,iBAAMK,CAAAA,CAAN,CAAjC,CAGV,CAPM,CAAP,CASA,GAAMA,CAAAA,CAAI,CAAGN,CAAM,CAACE,OAAP,CAAe1C,KAAf,CAAqB4C,CAArB,CAAb,CAIA,MAHKzD,CAAAA,QAAQ,CAAC4D,QAGd,EAFEP,CAAM,CAACE,OAAP,CAAezC,KAAf,CAAqBC,CAArB,EAA4BuC,IAA5B,CAAiC,iBAAMK,CAAAA,CAAN,CAAjC,CAEF,CAAOA,CAEV,CAQD,QAASE,CAAAA,eAAT,CAAyBrD,CAAzB,CAA6CsC,CAA7C,CAAmG,CACjG,GAAMO,CAAAA,CAAM,CAAGP,CAAY,CAACtC,CAAD,CAAZ,EAAf,CADiG,MAE7FiC,CAAAA,eAAe,CAACY,CAAD,CAF8E,CAGxFA,CAAM,CAACC,IAAP,CAAY,SAAAZ,CAAM,CAAI,CAG3B,MADAI,CAAAA,CAAY,CAACtC,CAAD,CAAZ,CAA2B,iBAAMkC,CAAAA,CAAN,CAC3B,CAAOA,CACR,CAJM,CAHwF,CASxFW,CAEV,CACD,QAASS,CAAAA,oBAAT,CAA8BC,CAA9B,CAAqDjB,CAArD,CAAoG,CAClG,GAAMkB,CAAAA,CAAU,CAAGD,CAAW,CAACE,GAAZ,CAAgB,SAAAzD,CAAU,CAAI,CAC/C,GAAMkC,CAAAA,CAAM,CAAGmB,eAAe,CAACrD,CAAD,CAAasC,CAAb,CAA9B,CAD+C,MAE3CL,CAAAA,eAAe,CAACC,CAAD,CAF4B,CAGtCA,CAHsC,CAKtChB,OAAO,CAACC,OAAR,CAAgBe,CAAhB,CAEV,CAPkB,CAAnB,CAQA,MAAOhB,CAAAA,OAAO,CAACwC,GAAR,CAAYF,CAAZ,CACR,CAQD,MAAO,SAASG,CAAAA,SAAT,CACLC,CADK,CAELtB,CAFK,CAGLuB,CAHK,CAILC,CAJK,CAKU,UADfA,CACe,GADfA,CACe,CADc,EACd,EACftE,QAAQ,CAACqE,aAAT,CAAyBA,CADV,CAEfrE,QAAQ,CAAC8C,YAAT,CAAwBA,CAFT,IAGTyB,CAAAA,CAAe,CAAGD,CAAY,CAACC,eAAb,EAAgC,gBAHzC,CAIXC,CAAQ,CAAG,EAJA,EAKXF,CAAY,CAACE,QAAb,EAAyBC,MAAM,CAACF,CAAD,CALpB,IAMbC,CAAQ,kBAAOC,MAAM,CAACF,CAAD,CAAb,CAAmCD,CAAY,CAACE,QAAhD,CANK,KAQTzD,CAAAA,CAAK,CAAGV,UAAU,CAACmE,CAAD,CAAWF,CAAY,CAACI,QAAxB,CAAkCJ,CAAY,CAACK,WAA/C,CAA4DL,CAAY,CAACM,SAAzE,CART,CASTC,CAAwB,CAAG,CAACR,CAAD,CATlB,CAaf,MAHIG,CAAAA,CAGJ,EAFEK,CAAc,CAACC,IAAf,OAAAD,CAAc,CAAS9B,MAAM,CAACC,IAAP,CAAYwB,CAAZ,EAAsBO,MAAtB,CAA6B,SAAAC,CAAG,QAAIA,CAAAA,CAAG,GAAKX,CAAR,EAAyBG,CAAQ,CAACQ,CAAD,CAAR,CAAcnD,QAA3C,CAAhC,CAAT,CAEhB,CAAOiC,oBAAoB,CAACe,CAAD,CAAiB/B,CAAjB,CAApB,CAAmDQ,IAAnD,CAAwD,WAAiB,IAAf2B,CAAAA,CAAe,MACxEC,CAAS,CAAGD,CAAS,CAAC1B,OAAV,CAAkBzC,KAAlB,CAAwBC,CAAxB,CAD4D,CAG9E,MADAqD,CAAAA,CAAM,CAACrD,CAAD,CAAekE,CAAS,CAAC1B,OAAV,CAAkBzC,KAAjC,CAAwCmE,CAAS,CAAC1B,OAAV,CAAkB1C,KAA1D,CAAiE0D,CAAjE,CACN,CAAOW,CACR,CAJM,CAKR,CACD,MAAO,SAASC,CAAAA,SAAT,CACLf,CADK,CAELtB,CAFK,CAGLuB,CAHK,CAILC,CAJK,CAKL,UADAA,CACA,GADAA,CACA,CAD6B,EAC7B,EACAtE,QAAQ,CAACqE,aAAT,CAAyBA,CADzB,CAEArE,QAAQ,CAAC8C,YAAT,CAAwBA,CAFxB,IAGMyB,CAAAA,CAAe,CAAGD,CAAY,CAACC,eAAb,EAAgC,gBAHxD,CAIMxD,CAAK,CAAGV,UAAU,CAACiE,CAAY,CAACE,QAAd,CAAwBF,CAAY,CAACI,QAArC,CAA+CJ,CAAY,CAACK,WAA5D,CAAyEL,CAAY,CAACM,SAAtF,CAJxB,CAKMK,CAAS,CAAGnC,CAAY,CAACuB,CAAD,CAAZ,EALlB,CAOA,MAAOY,CAAAA,CAAS,CAAC1B,OAAV,CACJzC,KADI,CACEC,CADF,EAEJqE,KAFI,CAEE,SAAAC,CAAG,CAAI,CACZ,MAAOtE,CAAAA,CAAK,CAACU,QAAN,CAAenB,WAAW,CAAC+E,CAAD,CAA1B,CACR,CAJI,EAKJ/B,IALI,CAKC,UAAM,CACV,MAAOc,CAAAA,CAAM,CAACrD,CAAD,CAAekE,CAAS,CAAC1B,OAAV,CAAkBzC,KAAjC,CAAwCmE,CAAS,CAAC1B,OAAV,CAAkB1C,KAA1D,CAAiE0D,CAAjE,CACd,CAPI,CAQR","sourcesContent":["import {Action, ActionCreatorList, ActionHandler, BaseModelState, MetaData, ModelStore, getModuleActionCreatorList, injectActions, isPromise, reducer} from './basic';\nimport {Middleware, ReducersMapObject, Store, StoreEnhancer} from 'redux';\n\nimport {buildStore} from './store';\nimport {errorAction} from './actions';\n\nexport interface Model<ModelState extends BaseModelState = BaseModelState> {\n  moduleName: string;\n  initState: ModelState;\n  (store: ModelStore): Promise<void>;\n}\n\nexport interface Module<M extends Model = Model, VS extends {[key: string]: any} = {[key: string]: any}, AS extends ActionCreatorList = {}> {\n  default: {\n    moduleName: string;\n    model: M;\n    views: VS;\n    actions: AS;\n  };\n}\n\nexport interface ModuleGetter {\n  [moduleName: string]: () => Module | Promise<Module>;\n}\n\nexport type ReturnModule<T extends () => any> = T extends () => Promise<infer R> ? R : T extends () => infer R ? R : never;\n// export type ReturnViews<T extends () => any> = T extends () => Promise<Module<Model, infer R>> ? R : T extends () => Module<Model, infer R> ? R : never;\ntype ModuleModel<M extends any> = M['default']['model'];\ntype ModuleStates<M extends any> = M['default']['model']['initState'];\ntype ModuleViews<M extends any> = M['default']['views'];\ntype ModuleActions<M extends any> = M['default']['actions'];\ntype ModuleViewsNum<M extends any> = {[key in keyof M['default']['views']]?: number};\n\nexport type RootState<G extends ModuleGetter = {}> = {\n  views: {[key in keyof G]?: ModuleViewsNum<ReturnModule<G[key]>>};\n} & {[key in keyof G]?: ModuleStates<ReturnModule<G[key]>>};\n\nexport function exportFacade<T extends ActionCreatorList>(moduleName: string) {\n  const actions: T = getModuleActionCreatorList(moduleName) as T;\n  return {\n    moduleName,\n    actions,\n  };\n}\nexport type ExportModule<Component> = <S extends BaseModelState, V extends {[key: string]: Component}, T extends BaseModelHandlers<S, any>>(\n  moduleName: string,\n  initState: S,\n  ActionHandles: {new (initState: S, presetData?: any): T},\n  views: V\n) => Module<Model<S>, V, Actions<T>>['default'];\n\nexport const exportModule: ExportModule<any> = (moduleName, initState, ActionHandles, views) => {\n  const model = (store: ModelStore) => {\n    const hasInjected = store._medux_.injectedModules[moduleName];\n    if (!hasInjected) {\n      store._medux_.injectedModules[moduleName] = true;\n      const moduleState: BaseModelState = store.getState()[moduleName];\n      const handlers = new ActionHandles(initState, moduleState);\n      (handlers as any).moduleName = moduleName;\n      (handlers as any).store = store;\n      const actions = injectActions(store, moduleName, handlers as any);\n      (handlers as any).actions = actions;\n      if (!moduleState) {\n        const initAction = actions.INIT((handlers as any).initState);\n        const action = store.dispatch(initAction);\n        if (isPromise(action)) {\n          return action;\n        } else {\n          return Promise.resolve(void 0);\n        }\n      } else {\n        return Promise.resolve(void 0);\n      }\n    } else {\n      return Promise.resolve(void 0);\n    }\n  };\n  model.moduleName = moduleName;\n  model.initState = initState;\n  const actions = getModuleActionCreatorList(moduleName) as any;\n  return {\n    moduleName,\n    model,\n    views,\n    actions,\n  };\n};\n\nexport class BaseModelHandlers<S extends BaseModelState, R extends RootState> {\n  protected readonly initState: S;\n  protected readonly moduleName: string = '';\n  protected readonly store: ModelStore = null as any;\n  protected readonly actions: Actions<this> = null as any;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public constructor(initState: S, presetData?: any) {\n    initState.isModule = true;\n    this.initState = initState;\n  }\n\n  protected get state(): S {\n    return this.store._medux_.prevState[this.moduleName];\n  }\n\n  protected get rootState(): R {\n    return this.store._medux_.prevState as R;\n  }\n\n  protected get currentState(): S {\n    return this.store._medux_.currentState[this.moduleName];\n  }\n\n  protected get currentRootState(): R {\n    return this.store._medux_.currentState as R;\n  }\n\n  protected dispatch(action: Action): Action | Promise<void> {\n    return this.store.dispatch(action) as any;\n  }\n\n  protected callThisAction<T extends any[]>(handler: (...args: T) => any, ...rest: T): {type: string; playload?: any} {\n    const actions = getModuleActionCreatorList(this.moduleName);\n    return actions[(handler as ActionHandler).__actionName__](rest[0]);\n  }\n\n  @reducer\n  protected INIT(payload: S): S {\n    return payload;\n  }\n\n  @reducer\n  protected UPDATE(payload: S): S {\n    return payload;\n  }\n\n  @reducer\n  protected LOADING(payload: {[group: string]: string}): S {\n    const state = this.state;\n    if (!state) {\n      return state;\n    }\n    return {\n      ...state,\n      loading: {...state.loading, ...payload},\n    };\n  }\n\n  protected updateState(payload: Partial<S>) {\n    this.dispatch(this.callThisAction(this.UPDATE, {...this.state, ...payload}));\n  }\n}\n\ntype Handler<F> = F extends (...args: infer P) => any\n  ? (\n      ...args: P\n    ) => {\n      type: string;\n    }\n  : never;\n\nexport type Actions<Ins> = {[K in keyof Ins]: Ins[K] extends (...args: any[]) => any ? Handler<Ins[K]> : never};\n\nexport function isPromiseModule(module: Module | Promise<Module>): module is Promise<Module> {\n  return typeof module['then'] === 'function';\n}\nexport function isPromiseView<T>(moduleView: T | Promise<T>): moduleView is Promise<T> {\n  return typeof moduleView['then'] === 'function';\n}\nexport function exportActions<G extends ModuleGetter>(moduleGetter: G): {[key in keyof G]: ModuleActions<ReturnModule<G[key]>>} {\n  return Object.keys(moduleGetter).reduce((prev, cur) => {\n    prev[cur] = getModuleActionCreatorList(cur);\n    return prev;\n  }, {}) as any;\n}\nexport function loadModel<MG extends ModuleGetter, N extends Extract<keyof MG, string>, M extends ReturnModule<MG[N]>>(moduleGetter: MG, moduleName: N): Promise<ModuleModel<M>> {\n  moduleGetter = MetaData.moduleGetter as any;\n  const result = moduleGetter[moduleName]();\n  if (isPromiseModule(result)) {\n    return result.then(module => {\n      moduleGetter[moduleName] = (() => module) as any;\n      return module.default.model as any;\n    });\n  } else {\n    return Promise.resolve(result.default.model as any);\n  }\n}\n\nexport function getView<T>(moduleGetter: ModuleGetter, moduleName: string, viewName: string): T | Promise<T> {\n  moduleGetter = MetaData.moduleGetter;\n  const result = moduleGetter[moduleName]();\n  const store = MetaData.clientStore;\n  if (isPromiseModule(result)) {\n    return result.then(module => {\n      moduleGetter[moduleName] = () => module;\n      const view = module.default.views[viewName];\n      if (!MetaData.isServer) {\n        return module.default.model(store).then(() => view);\n      }\n      return view;\n    });\n  } else {\n    const view = result.default.views[viewName];\n    if (!MetaData.isServer) {\n      result.default.model(store).then(() => view);\n    }\n    return view;\n  }\n}\n\nexport type LoadView = <MG extends ModuleGetter, M extends Extract<keyof MG, string>, V extends ModuleViews<ReturnModule<MG[M]>>, N extends Extract<keyof V, string>>(\n  moduleGetter: MG,\n  moduleName: M,\n  viewName: N\n) => V[N];\n\nfunction getModuleByName(moduleName: string, moduleGetter: ModuleGetter): Promise<Module> | Module {\n  const result = moduleGetter[moduleName]();\n  if (isPromiseModule(result)) {\n    return result.then(module => {\n      //在SSR时loadView不能出现异步，否则浏览器初轮渲染不会包括异步组件，从而导致和服务器返回不一致\n      moduleGetter[moduleName] = () => module;\n      return module;\n    });\n  } else {\n    return result;\n  }\n}\nfunction getModuleListByNames(moduleNames: string[], moduleGetter: ModuleGetter): Promise<Module[]> {\n  const preModules = moduleNames.map(moduleName => {\n    const module = getModuleByName(moduleName, moduleGetter);\n    if (isPromiseModule(module)) {\n      return module;\n    } else {\n      return Promise.resolve(module);\n    }\n  });\n  return Promise.all(preModules);\n}\nexport interface StoreOptions {\n  ssrInitStoreKey?: string;\n  reducers?: ReducersMapObject;\n  middlewares?: Middleware[];\n  enhancers?: StoreEnhancer[];\n  initData?: {[key: string]: any};\n}\nexport function renderApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (store: Store, appModel: Model, appViews: {[key: string]: any}, ssrInitStoreKey: string) => void,\n  moduleGetter: M,\n  appModuleName: A,\n  storeOptions: StoreOptions = {}\n): Promise<void> {\n  MetaData.appModuleName = appModuleName;\n  MetaData.moduleGetter = moduleGetter;\n  const ssrInitStoreKey = storeOptions.ssrInitStoreKey || 'meduxInitStore';\n  let initData = {};\n  if (storeOptions.initData || window[ssrInitStoreKey]) {\n    initData = {...window[ssrInitStoreKey], ...storeOptions.initData};\n  }\n  const store = buildStore(initData, storeOptions.reducers, storeOptions.middlewares, storeOptions.enhancers);\n  const preModuleNames: string[] = [appModuleName];\n  if (initData) {\n    preModuleNames.push(...Object.keys(initData).filter(key => key !== appModuleName && initData[key].isModule));\n  }\n  return getModuleListByNames(preModuleNames, moduleGetter).then(([appModule]) => {\n    const initModel = appModule.default.model(store);\n    render(store as any, appModule.default.model, appModule.default.views, ssrInitStoreKey);\n    return initModel;\n  });\n}\nexport function renderSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (store: Store, appModel: Model, appViews: {[key: string]: any}, ssrInitStoreKey: string) => {html: any; data: any; ssrInitStoreKey: string},\n  moduleGetter: M,\n  appModuleName: A,\n  storeOptions: StoreOptions = {}\n) {\n  MetaData.appModuleName = appModuleName;\n  MetaData.moduleGetter = moduleGetter;\n  const ssrInitStoreKey = storeOptions.ssrInitStoreKey || 'meduxInitStore';\n  const store = buildStore(storeOptions.initData, storeOptions.reducers, storeOptions.middlewares, storeOptions.enhancers);\n  const appModule = moduleGetter[appModuleName]() as Module;\n\n  return appModule.default\n    .model(store)\n    .catch(err => {\n      return store.dispatch(errorAction(err)) as any;\n    })\n    .then(() => {\n      return render(store as any, appModule.default.model, appModule.default.views, ssrInitStoreKey);\n    });\n}\n"],"file":"module.js"}