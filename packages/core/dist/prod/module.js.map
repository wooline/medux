{"version":3,"sources":["../../src/module.ts"],"names":["MetaData","client","config","defaultRouteParams","injectActions","isPromise","reducer","buildStore","exportModule","moduleName","initState","ActionHandles","views","routeParams","model","store","hasInjected","_medux_","injectedModules","moduleState","getState","handlers","actions","params","prevState","route","data","initAction","Init","dispatch","BaseModelHandlers","isModule","getRootState","getCurrentState","currentState","getCurrentRootState","action","handler","actionCreatorMap","__actionName__","payload","callThisAction","Update","state","loading","isPromiseModule","module","isPromiseView","moduleView","exportActions","moduleGetter","Object","keys","reduce","maps","Proxy","get","target","key","type","NSP","set","injectModel","result","then","default","getView","viewName","view","isServer","initModel","clientStore","getModuleByName","getModuleListByNames","moduleNames","preModules","map","Promise","resolve","all","renderApp","render","appModuleName","history","storeOptions","ssrInitStoreKey","initData","reducers","middlewares","enhancers","preModuleNames","push","filter","appModule","renderSSR","storeState","paths","length","inited","i","k","split","VSP"],"mappings":"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","sourcesContent":["import {Action, ActionCreatorList, ActionHandler, BaseModelState, MetaData, ModelStore, StoreState, client, config, defaultRouteParams, injectActions, isPromise, reducer} from './basic';\nimport {HistoryProxy, buildStore} from './store';\nimport {Middleware, ReducersMapObject, Store, StoreEnhancer} from 'redux';\n\nexport interface Model<ModelState extends BaseModelState = BaseModelState> {\n  moduleName: string;\n  initState: ModelState;\n  (store: ModelStore): void | Promise<void>;\n}\n\nexport interface Module<M extends Model = Model, VS extends {[key: string]: any} = {[key: string]: any}, AS extends ActionCreatorList = {}, N extends string = string> {\n  default: {\n    moduleName: N;\n    model: M;\n    views: VS;\n    actions: AS;\n  };\n}\n\nexport interface ModuleGetter {\n  [moduleName: string]: () => Module | Promise<Module>;\n}\n\ntype ReturnModule<T> = T extends () => Promise<infer R> ? R : T extends () => infer R ? R : never;\n// export type ReturnViews<T extends () => any> = T extends () => Promise<Module<Model, infer R>> ? R : T extends () => Module<Model, infer R> ? R : never;\ntype ModuleName<M extends any> = M['default']['moduleName'];\ntype ModuleStates<M extends any> = M['default']['model']['initState'];\ntype ModuleParams<M extends any> = M['default']['model']['initState']['routeParams'];\ntype ModuleViews<M extends any> = M['default']['views'];\ntype ModuleActions<M extends any> = M['default']['actions'];\ntype MountViews<M extends any> = {[key in keyof M['default']['views']]?: boolean};\n\nexport type RootState<G extends ModuleGetter, L> = {\n  route: {\n    location: L;\n    data: {\n      views: {[key in keyof G]?: MountViews<ReturnModule<G[key]>>};\n      params: {[key in keyof G]?: ModuleParams<ReturnModule<G[key]>>};\n      stackParams: ({[moduleName: string]: {[key: string]: any} | undefined} | undefined)[];\n      paths: any;\n    };\n  };\n} & {[key in keyof G]?: ModuleStates<ReturnModule<G[key]>>};\n\nexport type ExportModule<Component> = <S extends BaseModelState, V extends {[key: string]: Component}, T extends BaseModelHandlers<S, any>, N extends string>(\n  moduleName: N,\n  initState: S,\n  ActionHandles: {new (moduleName: string, store: any, initState: any, presetData?: any): T},\n  views: V\n) => Module<Model<S>, V, Actions<T>, N>['default'];\n\nexport const exportModule: ExportModule<any> = (moduleName, initState, ActionHandles, views) => {\n  if (!defaultRouteParams[moduleName]) {\n    defaultRouteParams[moduleName] = initState.routeParams;\n  }\n  const model = (store: ModelStore) => {\n    const hasInjected = store._medux_.injectedModules[moduleName];\n    if (!hasInjected) {\n      store._medux_.injectedModules[moduleName] = true;\n      const moduleState: BaseModelState = store.getState()[moduleName];\n      const handlers = new ActionHandles(moduleName, store, initState, moduleState);\n      const actions = injectActions(store, moduleName, handlers as any);\n      (handlers as any).actions = actions;\n      if (!moduleState) {\n        const params = store._medux_.prevState.route.data.params || {};\n        const initAction = actions.Init({...initState, routeParams: params[moduleName] || defaultRouteParams[moduleName]});\n        return store.dispatch(initAction) as any;\n      }\n    }\n    return void 0;\n  };\n  model.moduleName = moduleName;\n  model.initState = initState;\n  const actions = {} as any;\n  return {\n    moduleName,\n    model,\n    views,\n    actions,\n  };\n};\n\nexport abstract class BaseModelHandlers<S extends BaseModelState, R> {\n  protected readonly actions: Actions<this> = null as any;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public constructor(protected readonly moduleName: string, protected readonly store: ModelStore, protected readonly initState: S, presetData?: any) {\n    initState.isModule = true;\n  }\n\n  protected get state(): S {\n    return this.getState();\n  }\n  //ie8不支持getter\n  protected getState(): S {\n    return this.store._medux_.prevState[this.moduleName] as S;\n  }\n  protected get rootState(): R {\n    return this.getRootState();\n  }\n  //ie8不支持getter\n  protected getRootState(): R {\n    return this.store._medux_.prevState as any;\n  }\n  protected get currentState(): S {\n    return this.getCurrentState();\n  }\n  //ie8不支持getter\n  protected getCurrentState(): S {\n    return this.store._medux_.currentState[this.moduleName] as S;\n  }\n  protected get currentRootState(): R {\n    return this.getCurrentRootState();\n  }\n  //ie8不支持getter\n  protected getCurrentRootState(): R {\n    return this.store._medux_.currentState as any;\n  }\n  protected dispatch(action: Action): Action | Promise<void> {\n    return this.store.dispatch(action) as any;\n  }\n\n  protected callThisAction<T extends any[]>(handler: (...args: T) => any, ...rest: T): {type: string; payload?: any} {\n    const actions = MetaData.actionCreatorMap[this.moduleName];\n    return actions[(handler as ActionHandler).__actionName__](rest[0]);\n  }\n  protected updateState(payload: Partial<S>) {\n    this.dispatch(this.callThisAction(this.Update, {...this.getState(), ...payload}));\n  }\n\n  @reducer\n  protected Init(payload: S): S {\n    return payload;\n  }\n\n  @reducer\n  protected Update(payload: S): S {\n    return payload;\n  }\n\n  @reducer\n  protected Loading(payload: {[group: string]: string}): S {\n    const state = this.getState();\n    if (!state) {\n      return state;\n    }\n    return {\n      ...state,\n      loading: {...state.loading, ...payload},\n    };\n  }\n}\n\ntype Handler<F> = F extends (...args: infer P) => any\n  ? (\n      ...args: P\n    ) => {\n      type: string;\n    }\n  : never;\n\nexport type Actions<Ins> = {[K in keyof Ins]: Ins[K] extends (...args: any[]) => any ? Handler<Ins[K]> : never};\n\nexport function isPromiseModule(module: Module | Promise<Module>): module is Promise<Module> {\n  return typeof module['then'] === 'function';\n}\nexport function isPromiseView<T>(moduleView: T | Promise<T>): moduleView is Promise<T> {\n  return typeof moduleView['then'] === 'function';\n}\n\nexport function exportActions<G extends {[N in keyof G]: N extends ModuleName<ReturnModule<G[N]>> ? G[N] : never}>(moduleGetter: G): {[key in keyof G]: ModuleActions<ReturnModule<G[key]>>} {\n  MetaData.moduleGetter = moduleGetter as any;\n  MetaData.actionCreatorMap = Object.keys(moduleGetter).reduce((maps, moduleName) => {\n    maps[moduleName] =\n      typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(\n            {},\n            {\n              get: (target: {}, key: string) => {\n                return (payload: any) => ({type: moduleName + config.NSP + key, payload});\n              },\n              set: () => {\n                return true;\n              },\n            }\n          );\n    return maps;\n  }, {});\n  return MetaData.actionCreatorMap as any;\n}\n\nexport function injectModel<MG extends ModuleGetter, N extends Extract<keyof MG, string>>(moduleGetter: MG, moduleName: N, store: ModelStore): void | Promise<void> {\n  const hasInjected = store._medux_.injectedModules[moduleName];\n  if (!hasInjected) {\n    moduleGetter = MetaData.moduleGetter as any;\n    const result = moduleGetter[moduleName]();\n    if (isPromiseModule(result)) {\n      return result.then(module => {\n        moduleGetter[moduleName] = (() => module) as any;\n        return module.default.model(store);\n      });\n    } else {\n      return result.default.model(store);\n    }\n  }\n}\n\nexport function getView<T>(moduleGetter: ModuleGetter, moduleName: string, viewName: string): T | Promise<T> {\n  moduleGetter = MetaData.moduleGetter;\n  const result = moduleGetter[moduleName]();\n  if (isPromiseModule(result)) {\n    return result.then(module => {\n      moduleGetter[moduleName] = () => module;\n      const view: T = module.default.views[viewName];\n      if (MetaData.isServer) {\n        return view;\n      }\n      const initModel = module.default.model(MetaData.clientStore);\n      if (isPromise(initModel)) {\n        return initModel.then(() => view);\n      } else {\n        return view;\n      }\n    });\n  } else {\n    const view: T = result.default.views[viewName];\n    if (MetaData.isServer) {\n      return view;\n    }\n    const initModel = result.default.model(MetaData.clientStore);\n    if (isPromise(initModel)) {\n      return initModel.then(() => view);\n    } else {\n      return view;\n    }\n  }\n}\n\nexport type LoadView = <MG extends ModuleGetter, M extends Extract<keyof MG, string>, V extends ModuleViews<ReturnModule<MG[M]>>, N extends Extract<keyof V, string>>(\n  moduleGetter: MG,\n  moduleName: M,\n  viewName: N\n) => V[N];\n\nfunction getModuleByName(moduleName: string, moduleGetter: ModuleGetter): Promise<Module> | Module {\n  const result = moduleGetter[moduleName]();\n  if (isPromiseModule(result)) {\n    return result.then(module => {\n      //在SSR时loadView不能出现异步，否则浏览器初轮渲染不会包括异步组件，从而导致和服务器返回不一致\n      moduleGetter[moduleName] = () => module;\n      return module;\n    });\n  } else {\n    return result;\n  }\n}\nfunction getModuleListByNames(moduleNames: string[], moduleGetter: ModuleGetter): Promise<Module[]> {\n  const preModules = moduleNames.map(moduleName => {\n    const module = getModuleByName(moduleName, moduleGetter);\n    if (isPromiseModule(module)) {\n      return module;\n    } else {\n      return Promise.resolve(module);\n    }\n  });\n  return Promise.all(preModules);\n}\nexport interface StoreOptions {\n  ssrInitStoreKey?: string;\n  reducers?: ReducersMapObject;\n  middlewares?: Middleware[];\n  enhancers?: StoreEnhancer[];\n  initData?: {[key: string]: any};\n  defaultRouteParams?: {[moduleName: string]: {[key: string]: any} | undefined};\n}\n\nexport function renderApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (store: Store, appModel: Model, appViews: {[key: string]: any}, ssrInitStoreKey: string) => void,\n  moduleGetter: M,\n  appModuleName: A,\n  history: HistoryProxy,\n  storeOptions: StoreOptions = {}\n): Promise<void> {\n  MetaData.appModuleName = appModuleName;\n  const ssrInitStoreKey = storeOptions.ssrInitStoreKey || 'meduxInitStore';\n  let initData = {};\n  if (storeOptions.initData || client![ssrInitStoreKey]) {\n    initData = {...client![ssrInitStoreKey], ...storeOptions.initData};\n  }\n  const store = buildStore(history, initData, storeOptions.reducers, storeOptions.middlewares, storeOptions.enhancers, storeOptions.defaultRouteParams);\n  const preModuleNames: string[] = [appModuleName];\n  if (initData) {\n    preModuleNames.push(...Object.keys(initData).filter(key => key !== appModuleName && initData[key].isModule));\n  }\n  // 在ssr时，client必须在第一次render周期中完成和ssr一至的输出结构，所以不能出现异步模块\n  return getModuleListByNames(preModuleNames, moduleGetter).then(([appModule]) => {\n    const initModel = appModule.default.model(store);\n    render(store as any, appModule.default.model, appModule.default.views, ssrInitStoreKey);\n    return initModel;\n  });\n}\n\nexport async function renderSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (store: Store, appModel: Model, appViews: {[key: string]: any}, ssrInitStoreKey: string) => {html: any; data: any; ssrInitStoreKey: string},\n  moduleGetter: M,\n  appModuleName: A,\n  history: HistoryProxy,\n  storeOptions: StoreOptions = {}\n) {\n  MetaData.appModuleName = appModuleName;\n  const ssrInitStoreKey = storeOptions.ssrInitStoreKey || 'meduxInitStore';\n  const store = buildStore(history, storeOptions.initData, storeOptions.reducers, storeOptions.middlewares, storeOptions.enhancers, storeOptions.defaultRouteParams);\n  const storeState = store.getState() as StoreState;\n  const {paths} = storeState.route.data;\n  paths.length === 0 && paths.push(appModuleName);\n  let appModule: Module | undefined = undefined;\n  const inited: {[moduleName: string]: boolean} = {};\n  for (let i = 0, k = paths.length; i < k; i++) {\n    const [moduleName] = paths[i].split(config.VSP);\n    if (!inited[moduleName]) {\n      inited[moduleName] = true;\n      const module = moduleGetter[moduleName]() as Module;\n      await module.default.model(store);\n      if (i === 0) {\n        appModule = module;\n      }\n    }\n  }\n  return render(store as any, appModule!.default.model, appModule!.default.views, ssrInitStoreKey);\n}\n"],"file":"module.js"}