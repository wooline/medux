{"version":3,"sources":["../../src/module.ts"],"names":["reducer","getModuleActionCreatorList","isPromise","injectActions","MetaData","buildStore","errorAction","defineModuleGetter","getter","exportFacade","moduleName","actions","exportModule","initState","ActionHandles","views","model","store","hasInjected","_medux_","injectedModules","moduleState","getState","handlers","initAction","INIT","action","dispatch","Promise","resolve","BaseModuleHandlers","isModule","callThisAction","handler","__actionName__","payload","UPDATE","LOADING","state","loading","updateState","prevState","currentState","isPromiseModule","module","isPromiseView","moduleView","loadModel","getModule","result","then","default","getView","viewName","getModuleByName","moduleGetter","getModuleListByNames","moduleNames","preModules","map","all","renderApp","render","appModuleName","storeOptions","ssrInitStoreKey","initData","window","reducers","middlewares","enhancers","preModuleNames","push","Object","keys","filter","key","appModule","initModel","renderSSR","catch","err"],"mappings":"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","sourcesContent":["import {Middleware, ReducersMapObject, StoreEnhancer, Store} from 'redux';\nimport {Action, ActionHandler, ActionCreatorList, reducer, getModuleActionCreatorList, ModelStore, BaseModuleState, isPromise, injectActions, MetaData} from './basic';\nimport {buildStore} from './store';\nimport {errorAction} from './actions';\n\nexport interface Model<ModuleState extends BaseModuleState = BaseModuleState> {\n  moduleName: string;\n  initState: ModuleState;\n  (store: ModelStore): Promise<void>;\n}\n\nexport interface Module<M extends Model = Model, VS extends {[key: string]: any} = {[key: string]: any}> {\n  default: {\n    moduleName: string;\n    model: M;\n    views: VS;\n  };\n}\nexport type GetModule<M extends Module = Module> = () => M | Promise<M>;\n\nexport interface ModuleGetter {\n  [moduleName: string]: GetModule;\n}\nexport function defineModuleGetter<E extends string, T extends {[K in E]: () => any}>(getter: T) {\n  return getter as {[key in E]: T[key]};\n}\nexport type ReturnModule<T extends () => any> = T extends () => Promise<infer R> ? R : T extends () => infer R ? R : never;\nexport type ReturnViews<T extends () => any> = T extends () => Promise<Module<Model, infer R>> ? R : T extends () => Module<Model, infer R> ? R : never;\ntype ModuleStates<M extends any> = M['default']['model']['initState'];\ntype ModuleViews<M extends any> = {[key in keyof M['views']]?: number};\n\nexport type RootState<G extends ModuleGetter = {}> = {\n  views: {[key in keyof G]?: ModuleViews<ReturnModule<G[key]>>};\n} & {[key in keyof G]?: ModuleStates<ReturnModule<G[key]>>};\n\nexport function exportFacade<T extends ActionCreatorList>(moduleName: string) {\n  const actions: T = getModuleActionCreatorList(moduleName) as T;\n  return {\n    moduleName,\n    actions,\n  };\n}\nexport type ExportModule<Component> = <N extends string, S extends BaseModuleState, V extends {[key: string]: Component}>(\n  moduleName: N,\n  initState: S,\n  ActionHandles: {new (initState: S, presetData?: any): BaseModuleHandlers<S, any>},\n  views: V\n) => Module<Model<S>, V>['default'];\n\nexport const exportModule: ExportModule<any> = (moduleName, initState, ActionHandles, views) => {\n  const model = (store: ModelStore) => {\n    const hasInjected = store._medux_.injectedModules[moduleName];\n    if (!hasInjected) {\n      store._medux_.injectedModules[moduleName] = true;\n      const moduleState: BaseModuleState = store.getState()[moduleName];\n      const handlers = new ActionHandles(initState, moduleState);\n      (handlers as any).moduleName = moduleName;\n      (handlers as any).store = store;\n      const actions = injectActions(store, moduleName, handlers as any);\n      (handlers as any).actions = actions;\n      if (!moduleState) {\n        const initAction = actions.INIT((handlers as any).initState);\n        const action = store.dispatch(initAction);\n        if (isPromise(action)) {\n          return action;\n        } else {\n          return Promise.resolve(void 0);\n        }\n      } else {\n        return Promise.resolve(void 0);\n      }\n    } else {\n      return Promise.resolve(void 0);\n    }\n  };\n  model.moduleName = moduleName;\n  model.initState = initState;\n  return {\n    moduleName,\n    model,\n    views,\n  };\n};\n\nexport class BaseModuleHandlers<S extends BaseModuleState, R extends RootState> {\n  protected readonly initState: S;\n  protected readonly moduleName: string = '';\n  protected readonly store: ModelStore = null as any;\n  protected readonly actions: Actions<this> = null as any;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public constructor(initState: S, presetData?: any) {\n    initState.isModule = true;\n    this.initState = initState;\n  }\n\n  protected get state(): S {\n    return this.store._medux_.prevState[this.moduleName];\n  }\n\n  protected get rootState(): R {\n    return this.store._medux_.prevState as R;\n  }\n\n  protected get currentState(): S {\n    return this.store._medux_.currentState[this.moduleName];\n  }\n\n  protected get currentRootState(): R {\n    return this.store._medux_.currentState as R;\n  }\n\n  protected dispatch(action: Action): Action | Promise<void> {\n    return this.store.dispatch(action) as any;\n  }\n\n  protected callThisAction<T extends any[]>(handler: (...args: T) => any, ...rest: T): {type: string; playload?: any} {\n    const actions = getModuleActionCreatorList(this.moduleName);\n    return actions[(handler as ActionHandler).__actionName__](rest[0]);\n  }\n\n  @reducer\n  protected INIT(payload: S): S {\n    return payload;\n  }\n\n  @reducer\n  protected UPDATE(payload: S): S {\n    return payload;\n  }\n\n  @reducer\n  protected LOADING(payload: {[group: string]: string}): S {\n    const state = this.state;\n    if (!state) {\n      return state;\n    }\n    return {\n      ...state,\n      loading: {...state.loading, ...payload},\n    };\n  }\n\n  protected updateState(payload: Partial<S>) {\n    this.dispatch(this.callThisAction(this.UPDATE, {...this.state, ...payload}));\n  }\n}\n\ntype Handler<F> = F extends (...args: infer P) => any\n  ? (\n      ...args: P\n    ) => {\n      type: string;\n    }\n  : never;\n\nexport type Actions<Ins> = {[K in keyof Ins]: Ins[K] extends (...args: any[]) => any ? Handler<Ins[K]> : never};\n\nexport function isPromiseModule(module: Module | Promise<Module>): module is Promise<Module> {\n  return typeof module['then'] === 'function';\n}\nexport function isPromiseView<T>(moduleView: T | Promise<T>): moduleView is Promise<T> {\n  return typeof moduleView['then'] === 'function';\n}\nexport function loadModel<M extends Module>(getModule: GetModule<M>): Promise<M['default']['model']> {\n  const result = getModule();\n  if (isPromiseModule(result)) {\n    return result.then(module => module.default.model);\n  } else {\n    return Promise.resolve(result.default.model);\n  }\n}\nexport function getView<M extends Module, N extends Extract<keyof M['default']['views'], string>>(getModule: GetModule<M>, viewName: N): M['default']['views'][N] | Promise<M['default']['views'][N]> {\n  const result = getModule();\n  if (isPromiseModule(result)) {\n    return result.then(module => module.default.views[viewName]);\n  } else {\n    return result.default.views[viewName];\n  }\n}\n\nexport type LoadView = <MG extends ModuleGetter, M extends Extract<keyof MG, string>, V extends ReturnViews<MG[M]>, N extends Extract<keyof V, string>>(\n  moduleGetter: MG,\n  moduleName: M,\n  viewName: N\n) => V[N];\n\nfunction getModuleByName(moduleName: string, moduleGetter: ModuleGetter): Promise<Module> | Module {\n  const result = moduleGetter[moduleName]();\n  if (isPromiseModule(result)) {\n    return result.then(module => {\n      moduleGetter[moduleName] = () => module;\n      return module;\n    });\n  } else {\n    return result;\n  }\n}\nfunction getModuleListByNames(moduleNames: string[], moduleGetter: ModuleGetter): Promise<Module[]> {\n  const preModules = moduleNames.map(moduleName => {\n    const module = getModuleByName(moduleName, moduleGetter);\n    if (isPromiseModule(module)) {\n      return module;\n    } else {\n      return Promise.resolve(module);\n    }\n  });\n  return Promise.all(preModules);\n}\nexport interface StoreOptions {\n  ssrInitStoreKey?: string;\n  reducers?: ReducersMapObject;\n  middlewares?: Middleware[];\n  enhancers?: StoreEnhancer[];\n  initData?: {[key: string]: any};\n}\nexport function renderApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (store: Store, appModel: Model, appViews: {[key: string]: any}, ssrInitStoreKey: string) => void,\n  moduleGetter: M,\n  appModuleName: A,\n  storeOptions: StoreOptions = {}\n): Promise<void> {\n  MetaData.appModuleName = appModuleName;\n  const ssrInitStoreKey = storeOptions.ssrInitStoreKey || 'meduxInitStore';\n  let initData = {};\n  if (storeOptions.initData || window[ssrInitStoreKey]) {\n    initData = {...window[ssrInitStoreKey], ...storeOptions.initData};\n  }\n  const store = buildStore(initData, storeOptions.reducers, storeOptions.middlewares, storeOptions.enhancers);\n  const preModuleNames: string[] = [appModuleName];\n  if (initData) {\n    preModuleNames.push(...Object.keys(initData).filter(key => key !== appModuleName && initData[key].isModule));\n  }\n  return getModuleListByNames(preModuleNames, moduleGetter).then(([appModule]) => {\n    const initModel = appModule.default.model(store);\n    render(store as any, appModule.default.model, appModule.default.views, ssrInitStoreKey);\n    return initModel;\n  });\n}\nexport function renderSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (store: Store, appModel: Model, appViews: {[key: string]: any}, ssrInitStoreKey: string) => {html: any; data: any; ssrInitStoreKey: string},\n  moduleGetter: M,\n  appModuleName: A,\n  storeOptions: StoreOptions = {}\n) {\n  MetaData.appModuleName = appModuleName;\n  const ssrInitStoreKey = storeOptions.ssrInitStoreKey || 'meduxInitStore';\n  const store = buildStore(storeOptions.initData, storeOptions.reducers, storeOptions.middlewares, storeOptions.enhancers);\n  const appModule = moduleGetter[appModuleName]() as Module;\n\n  return appModule.default\n    .model(store)\n    .catch(err => {\n      return store.dispatch(errorAction(err)) as any;\n    })\n    .then(() => {\n      return render(store as any, appModule.default.model, appModule.default.views, ssrInitStoreKey);\n    });\n}\n"],"file":"module.js"}