{"version":3,"sources":["../../src/module.ts"],"names":["MetaData","injectActions","isPromise","reducer","buildStore","errorAction","exportModule","moduleName","initState","ActionHandles","views","model","store","hasInjected","_medux_","injectedModules","moduleState","getState","handlers","actions","initAction","INIT","result","dispatch","catch","err","then","BaseModelHandlers","isModule","action","callThisAction","handler","actionCreatorMap","__actionName__","payload","UPDATE","LOADING","state","loading","updateState","prevState","currentState","isPromiseModule","module","isPromiseView","moduleView","exportActions","moduleGetter","Object","keys","reduce","maps","Proxy","get","target","key","data","type","set","injectModel","default","getView","viewName","view","isServer","initModel","clientStore","getModuleByName","getModuleListByNames","moduleNames","preModules","map","Promise","resolve","all","renderApp","render","appModuleName","storeOptions","ssrInitStoreKey","initData","window","reducers","middlewares","enhancers","preModuleNames","push","filter","appModule","renderSSR","initAppModel"],"mappings":"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","sourcesContent":["import {Action, ActionCreatorList, ActionHandler, BaseModelState, MetaData, ModelStore, injectActions, isPromise, reducer} from './basic';\nimport {Middleware, ReducersMapObject, Store, StoreEnhancer} from 'redux';\n\nimport {buildStore} from './store';\nimport {errorAction} from './actions';\n\nexport interface Model<ModelState extends BaseModelState = BaseModelState> {\n  moduleName: string;\n  initState: ModelState;\n  (store: ModelStore): void | Promise<void>;\n}\n\nexport interface Module<M extends Model = Model, VS extends {[key: string]: any} = {[key: string]: any}, AS extends ActionCreatorList = {}> {\n  default: {\n    moduleName: string;\n    model: M;\n    views: VS;\n    actions: AS;\n  };\n}\n\nexport interface ModuleGetter {\n  [moduleName: string]: () => Module | Promise<Module>;\n}\n\nexport type ReturnModule<T extends () => any> = T extends () => Promise<infer R> ? R : T extends () => infer R ? R : never;\n// export type ReturnViews<T extends () => any> = T extends () => Promise<Module<Model, infer R>> ? R : T extends () => Module<Model, infer R> ? R : never;\ntype ModuleStates<M extends any> = M['default']['model']['initState'];\ntype ModuleViews<M extends any> = M['default']['views'];\ntype ModuleActions<M extends any> = M['default']['actions'];\ntype ModuleViewsNum<M extends any> = {[key in keyof M['default']['views']]?: number};\n\nexport type RootState<G extends ModuleGetter = {}> = {\n  views: {[key in keyof G]?: ModuleViewsNum<ReturnModule<G[key]>>};\n} & {[key in keyof G]?: ModuleStates<ReturnModule<G[key]>>};\n\nexport type ExportModule<Component> = <S extends BaseModelState, V extends {[key: string]: Component}, T extends BaseModelHandlers<S, any>>(\n  moduleName: string,\n  initState: S,\n  ActionHandles: {new (initState: S, presetData?: any): T},\n  views: V\n) => Module<Model<S>, V, Actions<T>>['default'];\n\nexport const exportModule: ExportModule<any> = (moduleName, initState, ActionHandles, views) => {\n  const model = (store: ModelStore) => {\n    const hasInjected = store._medux_.injectedModules[moduleName];\n    if (!hasInjected) {\n      store._medux_.injectedModules[moduleName] = true;\n      const moduleState: BaseModelState = store.getState()[moduleName];\n      const handlers = new ActionHandles(initState, moduleState);\n      (handlers as any).moduleName = moduleName;\n      (handlers as any).store = store;\n      const actions = injectActions(store, moduleName, handlers as any);\n      (handlers as any).actions = actions;\n      if (!moduleState) {\n        const initAction = actions.INIT((handlers as any).initState);\n        const result = store.dispatch(initAction);\n        if (isPromise(result)) {\n          return result\n            .catch(err => {\n              return store.dispatch(errorAction(err)) as any;\n            })\n            .then(() => void 0);\n        }\n      }\n    }\n    return void 0;\n  };\n  model.moduleName = moduleName;\n  model.initState = initState;\n  const actions = {} as any;\n  return {\n    moduleName,\n    model,\n    views,\n    actions,\n  };\n};\n\nexport class BaseModelHandlers<S extends BaseModelState, R extends RootState> {\n  protected readonly initState: S;\n  protected readonly moduleName: string = '';\n  protected readonly store: ModelStore = null as any;\n  protected readonly actions: Actions<this> = null as any;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public constructor(initState: S, presetData?: any) {\n    initState.isModule = true;\n    this.initState = initState;\n  }\n\n  protected get state(): S {\n    return this.store._medux_.prevState[this.moduleName];\n  }\n\n  protected get rootState(): R {\n    return this.store._medux_.prevState as R;\n  }\n\n  protected get currentState(): S {\n    return this.store._medux_.currentState[this.moduleName];\n  }\n\n  protected get currentRootState(): R {\n    return this.store._medux_.currentState as R;\n  }\n\n  protected dispatch(action: Action): Action | Promise<void> {\n    return this.store.dispatch(action) as any;\n  }\n\n  protected callThisAction<T extends any[]>(handler: (...args: T) => any, ...rest: T): {type: string; playload?: any} {\n    const actions = MetaData.actionCreatorMap[this.moduleName];\n    return actions[(handler as ActionHandler).__actionName__](rest[0]);\n  }\n\n  @reducer\n  protected INIT(payload: S): S {\n    return payload;\n  }\n\n  @reducer\n  protected UPDATE(payload: S): S {\n    return payload;\n  }\n\n  @reducer\n  protected LOADING(payload: {[group: string]: string}): S {\n    const state = this.state;\n    if (!state) {\n      return state;\n    }\n    return {\n      ...state,\n      loading: {...state.loading, ...payload},\n    };\n  }\n\n  protected updateState(payload: Partial<S>) {\n    this.dispatch(this.callThisAction(this.UPDATE, {...this.state, ...payload}));\n  }\n}\n\ntype Handler<F> = F extends (...args: infer P) => any\n  ? (\n      ...args: P\n    ) => {\n      type: string;\n    }\n  : never;\n\nexport type Actions<Ins> = {[K in keyof Ins]: Ins[K] extends (...args: any[]) => any ? Handler<Ins[K]> : never};\n\nexport function isPromiseModule(module: Module | Promise<Module>): module is Promise<Module> {\n  return typeof module['then'] === 'function';\n}\nexport function isPromiseView<T>(moduleView: T | Promise<T>): moduleView is Promise<T> {\n  return typeof moduleView['then'] === 'function';\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function exportActions<G extends ModuleGetter>(moduleGetter: G): {[key in keyof G]: ModuleActions<ReturnModule<G[key]>>} {\n  MetaData.moduleGetter = moduleGetter;\n  MetaData.actionCreatorMap = Object.keys(moduleGetter).reduce((maps, moduleName) => {\n    maps[moduleName] =\n      typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(\n            {},\n            {\n              get: (target: {}, key: string) => {\n                return (data: any) => ({type: moduleName + '/' + key, data});\n              },\n              set: () => {\n                return true;\n              },\n            }\n          );\n    return maps;\n  }, {});\n  return MetaData.actionCreatorMap as any;\n}\nexport function injectModel<MG extends ModuleGetter, N extends Extract<keyof MG, string>>(moduleGetter: MG, moduleName: N, store: ModelStore): void | Promise<void> {\n  const hasInjected = store._medux_.injectedModules[moduleName];\n  if (!hasInjected) {\n    moduleGetter = MetaData.moduleGetter as any;\n    const result = moduleGetter[moduleName]();\n    if (isPromiseModule(result)) {\n      return result.then(module => {\n        moduleGetter[moduleName] = (() => module) as any;\n        return module.default.model(store);\n      });\n    } else {\n      return result.default.model(store);\n    }\n  }\n}\n\nexport function getView<T>(moduleGetter: ModuleGetter, moduleName: string, viewName: string): T | Promise<T> {\n  moduleGetter = MetaData.moduleGetter;\n  const result = moduleGetter[moduleName]();\n  if (isPromiseModule(result)) {\n    return result.then(module => {\n      moduleGetter[moduleName] = () => module;\n      const view: T = module.default.views[viewName];\n      if (MetaData.isServer) {\n        return view;\n      }\n      const initModel = module.default.model(MetaData.clientStore);\n      if (isPromise(initModel)) {\n        return initModel.then(() => view);\n      } else {\n        return view;\n      }\n    });\n  } else {\n    const view: T = result.default.views[viewName];\n    if (MetaData.isServer) {\n      return view;\n    }\n    const initModel = result.default.model(MetaData.clientStore);\n    if (isPromise(initModel)) {\n      return initModel.then(() => view);\n    } else {\n      return view;\n    }\n  }\n}\n\nexport type LoadView = <MG extends ModuleGetter, M extends Extract<keyof MG, string>, V extends ModuleViews<ReturnModule<MG[M]>>, N extends Extract<keyof V, string>>(\n  moduleGetter: MG,\n  moduleName: M,\n  viewName: N\n) => V[N];\n\nfunction getModuleByName(moduleName: string, moduleGetter: ModuleGetter): Promise<Module> | Module {\n  const result = moduleGetter[moduleName]();\n  if (isPromiseModule(result)) {\n    return result.then(module => {\n      //在SSR时loadView不能出现异步，否则浏览器初轮渲染不会包括异步组件，从而导致和服务器返回不一致\n      moduleGetter[moduleName] = () => module;\n      return module;\n    });\n  } else {\n    return result;\n  }\n}\nfunction getModuleListByNames(moduleNames: string[], moduleGetter: ModuleGetter): Promise<Module[]> {\n  const preModules = moduleNames.map(moduleName => {\n    const module = getModuleByName(moduleName, moduleGetter);\n    if (isPromiseModule(module)) {\n      return module;\n    } else {\n      return Promise.resolve(module);\n    }\n  });\n  return Promise.all(preModules);\n}\nexport interface StoreOptions {\n  ssrInitStoreKey?: string;\n  reducers?: ReducersMapObject;\n  middlewares?: Middleware[];\n  enhancers?: StoreEnhancer[];\n  initData?: {[key: string]: any};\n}\n\nexport function renderApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (store: Store, appModel: Model, appViews: {[key: string]: any}, ssrInitStoreKey: string) => void,\n  moduleGetter: M,\n  appModuleName: A,\n  storeOptions: StoreOptions = {}\n): Promise<void> {\n  MetaData.appModuleName = appModuleName;\n  const ssrInitStoreKey = storeOptions.ssrInitStoreKey || 'meduxInitStore';\n  let initData = {};\n  if (storeOptions.initData || window[ssrInitStoreKey]) {\n    initData = {...window[ssrInitStoreKey], ...storeOptions.initData};\n  }\n  const store = buildStore(initData, storeOptions.reducers, storeOptions.middlewares, storeOptions.enhancers);\n  const preModuleNames: string[] = [appModuleName];\n  if (initData) {\n    preModuleNames.push(...Object.keys(initData).filter(key => key !== appModuleName && initData[key].isModule));\n  }\n  return getModuleListByNames(preModuleNames, moduleGetter).then(([appModule]) => {\n    const initModel = appModule.default.model(store);\n    render(store as any, appModule.default.model, appModule.default.views, ssrInitStoreKey);\n    return initModel;\n  });\n}\nexport function renderSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (store: Store, appModel: Model, appViews: {[key: string]: any}, ssrInitStoreKey: string) => {html: any; data: any; ssrInitStoreKey: string},\n  moduleGetter: M,\n  appModuleName: A,\n  storeOptions: StoreOptions = {}\n) {\n  MetaData.appModuleName = appModuleName;\n  const ssrInitStoreKey = storeOptions.ssrInitStoreKey || 'meduxInitStore';\n  const store = buildStore(storeOptions.initData, storeOptions.reducers, storeOptions.middlewares, storeOptions.enhancers);\n  const appModule = moduleGetter[appModuleName]() as Module;\n  let initAppModel = appModule.default.model(store);\n  if (!isPromise(initAppModel)) {\n    initAppModel = Promise.resolve();\n  }\n  return initAppModel.then(() => {\n    return render(store as any, appModule.default.model, appModule.default.views, ssrInitStoreKey);\n  });\n}\n"],"file":"module.js"}