{"version":3,"sources":["../../src/basic.ts"],"names":["setLoading","NSP","MetaData","isServer","global","window","isDev","process","env","NODE_ENV","actionCreatorMap","clientStore","appModuleName","client","getModuleActionCreatorList","moduleName","obj","isPromise","data","getClientStore","reducer","target","key","descriptor","fun","value","__actionName__","__isReducer__","enumerable","effect","loadingForGroupName","loadingForModuleName","__isEffect__","before","curAction","promiseResult","__decorators__","push","logger","after","delayPromise","second","delay","Promise","resolve","setTimeout","args","all","apply","then","items","bindThis","thisObj","newFun","bind","Object","keys","forEach","transformAction","actionName","action","listenerModule","actionHandlerMap","Error","addModuleActionCreatorList","actions","payload","type","injectActions","store","handlers","handler","arr","split","__isHandler__","_medux_","effectMap","reducerMap"],"mappings":"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","sourcesContent":["/*global global:true process:true*/\nimport {LoadingState} from './sprite';\nimport {setLoading} from './loading';\n\nexport const NSP = '/';\n\n// export const root: {__REDUX_DEVTOOLS_EXTENSION__?: any; __REDUX_DEVTOOLS_EXTENSION__OPTIONS?: any; onerror: any; onunhandledrejection: any} = ((typeof self == 'object' &&\n//   self.self === self &&\n//   self) ||\n//   (typeof global == 'object' && global.global === global && global) ||\n//   this) as any;\n\nexport const MetaData: {\n  isServer: boolean;\n  isDev: boolean;\n  actionCreatorMap: ActionCreatorMap;\n  clientStore: ModelStore;\n  appModuleName: string;\n} = {\n  isServer: typeof global !== 'undefined' && typeof window === 'undefined',\n  isDev: process.env.NODE_ENV !== 'production',\n  actionCreatorMap: {},\n  clientStore: null as any,\n  appModuleName: null as any,\n};\n\nexport const client = MetaData.isServer ? undefined : window || global;\nexport interface ActionCreatorMap {\n  [moduleName: string]: ActionCreatorList;\n}\nexport interface ActionCreatorList {\n  [actionName: string]: ActionCreator;\n}\nexport type ActionCreator = (payload?: any) => Action;\ninterface Store {\n  dispatch(action: Action): Action | Promise<void>;\n  getState(): {[key: string]: any};\n}\nexport interface ModelStore extends Store {\n  _medux_: {\n    reducerMap: ReducerMap;\n    effectMap: EffectMap;\n    injectedModules: {[moduleName: string]: boolean};\n    currentViews: CurrentViews;\n    prevState: {[key: string]: any};\n    currentState: {[key: string]: any};\n  };\n}\nexport interface CurrentViews {\n  [moduleName: string]: {[viewName: string]: number};\n}\nexport interface ReducerHandler extends ActionHandler {\n  (payload?: any): BaseModelState;\n}\nexport interface EffectHandler extends ActionHandler {\n  (payload?: any): Promise<any>;\n}\nexport interface ActionHandlerList {\n  [actionName: string]: ActionHandler;\n}\nexport interface ActionHandlerMap {\n  [actionName: string]: {[moduleName: string]: ActionHandler};\n}\nexport interface ReducerMap extends ActionHandlerMap {\n  [actionName: string]: {[moduleName: string]: ReducerHandler};\n}\nexport interface EffectMap extends ActionHandlerMap {\n  [actionName: string]: {[moduleName: string]: EffectHandler};\n}\nexport interface Action {\n  type: string;\n  priority?: string[];\n  payload?: any;\n}\nexport interface ActionHandler {\n  __actionName__: string;\n  __isReducer__?: boolean;\n  __isEffect__?: boolean;\n  __isHandler__?: boolean;\n  __decorators__?: [(action: Action, moduleName: string, effectResult: Promise<any>) => any, null | ((status: 'Rejected' | 'Resolved', beforeResult: any, effectResult: any) => void)][];\n  __decoratorResults__?: any[];\n  (payload?: any): any;\n}\nexport interface BaseModelState {\n  isModule?: boolean;\n  loading?: {[key: string]: LoadingState};\n}\nexport function getModuleActionCreatorList(moduleName: string): ActionCreatorList {\n  // if (window[\"Proxy\"]) {\n  //   actions = new window[\"Proxy\"](\n  //     {},\n  //     {\n  //       get: (target: {}, key: string) => {\n  //         return (data: any) => ({ type: moduleName + \"/\" + key, data });\n  //       }\n  //     }\n  //   );\n  // } else {\n  //   actions = getModuleActions(moduleName) as any;\n  // }\n  if (MetaData.actionCreatorMap[moduleName]) {\n    return MetaData.actionCreatorMap[moduleName];\n  } else {\n    const obj = {};\n    MetaData.actionCreatorMap[moduleName] = obj;\n    return obj;\n  }\n}\nexport function isPromise(data: any): data is Promise<any> {\n  return typeof data['then'] === 'function';\n}\nexport function getClientStore() {\n  return MetaData.clientStore;\n}\nexport function isServer(): boolean {\n  return MetaData.isServer;\n}\nexport function reducer(target: any, key: string, descriptor: PropertyDescriptor) {\n  if (!key && !descriptor) {\n    key = target.key;\n    descriptor = target.descriptor;\n  }\n  const fun = descriptor.value as ActionHandler;\n  fun.__actionName__ = key;\n  fun.__isReducer__ = true;\n  descriptor.enumerable = true;\n  return target.descriptor === descriptor ? target : descriptor;\n}\nexport function effect(loadingForGroupName?: string | null, loadingForModuleName?: string) {\n  if (loadingForGroupName === undefined) {\n    loadingForGroupName = 'global';\n    loadingForModuleName = MetaData.appModuleName;\n  }\n  return (target: any, key: string, descriptor: PropertyDescriptor) => {\n    if (!key && !descriptor) {\n      key = target.key;\n      descriptor = target.descriptor;\n    }\n    const fun = descriptor.value as ActionHandler;\n    fun.__actionName__ = key;\n    fun.__isEffect__ = true;\n    descriptor.enumerable = true;\n    if (loadingForGroupName) {\n      const before = (curAction: Action, moduleName: string, promiseResult: Promise<any>) => {\n        if (!MetaData.isServer) {\n          if (!loadingForModuleName) {\n            loadingForModuleName = moduleName;\n          }\n          setLoading(promiseResult, loadingForModuleName, loadingForGroupName as string);\n        }\n      };\n      if (!fun.__decorators__) {\n        fun.__decorators__ = [];\n      }\n      fun.__decorators__.push([before, null]);\n    }\n    return target.descriptor === descriptor ? target : descriptor;\n  };\n}\nexport function logger(\n  before: (action: Action, moduleName: string, promiseResult: Promise<any>) => void,\n  after: null | ((status: 'Rejected' | 'Resolved', beforeResult: any, effectResult: any) => void)\n) {\n  return (target: any, key: string, descriptor: PropertyDescriptor) => {\n    if (!key && !descriptor) {\n      key = target.key;\n      descriptor = target.descriptor;\n    }\n    const fun: ActionHandler = descriptor.value;\n    if (!fun.__decorators__) {\n      fun.__decorators__ = [];\n    }\n    fun.__decorators__.push([before, after]);\n  };\n}\nexport function delayPromise(second: number) {\n  return (target: any, key: string, descriptor: PropertyDescriptor) => {\n    if (!key && !descriptor) {\n      key = target.key;\n      descriptor = target.descriptor;\n    }\n    const fun = descriptor.value;\n    descriptor.value = (...args: any[]) => {\n      const delay = new Promise(resolve => {\n        setTimeout(() => {\n          resolve(true);\n        }, second * 1000);\n      });\n      return Promise.all([delay, fun.apply(target, args)]).then(items => {\n        return items[1];\n      });\n    };\n  };\n}\nfunction bindThis(fun: ActionHandler, thisObj: any) {\n  const newFun = fun.bind(thisObj);\n  Object.keys(fun).forEach(key => {\n    newFun[key] = fun[key];\n  });\n\n  return newFun as ActionHandler;\n}\nfunction transformAction(actionName: string, action: ActionHandler, listenerModule: string, actionHandlerMap: ActionHandlerMap) {\n  if (!actionHandlerMap[actionName]) {\n    actionHandlerMap[actionName] = {};\n  }\n  if (actionHandlerMap[actionName][listenerModule]) {\n    throw new Error(`Action duplicate or conflict : ${actionName}.`);\n  }\n  actionHandlerMap[actionName][listenerModule] = action;\n}\n\nfunction addModuleActionCreatorList(moduleName: string, actionName: string) {\n  const actions = getModuleActionCreatorList(moduleName);\n  if (!actions[actionName]) {\n    actions[actionName] = payload => ({type: moduleName + NSP + actionName, payload});\n  }\n}\nexport function injectActions(store: ModelStore, moduleName: string, handlers: ActionHandlerList) {\n  for (const actionName in handlers) {\n    if (typeof handlers[actionName] === 'function') {\n      let handler = handlers[actionName];\n      if (handler.__isReducer__ || handler.__isEffect__) {\n        handler = bindThis(handler, handlers);\n        const arr = actionName.split(NSP);\n        if (arr[1]) {\n          handler.__isHandler__ = true;\n          transformAction(actionName, handler, moduleName, handler.__isEffect__ ? store._medux_.effectMap : store._medux_.reducerMap);\n        } else {\n          handler.__isHandler__ = false;\n          transformAction(moduleName + NSP + actionName, handler, moduleName, handler.__isEffect__ ? store._medux_.effectMap : store._medux_.reducerMap);\n          addModuleActionCreatorList(moduleName, actionName);\n        }\n      }\n    }\n  }\n  return getModuleActionCreatorList(moduleName);\n}\n"],"file":"basic.js"}