{"version":3,"sources":["../../src/global.ts"],"names":["NSP","root","self","global","MetaData","isServer","window","isDev","process","env","NODE_ENV","actionCreatorMap","clientStore","appModuleName","getModuleActionCreatorList","namespace","obj"],"mappings":"AAAA,mCAIA,MAAO,IAAMA,CAAAA,GAAG,CAAG,GAAZ,CAEP,MAAO,IAAMC,CAAAA,IAA8H,CAAoB,QAAf,QAAOC,CAAAA,IAAP,EAC9IA,IAAI,CAACA,IAAL,GAAcA,IADgI,EAE9IA,IAF6I,EAG3H,QAAjB,QAAOC,CAAAA,MAAP,EAA6BA,MAAM,CAACA,MAAP,GAAkBA,MAA/C,EAAyDA,MAHmF,EAI7I,IAJK,CAMP,MAAO,IAAMC,CAAAA,QAMZ,CAAG,CACFC,QAAQ,CAAoB,WAAlB,QAAOF,CAAAA,MAAP,EAAmD,WAAlB,QAAOG,CAAAA,MADhD,CAEFC,KAAK,CAA2B,YAAzB,GAAAC,OAAO,CAACC,GAAR,CAAYC,QAFjB,CAGFC,gBAAgB,CAAE,EAHhB,CAIFC,WAAW,CAAE,IAJX,CAKFC,aAAa,CAAE,IALb,CANG,CAqEP,MAAO,SAASC,CAAAA,0BAAT,CAAoCC,CAApC,CAA0E,CAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAIX,QAAQ,CAACO,gBAAT,CAA0BI,CAA1B,CAAJ,CACE,MAAOX,CAAAA,QAAQ,CAACO,gBAAT,CAA0BI,CAA1B,CAAP,CAEA,GAAMC,CAAAA,CAAG,CAAG,EAAZ,CAEA,MADAZ,CAAAA,QAAQ,CAACO,gBAAT,CAA0BI,CAA1B,EAAuCC,CACvC,CAAOA,CAEV","sourcesContent":["/*global global:true process:true*/\n\nimport {LoadingState} from './sprite';\n\nexport const NSP = '/';\n\nexport const root: {__REDUX_DEVTOOLS_EXTENSION__?: any; __REDUX_DEVTOOLS_EXTENSION__OPTIONS?: any; onerror: any; onunhandledrejection: any} = ((typeof self == 'object' &&\n  self.self === self &&\n  self) ||\n  (typeof global == 'object' && global.global === global && global) ||\n  this) as any;\n\nexport const MetaData: {\n  isServer: boolean;\n  isDev: boolean;\n  actionCreatorMap: ActionCreatorMap;\n  clientStore: ModelStore;\n  appModuleName: string;\n} = {\n  isServer: typeof global !== 'undefined' && typeof window === 'undefined',\n  isDev: process.env.NODE_ENV !== 'production',\n  actionCreatorMap: {},\n  clientStore: null as any,\n  appModuleName: null as any,\n};\nexport interface ActionCreatorMap {\n  [moduleName: string]: ActionCreatorList;\n}\nexport interface ActionCreatorList {\n  [actionName: string]: ActionCreator;\n}\nexport type ActionCreator = (payload?: any) => Action;\ninterface Store {\n  dispatch(action: Action): void;\n}\nexport interface ModelStore extends Store {\n  _meta_: {\n    reducerMap: ReducerMap;\n    effectMap: EffectMap;\n    injectedModules: {[namespace: string]: boolean};\n    currentViews: CurrentViews;\n    prevState: {[key: string]: any};\n    currentState: {[key: string]: any};\n  };\n}\nexport interface CurrentViews {\n  [moduleName: string]: {[viewName: string]: number};\n}\nexport interface ReducerHandler extends ActionHandler {\n  (payload?: any): BaseModuleState;\n}\nexport interface EffectHandler extends ActionHandler {\n  (payload?: any): Promise<any>;\n}\nexport interface ActionHandlerMap {\n  [actionName: string]: {[moduleName: string]: ActionHandler};\n}\nexport interface ReducerMap extends ActionHandlerMap {\n  [actionName: string]: {[moduleName: string]: ReducerHandler};\n}\nexport interface EffectMap extends ActionHandlerMap {\n  [actionName: string]: {[moduleName: string]: EffectHandler};\n}\nexport interface Action {\n  type: string;\n  priority?: string[];\n  payload?: any;\n}\nexport interface ActionHandler {\n  __actionName__: string;\n  __isReducer__?: boolean;\n  __isEffect__?: boolean;\n  __isHandler__?: boolean;\n  __decorators__?: [(action: Action, moduleName: string, effectResult: Promise<any>) => any, null | ((status: 'Rejected' | 'Resolved', beforeResult: any, effectResult: any) => void)][];\n  __decoratorResults__?: any[];\n  (payload?: any): any;\n}\nexport interface BaseModuleState {\n  isModule?: boolean;\n  loading?: {[key: string]: LoadingState};\n}\nexport function getModuleActionCreatorList(namespace: string): ActionCreatorList {\n  // if (window[\"Proxy\"]) {\n  //   actions = new window[\"Proxy\"](\n  //     {},\n  //     {\n  //       get: (target: {}, key: string) => {\n  //         return (data: any) => ({ type: namespace + \"/\" + key, data });\n  //       }\n  //     }\n  //   );\n  // } else {\n  //   actions = getModuleActions(namespace) as any;\n  // }\n  if (MetaData.actionCreatorMap[namespace]) {\n    return MetaData.actionCreatorMap[namespace];\n  } else {\n    const obj = {};\n    MetaData.actionCreatorMap[namespace] = obj;\n    return obj;\n  }\n}\n"],"file":"global.js"}