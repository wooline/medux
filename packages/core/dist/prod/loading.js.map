{"version":3,"sources":["../../src/loading.ts"],"names":["loadings","depthTime","setLoadingDepthTime","second","setLoading","item","namespace","MetaData","appModuleName","group","isServer","key","NSP","TaskCounter","addListener","TaskCountEvent","e","store","clientStore","actions","ActionTypes","M_LOADING","action","data","dispatch","addItem"],"mappings":"0gBAIMA,QAA4C,CAAG,E,CAEjDC,SAAS,CAAG,C,CAET,QAASC,CAAAA,mBAAT,CAA6BC,CAA7B,CAA6C,CAClDF,SAAS,CAAGE,CACb,CACM,QAASC,CAAAA,UAAT,CAA4CC,CAA5C,CAA8H,IAAzEC,CAAAA,CAAyE,wDAArDC,iBAASC,aAA4C,CAA7BC,CAA6B,wDAAb,QAAa,CACnI,GAAIF,iBAASG,QAAb,CACE,MAAOL,CAAAA,CAAP,CAEF,GAAMM,CAAAA,CAAG,CAAGL,CAAS,CAAGM,WAAZ,CAAkBH,CAA9B,CAaA,MAZKT,CAAAA,QAAQ,CAACW,CAAD,CAYb,GAXEX,QAAQ,CAACW,CAAD,CAAR,CAAgB,GAAIE,oBAAJ,CAAgBZ,SAAhB,CAWlB,CAVED,QAAQ,CAACW,CAAD,CAAR,CAAcG,WAAd,CAA0BC,sBAA1B,CAA0C,SAAAC,CAAC,CAAI,CAC7C,GAAMC,CAAAA,CAAK,CAAGV,iBAASW,WAAvB,CACA,GAAID,CAAJ,CAAW,IACHE,CAAAA,CAAO,CAAG,uCAA2Bb,CAA3B,EAAsCc,sBAAYC,SAAlD,CADP,CAEHC,CAAM,CAAGH,CAAO,iCAAGV,CAAH,CAAWO,CAAC,CAACO,IAAb,EAFb,CAGTN,CAAK,CAACO,QAAN,CAAeF,CAAf,CACD,CACF,CAPD,CAUF,EADAtB,QAAQ,CAACW,CAAD,CAAR,CAAcc,OAAd,CAAsBpB,CAAtB,CACA,CAAOA,CACR","sourcesContent":["import {MetaData, getModuleActionCreatorList, NSP} from './global';\nimport {TaskCounter, TaskCountEvent} from './sprite';\nimport {ActionTypes} from './actions';\n\nconst loadings: {[namespace: string]: TaskCounter} = {};\n\nlet depthTime = 2;\n\nexport function setLoadingDepthTime(second: number) {\n  depthTime = second;\n}\nexport function setLoading<T extends Promise<any>>(item: T, namespace: string = MetaData.appModuleName, group: string = 'global'): T {\n  if (MetaData.isServer) {\n    return item;\n  }\n  const key = namespace + NSP + group;\n  if (!loadings[key]) {\n    loadings[key] = new TaskCounter(depthTime);\n    loadings[key].addListener(TaskCountEvent, e => {\n      const store = MetaData.clientStore;\n      if (store) {\n        const actions = getModuleActionCreatorList(namespace)[ActionTypes.M_LOADING];\n        const action = actions({[group]: e.data});\n        store.dispatch(action);\n      }\n    });\n  }\n  loadings[key].addItem(item);\n  return item;\n}\n"],"file":"loading.js"}