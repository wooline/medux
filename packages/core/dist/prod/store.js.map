{"version":3,"sources":["../../src/store.ts"],"names":["MetaData","NSP","client","isProcessedError","isPromise","setProcessedError","ActionTypes","errorAction","routeChangeAction","applyMiddleware","compose","createStore","injectModel","isPlainObject","getActionData","action","arr","Object","keys","filter","key","length","data","bindHistory","store","history","inTimeTravelling","handleLocationChange","location","getState","route","equal","locationToRouteData","dispatch","subscribe","storeRouteState","getLocation","patch","buildStore","preloadedState","storeReducers","storeMiddlewares","storeEnhancers","defaultRouteParams","Error","assign","state","type","F_ROUTE_CHANGE","payload","combineReducers","rootState","meta","_medux_","prevState","currentState","forEach","moduleName","handlersCommon","reducerMap","handlersEvery","replace","RegExp","handlers","handlerModules","orderList","priority","fun","appModuleName","unshift","push","__isHandler__","moduleNameMap","changed","some","middlewareEnhancer","preLoadMiddleware","next","split","actionName","moduleGetter","initModel","then","middleware","originalAction","isServer","M_LOADING","effectMap","promiseResults","effectResult","decorators","__decorators__","results","decorator","index","__decoratorResults__","errorHandler","reslove","error","F_ERROR","Promise","all","enhancers","enhancer","newCreateStore","newStore","injectedModules","currentViews","isDev","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION__OPTIONS","clientStore"],"mappings":"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","sourcesContent":["import {Action, MetaData, ModelStore, NSP, RouteData, RouteState, StoreState, client, isProcessedError, isPromise, setProcessedError} from './basic';\nimport {ActionTypes, errorAction, routeChangeAction} from './actions';\nimport {Middleware, ReducersMapObject, StoreEnhancer, applyMiddleware, compose, createStore} from 'redux';\n\nimport {injectModel} from './module';\nimport {isPlainObject} from './sprite';\n\n/*\nlet invalidViewTimer: number;\n\nfunction checkInvalidview() {\n  invalidViewTimer = 0;\n  const currentViews = MetaData.clientStore._medux_.currentViews;\n  const views: DisplayViews = {};\n  for (const moduleName in currentViews) {\n    if (currentViews.hasOwnProperty(moduleName)) {\n      const element = currentViews[moduleName];\n      for (const viewname in element) {\n        if (element[viewname]) {\n          const n = Object.keys(element[viewname]).length;\n          if (n) {\n            if (!views[moduleName]) {\n              views[moduleName] = {};\n            }\n            views[moduleName][viewname] = true;\n          }\n        }\n      }\n    }\n  }\n  MetaData.clientStore.dispatch(viewInvalidAction(views));\n}\n\nexport function invalidview() {\n  if (MetaData.isServer) {\n    return;\n  }\n  if (!invalidViewTimer) {\n    invalidViewTimer = setTimeout(checkInvalidview, 300);\n  }\n}\n\nexport function viewWillMount(moduleName: string, viewName: string, vid: string) {\n  if (MetaData.isServer) {\n    return;\n  }\n  const currentViews = MetaData.clientStore._medux_.currentViews;\n  if (!currentViews[moduleName]) {\n    currentViews[moduleName] = {[viewName]: {[vid]: true}};\n  } else {\n    const views = currentViews[moduleName];\n    if (!views[viewName]) {\n      views[viewName] = {[vid]: true};\n    } else {\n      views[viewName][vid] = true;\n    }\n  }\n  invalidview();\n}\n\nexport function viewWillUnmount(moduleName: string, viewName: string, vid: string) {\n  if (MetaData.isServer) {\n    return;\n  }\n  const currentViews = MetaData.clientStore._medux_.currentViews;\n  if (currentViews[moduleName] && currentViews[moduleName][viewName]) {\n    const views = currentViews[moduleName][viewName];\n    delete views[vid];\n  }\n  invalidview();\n}\n*/\n\nexport function getActionData<T>(action: Action): T {\n  const arr = Object.keys(action).filter(key => key !== 'type' && key !== 'priority' && key !== 'time');\n  if (arr.length === 0) {\n    return undefined as any;\n  } else if (arr.length === 1) {\n    return action[arr[0]];\n  } else {\n    const data = {...action};\n    delete data['type'];\n    delete data['priority'];\n    delete data['time'];\n    return data as any;\n  }\n}\nexport interface HistoryProxy<L = any> {\n  getLocation(): L;\n  subscribe(listener: (location: L) => void): void;\n  locationToRouteData(location: L): RouteData;\n  equal(a: L, b: L): boolean;\n  patch(location: L, routeData: RouteData): void;\n}\n\nfunction bindHistory<L>(store: ModelStore, history: HistoryProxy<L>) {\n  let inTimeTravelling = false;\n  const handleLocationChange = (location: L) => {\n    if (!inTimeTravelling) {\n      const {route} = store.getState() as StoreState;\n      if (route) {\n        if (history.equal(route.location, location)) {\n          return;\n        }\n      }\n      const data = history.locationToRouteData(location);\n      store.dispatch(routeChangeAction({location, data}));\n    } else {\n      inTimeTravelling = false;\n    }\n  };\n  history.subscribe(handleLocationChange);\n  store.subscribe(() => {\n    const storeRouteState = (store.getState() as StoreState).route;\n    if (!history.equal(storeRouteState.location, history.getLocation())) {\n      inTimeTravelling = true;\n      history.patch(storeRouteState.location, storeRouteState.data);\n    }\n  });\n  handleLocationChange(history.getLocation());\n}\n\nexport function buildStore(\n  history: HistoryProxy<any>,\n  preloadedState: {[key: string]: any} = {},\n  storeReducers: ReducersMapObject<any, any> = {},\n  storeMiddlewares: Middleware[] = [],\n  storeEnhancers: StoreEnhancer[] = [],\n  defaultRouteParams: {[moduleName: string]: {[key: string]: any} | undefined} = {}\n): ModelStore {\n  if (!isPlainObject(preloadedState)) {\n    throw new Error('preloadedState must be plain objects!');\n  }\n  if (!isPlainObject(storeReducers)) {\n    throw new Error('storeReducers must be plain objects!');\n  }\n  if (storeReducers.route) {\n    throw new Error(\"the reducer name 'route' is not allowed\");\n  }\n  Object.assign(MetaData.defaultRouteParams, defaultRouteParams);\n  storeReducers.route = (state: RouteState, action: Action) => {\n    if (action.type === ActionTypes.F_ROUTE_CHANGE) {\n      const payload: RouteState = getActionData(action);\n      if (!state) {\n        return payload;\n      }\n      return {...state, ...payload};\n    }\n    return state;\n  };\n  let store: ModelStore;\n  const combineReducers = (rootState: StoreState, action: Action) => {\n    if (!store) {\n      return rootState;\n    }\n    const meta = store._medux_;\n    meta.prevState = rootState;\n    const currentState = {...rootState};\n    meta.currentState = currentState;\n    Object.keys(storeReducers).forEach(moduleName => {\n      currentState[moduleName] = storeReducers[moduleName](currentState[moduleName], action);\n    });\n    const handlersCommon = meta.reducerMap[action.type] || {};\n    // 支持泛监听，形如 */loading\n    const handlersEvery = meta.reducerMap[action.type.replace(new RegExp(`[^${NSP}]+`), '*')] || {};\n    const handlers = {...handlersCommon, ...handlersEvery};\n    const handlerModules = Object.keys(handlers);\n\n    if (handlerModules.length > 0) {\n      const orderList: string[] = [];\n      const priority: string[] = action.priority ? [...action.priority] : [];\n      handlerModules.forEach(moduleName => {\n        const fun = handlers[moduleName];\n        if (moduleName === MetaData.appModuleName) {\n          orderList.unshift(moduleName);\n        } else {\n          orderList.push(moduleName);\n        }\n        if (!fun.__isHandler__) {\n          priority.unshift(moduleName);\n        }\n      });\n      orderList.unshift(...priority);\n      const moduleNameMap: {[key: string]: boolean} = {};\n      orderList.forEach(moduleName => {\n        if (!moduleNameMap[moduleName]) {\n          moduleNameMap[moduleName] = true;\n          const fun = handlers[moduleName];\n          currentState[moduleName] = fun(getActionData(action));\n        }\n      });\n    }\n    const changed = Object.keys(rootState).length !== Object.keys(currentState).length || Object.keys(rootState).some(moduleName => rootState[moduleName] !== currentState[moduleName]);\n    meta.prevState = changed ? currentState : rootState;\n    return meta.prevState;\n  };\n  const middleware = () => (next: Function) => (originalAction: Action) => {\n    if (MetaData.isServer) {\n      if (originalAction.type.split(NSP)[1] === ActionTypes.M_LOADING) {\n        return originalAction;\n      }\n    }\n    const action: Action = next(originalAction);\n    const handlersCommon = store._medux_.effectMap[action.type] || {};\n    // 支持泛监听，形如 */loading\n    const handlersEvery = store._medux_.effectMap[action.type.replace(new RegExp(`[^${NSP}]+`), '*')] || {};\n    const handlers = {...handlersCommon, ...handlersEvery};\n    const handlerModules = Object.keys(handlers);\n\n    if (handlerModules.length > 0) {\n      const orderList: string[] = [];\n      const priority: string[] = action.priority ? [...action.priority] : [];\n      handlerModules.forEach(moduleName => {\n        const fun = handlers[moduleName];\n        if (moduleName === MetaData.appModuleName) {\n          orderList.unshift(moduleName);\n        } else {\n          orderList.push(moduleName);\n        }\n        if (!fun.__isHandler__) {\n          priority.unshift(moduleName);\n        }\n      });\n      orderList.unshift(...priority);\n      const moduleNameMap: {[key: string]: boolean} = {};\n      const promiseResults: Promise<any>[] = [];\n      orderList.forEach(moduleName => {\n        if (!moduleNameMap[moduleName]) {\n          moduleNameMap[moduleName] = true;\n          const fun = handlers[moduleName];\n          const effectResult = fun(getActionData(action));\n          const decorators = fun.__decorators__;\n          if (decorators) {\n            const results: any[] = [];\n            decorators.forEach((decorator, index) => {\n              results[index] = decorator[0](action, moduleName, effectResult);\n            });\n            fun.__decoratorResults__ = results;\n          }\n\n          const errorHandler = effectResult.then(\n            (reslove: any) => {\n              if (decorators) {\n                const results = fun.__decoratorResults__ || [];\n                decorators.forEach((decorator, index) => {\n                  if (decorator[1]) {\n                    decorator[1]('Resolved', results[index], reslove);\n                  }\n                });\n                fun.__decoratorResults__ = undefined;\n              }\n              return reslove;\n            },\n            (error: any) => {\n              if (decorators) {\n                const results = fun.__decoratorResults__ || [];\n                decorators.forEach((decorator, index) => {\n                  if (decorator[1]) {\n                    decorator[1]('Rejected', results[index], error);\n                  }\n                });\n                fun.__decoratorResults__ = undefined;\n              }\n              if (action.type === ActionTypes.F_ERROR) {\n                if (isProcessedError(error) === undefined) {\n                  error = setProcessedError(error, true);\n                }\n                throw error;\n              } else if (isProcessedError(error)) {\n                throw error;\n              } else {\n                return store.dispatch(errorAction(error)) as any;\n              }\n            }\n          );\n\n          promiseResults.push(errorHandler);\n        }\n      });\n      if (promiseResults.length) {\n        return Promise.all(promiseResults);\n      }\n    }\n    return action;\n  };\n\n  const preLoadMiddleware = () => (next: Function) => (action: Action) => {\n    const [moduleName, actionName] = action.type.split(NSP);\n    if (moduleName && actionName && MetaData.moduleGetter[moduleName]) {\n      const initModel = injectModel(MetaData.moduleGetter, moduleName, store);\n      if (isPromise(initModel)) {\n        return initModel.then(() => next(action));\n      }\n    }\n    return next(action);\n  };\n\n  const middlewareEnhancer = applyMiddleware(preLoadMiddleware, ...storeMiddlewares, middleware);\n  const enhancer: StoreEnhancer = newCreateStore => {\n    return (...args) => {\n      const newStore = newCreateStore(...args);\n      const modelStore: ModelStore = newStore as any;\n      modelStore._medux_ = {\n        prevState: {} as any,\n        currentState: {} as any,\n        reducerMap: {},\n        effectMap: {},\n        injectedModules: {},\n        currentViews: {},\n      };\n      return newStore;\n    };\n  };\n  const enhancers = [...storeEnhancers, middlewareEnhancer, enhancer];\n  if (MetaData.isDev && client && client.__REDUX_DEVTOOLS_EXTENSION__) {\n    enhancers.push(client.__REDUX_DEVTOOLS_EXTENSION__(client.__REDUX_DEVTOOLS_EXTENSION__OPTIONS));\n  }\n  store = createStore(combineReducers as any, preloadedState, compose(...enhancers));\n  bindHistory(store, history);\n  MetaData.clientStore = store;\n  return store;\n}\n"],"file":"store.js"}