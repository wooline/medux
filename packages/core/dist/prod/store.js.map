{"version":3,"sources":["../../src/store.ts"],"names":["MetaData","NSP","client","isPromise","ActionTypes","errorAction","routeChangeAction","applyMiddleware","compose","createStore","injectModel","isPlainObject","getActionData","action","arr","Object","keys","filter","key","length","data","bindHistory","store","history","inTimeTravelling","handleLocationChange","location","getState","route","equal","locationToRouteData","dispatch","subscribe","storeRouteState","getLocation","patch","buildStore","preloadedState","storeReducers","storeMiddlewares","storeEnhancers","defaultRouteParams","Error","state","type","F_ROUTE_CHANGE","payload","combineReducers","rootState","meta","_medux_","prevState","currentState","forEach","moduleName","handlersCommon","reducerMap","handlersEvery","replace","RegExp","handlers","handlerModules","orderList","priority","fun","appModuleName","unshift","push","__isHandler__","moduleNameMap","changed","some","middlewareEnhancer","preLoadMiddleware","next","split","actionName","moduleGetter","initModel","then","middleware","originalAction","isServer","M_LOADING","effectMap","promiseResults","effectResult","decorators","__decorators__","results","decorator","index","__decoratorResults__","reslove","reject","Promise","all","enhancers","enhancer","newCreateStore","newStore","router","injectedModules","currentViews","isDev","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION__OPTIONS","clientStore","addEventListener","event","reason"],"mappings":"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","sourcesContent":["import {Action, BaseModelState, MetaData, ModelStore, NSP, RouteData, RouteState, client, isPromise} from './basic';\nimport {ActionTypes, errorAction, routeChangeAction} from './actions';\nimport {Middleware, ReducersMapObject, StoreEnhancer, applyMiddleware, compose, createStore} from 'redux';\n\nimport {injectModel} from './module';\nimport {isPlainObject} from './sprite';\n\n/**\n * dispatch push action\n * middleware 拦截并调用history.push\n * history触发侦听器，dispatch change action\n * store侦听器，判断是否时光\n */\n\n// let invalidViewTimer: number;\n\n// function checkInvalidview() {\n//   invalidViewTimer = 0;\n//   const currentViews = MetaData.clientStore._medux_.currentViews;\n//   const views: DisplayViews = {};\n//   for (const moduleName in currentViews) {\n//     if (currentViews.hasOwnProperty(moduleName)) {\n//       const element = currentViews[moduleName];\n//       for (const viewname in element) {\n//         if (element[viewname]) {\n//           const n = Object.keys(element[viewname]).length;\n//           if (n) {\n//             if (!views[moduleName]) {\n//               views[moduleName] = {};\n//             }\n//             views[moduleName][viewname] = true;\n//           }\n//         }\n//       }\n//     }\n//   }\n//   // MetaData.clientStore.dispatch(viewInvalidAction(views));\n// }\n\n// export function invalidview() {\n//   if (MetaData.isServer) {\n//     return;\n//   }\n//   if (!invalidViewTimer) {\n//     invalidViewTimer = setTimeout(checkInvalidview, 300);\n//   }\n// }\n\n// export function viewWillMount(moduleName: string, viewName: string, vid: string) {\n//   if (MetaData.isServer) {\n//     return;\n//   }\n//   const currentViews = MetaData.clientStore._medux_.currentViews;\n//   if (!currentViews[moduleName]) {\n//     currentViews[moduleName] = {[viewName]: {[vid]: true}};\n//   } else {\n//     const views = currentViews[moduleName];\n//     if (!views[viewName]) {\n//       views[viewName] = {[vid]: true};\n//     } else {\n//       views[viewName][vid] = true;\n//     }\n//   }\n//   invalidview();\n// }\n\n// export function viewWillUnmount(moduleName: string, viewName: string, vid: string) {\n//   if (MetaData.isServer) {\n//     return;\n//   }\n//   const currentViews = MetaData.clientStore._medux_.currentViews;\n//   if (currentViews[moduleName] && currentViews[moduleName][viewName]) {\n//     const views = currentViews[moduleName][viewName];\n//     delete views[vid];\n//   }\n//   invalidview();\n// }\n\nexport function getActionData<T>(action: Action): T {\n  const arr = Object.keys(action).filter(key => key !== 'type' && key !== 'priority' && key !== 'time');\n  if (arr.length === 0) {\n    return undefined as any;\n  } else if (arr.length === 1) {\n    return action[arr[0]];\n  } else {\n    const data = {...action};\n    delete data['type'];\n    delete data['priority'];\n    delete data['time'];\n    return data as any;\n  }\n}\nexport interface HistoryProxy<L = any> {\n  getLocation(): L;\n  subscribe(listener: (location: L) => void): void;\n  locationToRouteData(location: L): RouteData;\n  equal(a: L, b: L): boolean;\n  patch(location: L, routeData: RouteData): void;\n}\n\nfunction bindHistory<L>(store: ModelStore, history: HistoryProxy<L>) {\n  let inTimeTravelling = false;\n  const handleLocationChange = (location: L) => {\n    if (!inTimeTravelling) {\n      const {route}: {route: RouteState} = store.getState() as any;\n      if (route) {\n        if (history.equal(route.location, location)) {\n          return;\n        }\n      }\n      const data = history.locationToRouteData(location);\n      store.dispatch(routeChangeAction({location, data}));\n    } else {\n      inTimeTravelling = false;\n    }\n  };\n  history.subscribe(handleLocationChange);\n  store.subscribe(() => {\n    const storeRouteState: RouteState<L> = store.getState().route;\n    if (!history.equal(storeRouteState.location, history.getLocation())) {\n      inTimeTravelling = true;\n      history.patch(storeRouteState.location, storeRouteState.data);\n    }\n  });\n  handleLocationChange(history.getLocation());\n}\n\nexport function buildStore(\n  history: HistoryProxy<any>,\n  preloadedState: {[key: string]: any} = {},\n  storeReducers: ReducersMapObject<any, any> = {},\n  storeMiddlewares: Middleware[] = [],\n  storeEnhancers: StoreEnhancer[] = [],\n  defaultRouteParams: {[moduleName: string]: {[key: string]: any} | undefined} = {}\n): ModelStore {\n  if (!isPlainObject(preloadedState)) {\n    throw new Error('preloadedState must be plain objects!');\n  }\n  if (!isPlainObject(storeReducers)) {\n    throw new Error('storeReducers must be plain objects!');\n  }\n  if (storeReducers.route) {\n    throw new Error(\"the reducer name 'route' is not allowed\");\n  }\n  MetaData.defaultRouteParams = defaultRouteParams;\n  storeReducers.route = (state: RouteState, action: Action) => {\n    if (action.type === ActionTypes.F_ROUTE_CHANGE) {\n      const payload: RouteState = getActionData(action);\n      if (!state) {\n        return payload;\n      }\n      return {...state, ...payload};\n    }\n    return state;\n  };\n  let store: ModelStore;\n  const combineReducers = (rootState: {[moduleName: string]: BaseModelState}, action: Action) => {\n    if (!store) {\n      return rootState;\n    }\n    const meta = store._medux_;\n    meta.prevState = rootState;\n    const currentState = {...rootState};\n    meta.currentState = currentState;\n    Object.keys(storeReducers).forEach(moduleName => {\n      currentState[moduleName] = storeReducers[moduleName](currentState[moduleName], action);\n    });\n    const handlersCommon = meta.reducerMap[action.type] || {};\n    // 支持泛监听，形如 */loading\n    const handlersEvery = meta.reducerMap[action.type.replace(new RegExp(`[^${NSP}]+`), '*')] || {};\n    const handlers = {...handlersCommon, ...handlersEvery};\n    const handlerModules = Object.keys(handlers);\n\n    if (handlerModules.length > 0) {\n      const orderList: string[] = []; //\n      const priority: string[] = action.priority ? [...action.priority] : [];\n      handlerModules.forEach(moduleName => {\n        const fun = handlers[moduleName];\n        if (moduleName === MetaData.appModuleName) {\n          orderList.unshift(moduleName);\n        } else {\n          orderList.push(moduleName);\n        }\n        if (!fun.__isHandler__) {\n          priority.unshift(moduleName);\n        }\n      });\n      orderList.unshift(...priority);\n      const moduleNameMap: {[key: string]: boolean} = {};\n      orderList.forEach(moduleName => {\n        if (!moduleNameMap[moduleName]) {\n          moduleNameMap[moduleName] = true;\n          const fun = handlers[moduleName];\n          currentState[moduleName] = fun(getActionData(action));\n        }\n      });\n    }\n    const changed = Object.keys(rootState).length !== Object.keys(currentState).length || Object.keys(rootState).some(moduleName => rootState[moduleName] !== currentState[moduleName]);\n    meta.prevState = changed ? currentState : rootState;\n    return meta.prevState;\n  };\n\n  const middleware = () => (next: Function) => (originalAction: Action) => {\n    if (MetaData.isServer) {\n      if (originalAction.type.split(NSP)[1] === ActionTypes.M_LOADING) {\n        return originalAction;\n      }\n    }\n    const action: Action = next(originalAction);\n    const handlersCommon = store._medux_.effectMap[action.type] || {};\n    // 支持泛监听，形如 */loading\n    const handlersEvery = store._medux_.effectMap[action.type.replace(new RegExp(`[^${NSP}]+`), '*')] || {};\n    const handlers = {...handlersCommon, ...handlersEvery};\n    const handlerModules = Object.keys(handlers);\n\n    if (handlerModules.length > 0) {\n      const orderList: string[] = action.priority ? [...action.priority] : [];\n      handlerModules.forEach(moduleName => {\n        const fun = handlers[moduleName];\n        if (fun.__isHandler__) {\n          orderList.push(moduleName);\n        } else {\n          orderList.unshift(moduleName);\n        }\n      });\n      const moduleNameMap: {[key: string]: boolean} = {};\n      const promiseResults: Promise<any>[] = [];\n      orderList.forEach(moduleName => {\n        if (!moduleNameMap[moduleName]) {\n          moduleNameMap[moduleName] = true;\n          const fun = handlers[moduleName];\n          const effectResult = fun(getActionData(action));\n          const decorators = fun.__decorators__;\n          if (decorators) {\n            const results: any[] = [];\n            decorators.forEach((decorator, index) => {\n              results[index] = decorator[0](action, moduleName, effectResult);\n            });\n            fun.__decoratorResults__ = results;\n          }\n\n          effectResult.then(\n            (reslove: any) => {\n              if (decorators) {\n                const results = fun.__decoratorResults__ || [];\n                decorators.forEach((decorator, index) => {\n                  if (decorator[1]) {\n                    decorator[1]('Resolved', results[index], reslove);\n                  }\n                });\n                fun.__decoratorResults__ = undefined;\n              }\n              return reslove;\n            },\n            (reject: any) => {\n              if (decorators) {\n                const results = fun.__decoratorResults__ || [];\n                decorators.forEach((decorator, index) => {\n                  if (decorator[1]) {\n                    decorator[1]('Rejected', results[index], reject);\n                  }\n                });\n                fun.__decoratorResults__ = undefined;\n              }\n            }\n          );\n          promiseResults.push(effectResult);\n        }\n      });\n      if (promiseResults.length) {\n        return Promise.all(promiseResults);\n      }\n    }\n    return action;\n  };\n\n  const preLoadMiddleware = () => (next: Function) => (action: Action) => {\n    const [moduleName, actionName] = action.type.split(NSP);\n    if (moduleName && actionName && MetaData.moduleGetter[moduleName]) {\n      const initModel = injectModel(MetaData.moduleGetter, moduleName, store);\n      if (isPromise(initModel)) {\n        return initModel.then(() => next(action));\n      }\n    }\n    return next(action);\n  };\n\n  const middlewareEnhancer = applyMiddleware(preLoadMiddleware, ...storeMiddlewares, middleware);\n  const enhancer: StoreEnhancer = newCreateStore => {\n    return (...args) => {\n      const newStore = newCreateStore(...args);\n      const modelStore: ModelStore = newStore as any;\n      modelStore._medux_ = {\n        prevState: {router: null},\n        currentState: {router: null},\n        reducerMap: {},\n        effectMap: {},\n        injectedModules: {},\n        currentViews: {},\n      };\n      return newStore;\n    };\n  };\n  const enhancers = [...storeEnhancers, middlewareEnhancer, enhancer];\n  if (MetaData.isDev && client && client.__REDUX_DEVTOOLS_EXTENSION__) {\n    enhancers.push(client.__REDUX_DEVTOOLS_EXTENSION__(client.__REDUX_DEVTOOLS_EXTENSION__OPTIONS));\n  }\n  store = createStore(combineReducers as any, preloadedState, compose(...enhancers));\n  bindHistory(store, history);\n  MetaData.clientStore = store;\n  if (client) {\n    if ('onerror' in client) {\n      client.addEventListener(\n        'error',\n        event => {\n          store.dispatch(errorAction(event));\n        },\n        true\n      );\n    }\n    if ('onunhandledrejection' in client) {\n      client.addEventListener(\n        'unhandledrejection',\n        event => {\n          store.dispatch(errorAction(event.reason));\n        },\n        true\n      );\n    }\n  }\n  return store;\n}\n"],"file":"store.js"}