{"version":3,"sources":["../../src/module.ts"],"names":["MetaData","client","config","injectActions","isPromise","reducer","buildStore","exportModule","moduleName","initState","ActionHandles","views","model","store","hasInjected","_medux_","injectedModules","moduleState","getState","handlers","actions","params","prevState","route","data","preRouteParams","routeParams","initAction","Init","dispatch","BaseModelHandlers","constructor","presetData","isModule","getRootState","getCurrentState","currentState","getCurrentRootState","action","handler","actionCreatorMap","__actionName__","payload","callThisAction","Update","loadModel","state","loading","isPromiseModule","module","isPromiseView","moduleView","exportActions","moduleGetter","Object","keys","reduce","maps","Proxy","get","target","key","type","NSP","set","result","then","default","getView","viewName","view","isServer","initModel","clientStore","getModuleByName","getModuleListByNames","moduleNames","preModules","map","Promise","resolve","all","renderApp","render","appModuleName","history","storeOptions","ssrInitStoreKey","initData","reducers","middlewares","enhancers","reduxStore","preModuleNames","push","filter","appModule","renderSSR","storeState","paths","length","undefined","inited","i","k","split","VSP"],"mappings":"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","sourcesContent":["import {Action, ActionCreatorList, ActionHandler, BaseModelState, MetaData, ModelStore, RouteState, StoreState, client, config, injectActions, isPromise, reducer} from './basic';\nimport {HistoryProxy, buildStore} from './store';\nimport {Middleware, ReducersMapObject, Store, StoreEnhancer} from 'redux';\n\nexport interface Model<ModelState extends BaseModelState = BaseModelState> {\n  moduleName: string;\n  initState: ModelState;\n  (store: ModelStore): void | Promise<void>;\n}\n\nexport interface Module<M extends Model = Model, VS extends {[key: string]: any} = {[key: string]: any}, AS extends ActionCreatorList = {}, N extends string = string> {\n  default: {\n    moduleName: N;\n    model: M;\n    views: VS;\n    actions: AS;\n  };\n}\n\nexport interface ModuleGetter {\n  [moduleName: string]: () => Module | Promise<Module>;\n}\n\ntype ReturnModule<T> = T extends () => Promise<infer R> ? R : T extends () => infer R ? R : never;\n// export type ReturnViews<T extends () => any> = T extends () => Promise<Module<Model, infer R>> ? R : T extends () => Module<Model, infer R> ? R : never;\ntype ModuleName<M extends any> = M['default']['moduleName'];\ntype ModuleStates<M extends any> = M['default']['model']['initState'];\ntype ModuleParams<M extends any> = M['default']['model']['initState']['routeParams'];\ntype ModuleViews<M extends any> = M['default']['views'];\ntype ModuleActions<M extends any> = M['default']['actions'];\ntype MountViews<M extends any> = {[key in keyof M['default']['views']]?: boolean};\n\nexport type RootState<G extends ModuleGetter, L> = {\n  route: {\n    location: L;\n    data: {\n      views: {[key in keyof G]?: MountViews<ReturnModule<G[key]>>};\n      params: {[key in keyof G]?: ModuleParams<ReturnModule<G[key]>>};\n      stackParams: {[moduleName: string]: {[key: string]: any} | undefined}[];\n      paths: any;\n    };\n  };\n} & {[key in keyof G]?: ModuleStates<ReturnModule<G[key]>>};\n\nexport type ExportModule<Component> = <S extends BaseModelState, V extends {[key: string]: Component}, T extends BaseModelHandlers<S, any>, N extends string>(\n  moduleName: N,\n  initState: S,\n  ActionHandles: {new (moduleName: string, store: any, initState: any, presetData?: any): T},\n  views: V\n) => Module<Model<S>, V, Actions<T>, N>['default'];\n\nexport const exportModule: ExportModule<any> = (moduleName, initState, ActionHandles, views) => {\n  const model = (store: ModelStore) => {\n    const hasInjected = store._medux_.injectedModules[moduleName];\n    if (!hasInjected) {\n      store._medux_.injectedModules[moduleName] = true;\n      const moduleState: BaseModelState = store.getState()[moduleName];\n      const handlers = new ActionHandles(moduleName, store, initState, moduleState);\n      const actions = injectActions(store, moduleName, handlers as any);\n      (handlers as any).actions = actions;\n      if (!moduleState) {\n        const params = store._medux_.prevState.route.data.params;\n        const preRouteParams = params[moduleName];\n        initState = {...initState, preRouteParams: initState.preRouteParams || preRouteParams, routeParams: initState.routeParams || {}};\n        const initAction = actions.Init(initState);\n        return store.dispatch(initAction) as any;\n      }\n    }\n    return void 0;\n  };\n  model.moduleName = moduleName;\n  model.initState = initState;\n  const actions = {} as any;\n  return {\n    moduleName,\n    model,\n    views,\n    actions,\n  };\n};\n\nexport abstract class BaseModelHandlers<S extends BaseModelState, R extends {route: RouteState}> {\n  protected readonly actions: Actions<this> = null as any;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public constructor(protected readonly moduleName: string, protected readonly store: ModelStore, protected readonly initState: S, presetData?: any) {\n    initState.isModule = true;\n  }\n\n  protected get state(): S {\n    return this.getState();\n  }\n  //ie8不支持getter\n  protected getState(): S {\n    return this.store._medux_.prevState[this.moduleName] as S;\n  }\n  protected get rootState(): R {\n    return this.getRootState();\n  }\n  //ie8不支持getter\n  protected getRootState(): R {\n    return this.store._medux_.prevState as any;\n  }\n  protected get currentState(): S {\n    return this.getCurrentState();\n  }\n  //ie8不支持getter\n  protected getCurrentState(): S {\n    return this.store._medux_.currentState[this.moduleName] as S;\n  }\n  protected get currentRootState(): R {\n    return this.getCurrentRootState();\n  }\n  //ie8不支持getter\n  protected getCurrentRootState(): R {\n    return this.store._medux_.currentState as any;\n  }\n  protected dispatch(action: Action): Action | Promise<void> {\n    return this.store.dispatch(action) as any;\n  }\n\n  protected callThisAction<T extends any[]>(handler: (...args: T) => any, ...rest: T): {type: string; payload?: any} {\n    const actions = MetaData.actionCreatorMap[this.moduleName];\n    return actions[(handler as ActionHandler).__actionName__](rest[0]);\n  }\n  protected updateState(payload: Partial<S>) {\n    this.dispatch(this.callThisAction(this.Update, {...this.getState(), ...payload}));\n  }\n  protected loadModel(moduleName: Extract<keyof R, string>) {\n    return loadModel(moduleName, this.store);\n  }\n  @reducer\n  protected Init(payload: S): S {\n    return payload;\n  }\n\n  @reducer\n  protected Update(payload: S): S {\n    return payload;\n  }\n\n  @reducer\n  public PreRouteParams(payload: {[key: string]: any}): S {\n    const state = this.getState();\n    return {\n      ...state,\n      preRouteParams: payload,\n    };\n  }\n\n  @reducer\n  protected Loading(payload: {[group: string]: string}): S {\n    const state = this.getState();\n    return {\n      ...state,\n      loading: {...state.loading, ...payload},\n    };\n  }\n}\n\ntype Handler<F> = F extends (...args: infer P) => any\n  ? (\n      ...args: P\n    ) => {\n      type: string;\n    }\n  : never;\n\nexport type Actions<Ins> = {[K in keyof Ins]: Ins[K] extends (...args: any[]) => any ? Handler<Ins[K]> : never};\n\nexport function isPromiseModule(module: Module | Promise<Module>): module is Promise<Module> {\n  return typeof module['then'] === 'function';\n}\nexport function isPromiseView<T>(moduleView: T | Promise<T>): moduleView is Promise<T> {\n  return typeof moduleView['then'] === 'function';\n}\n\nexport function exportActions<G extends {[N in keyof G]: N extends ModuleName<ReturnModule<G[N]>> ? G[N] : never}>(moduleGetter: G): {[key in keyof G]: ModuleActions<ReturnModule<G[key]>>} {\n  MetaData.moduleGetter = moduleGetter as any;\n  MetaData.actionCreatorMap = Object.keys(moduleGetter).reduce((maps, moduleName) => {\n    maps[moduleName] =\n      typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(\n            {},\n            {\n              get: (target: {}, key: string) => {\n                return (...payload: any[]) => ({type: moduleName + config.NSP + key, payload});\n              },\n              set: () => {\n                return true;\n              },\n            }\n          );\n    return maps;\n  }, {});\n  return MetaData.actionCreatorMap as any;\n}\n\nexport function loadModel<MG extends ModuleGetter>(moduleName: Extract<keyof MG, string>, store: ModelStore): void | Promise<void> {\n  const hasInjected = store._medux_.injectedModules[moduleName];\n  if (!hasInjected) {\n    const moduleGetter = MetaData.moduleGetter as any;\n    const result = moduleGetter[moduleName]();\n    if (isPromiseModule(result)) {\n      return result.then(module => {\n        moduleGetter[moduleName] = (() => module) as any;\n        return module.default.model(store);\n      });\n    } else {\n      return result.default.model(store);\n    }\n  }\n}\n\nexport function getView<T>(moduleName: string, viewName: string): T | Promise<T> {\n  const moduleGetter: ModuleGetter = MetaData.moduleGetter;\n  const result = moduleGetter[moduleName]();\n  if (isPromiseModule(result)) {\n    return result.then(module => {\n      moduleGetter[moduleName] = () => module;\n      const view: T = module.default.views[viewName];\n      if (MetaData.isServer) {\n        return view;\n      }\n      const initModel = module.default.model(MetaData.clientStore);\n      if (isPromise(initModel)) {\n        return initModel.then(() => view);\n      } else {\n        return view;\n      }\n    });\n  } else {\n    const view: T = result.default.views[viewName];\n    if (MetaData.isServer) {\n      return view;\n    }\n    const initModel = result.default.model(MetaData.clientStore);\n    if (isPromise(initModel)) {\n      return initModel.then(() => view);\n    } else {\n      return view;\n    }\n  }\n}\n\nexport type LoadView<MG extends ModuleGetter, OPTS = any> = <M extends Extract<keyof MG, string>, V extends ModuleViews<ReturnModule<MG[M]>>, N extends Extract<keyof V, string>>(\n  moduleName: M,\n  viewName: N,\n  options?: OPTS\n) => V[N];\n\nfunction getModuleByName(moduleName: string, moduleGetter: ModuleGetter): Promise<Module> | Module {\n  const result = moduleGetter[moduleName]();\n  if (isPromiseModule(result)) {\n    return result.then(module => {\n      //在SSR时loadView不能出现异步，否则浏览器初轮渲染不会包括异步组件，从而导致和服务器返回不一致\n      moduleGetter[moduleName] = () => module;\n      return module;\n    });\n  } else {\n    return result;\n  }\n}\nfunction getModuleListByNames(moduleNames: string[], moduleGetter: ModuleGetter): Promise<Module[]> {\n  const preModules = moduleNames.map(moduleName => {\n    const module = getModuleByName(moduleName, moduleGetter);\n    if (isPromiseModule(module)) {\n      return module;\n    } else {\n      return Promise.resolve(module);\n    }\n  });\n  return Promise.all(preModules);\n}\nexport interface StoreOptions {\n  ssrInitStoreKey?: string;\n  reducers?: ReducersMapObject;\n  middlewares?: Middleware[];\n  enhancers?: StoreEnhancer[];\n  initData?: {[key: string]: any};\n}\n\nexport function renderApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (store: Store, appModel: Model, appViews: {[key: string]: any}, ssrInitStoreKey: string) => void,\n  moduleGetter: M,\n  appModuleName: A,\n  history: HistoryProxy,\n  storeOptions: StoreOptions = {}\n): Promise<Store> {\n  MetaData.appModuleName = appModuleName;\n  const ssrInitStoreKey = storeOptions.ssrInitStoreKey || 'meduxInitStore';\n  let initData = {};\n  if (storeOptions.initData || client![ssrInitStoreKey]) {\n    initData = {...client![ssrInitStoreKey], ...storeOptions.initData};\n  }\n  const store = buildStore(history, initData, storeOptions.reducers, storeOptions.middlewares, storeOptions.enhancers);\n  const reduxStore: Store = store as any;\n  const preModuleNames: string[] = [appModuleName];\n  if (initData) {\n    preModuleNames.push(...Object.keys(initData).filter(key => key !== appModuleName && initData[key].isModule));\n  }\n  // 在ssr时，client必须在第一次render周期中完成和ssr一至的输出结构，所以不能出现异步模块\n  return getModuleListByNames(preModuleNames, moduleGetter).then(([appModule]) => {\n    const initModel = appModule.default.model(store);\n    render(reduxStore, appModule.default.model, appModule.default.views, ssrInitStoreKey);\n    if (isPromise(initModel)) {\n      return initModel.then(() => reduxStore);\n    } else {\n      return reduxStore;\n    }\n  });\n}\n\nexport async function renderSSR<M extends ModuleGetter, A extends Extract<keyof M, string>>(\n  render: (store: Store, appModel: Model, appViews: {[key: string]: any}, ssrInitStoreKey: string) => {html: any; data: any; ssrInitStoreKey: string; store: Store},\n  moduleGetter: M,\n  appModuleName: A,\n  history: HistoryProxy,\n  storeOptions: StoreOptions = {}\n) {\n  MetaData.appModuleName = appModuleName;\n  const ssrInitStoreKey = storeOptions.ssrInitStoreKey || 'meduxInitStore';\n  const store = buildStore(history, storeOptions.initData, storeOptions.reducers, storeOptions.middlewares, storeOptions.enhancers);\n  const storeState = store.getState() as StoreState;\n  const {paths} = storeState.route.data;\n  paths.length === 0 && paths.push(appModuleName);\n  let appModule: Module | undefined = undefined;\n  const inited: {[moduleName: string]: boolean} = {};\n  for (let i = 0, k = paths.length; i < k; i++) {\n    const [moduleName] = paths[i].split(config.VSP);\n    if (!inited[moduleName]) {\n      inited[moduleName] = true;\n      const module = moduleGetter[moduleName]() as Module;\n      await module.default.model(store);\n      if (i === 0) {\n        appModule = module;\n      }\n    }\n  }\n  return render(store as any, appModule!.default.model, appModule!.default.views, ssrInitStoreKey);\n}\n"],"file":"module.js"}