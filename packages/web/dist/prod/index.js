import"core-js/modules/es.string.replace";import"core-js/modules/es.string.search";import _objectSpread from"@babel/runtime/helpers/esm/objectSpread";import{createBrowserHistory,createMemoryHistory}from"history";import{isServer}from"@medux/core";export{buildLocationToRoute}from"./routePlanA";function isLocation(a){return!a.views}var BrowserHistoryProxy=/*#__PURE__*/function(){function a(a,b){this.history=a,this.locationToRoute=b}var b=a.prototype;return b.getLocation=function getLocation(){return this.history.location},b.subscribe=function subscribe(a){this.history.listen(a)},b.locationToRouteData=function locationToRouteData(a){return a.state||this.locationToRoute(a)},b.isTimeTravel=function isTimeTravel(a){var b=a.pathname,c=a.search,d=a.hash,e=this.history.location,f=e.pathname,g=e.search,h=e.hash;return f!==b||g!==c||h!==d},b.patch=function patch(a,b){this.history.push(_objectSpread({},a,{state:b}))},a}(),BrowserHistoryActions=/*#__PURE__*/function(){function a(a,b){this.history=a,this.routeToLocation=b}var b=a.prototype;return b.push=function push(a){if("string"==typeof a)this.history.push(a);else if(isLocation(a))this.history.push(a);else{var b=this.routeToLocation(a);this.history.push(_objectSpread({},b,{state:a}))}},b.replace=function replace(a){if("string"==typeof a)this.history.replace(a);else if(isLocation(a))this.history.push(a);else{var b=this.routeToLocation(a);this.history.replace(_objectSpread({},b,{state:a}))}},b.go=function go(a){this.history.go(a)},b.goBack=function goBack(){this.history.goBack()},b.goForward=function goForward(){this.history.goForward()},a}();export function createHistory(a){var b=isServer()?createMemoryHistory(a):createBrowserHistory(a),c=new BrowserHistoryProxy(b,a.locationToRoute),d=new BrowserHistoryActions(b,a.routeToLocation);return{history:b,historyProxy:c,historyActions:d}}
//# sourceMappingURL=index.js.map