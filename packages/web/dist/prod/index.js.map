{"version":3,"sources":["../../src/index.ts"],"names":["createBrowserHistory","createMemoryHistory","isServer","buildLocationToRoute","isLocation","data","BrowserHistoryProxy","history","locationToRoute","getLocation","location","subscribe","listener","listen","locationToRouteData","state","isTimeTravel","storeLocation","pathnameInStore","pathname","searchInStore","search","hashInStore","hash","patch","routeData","push","BrowserHistoryActions","routeToLocation","replace","go","n","goBack","goForward","createHistory","options","historyProxy","historyActions"],"mappings":"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","sourcesContent":["import {BrowserHistoryBuildOptions, History, MemoryHistoryBuildOptions, createBrowserHistory, createMemoryHistory} from 'history';\nimport {HistoryProxy, RouteData} from '@medux/core/types/export';\n\nimport {isServer} from '@medux/core';\n\nexport {buildLocationToRoute} from './routePlanA';\n\ninterface Location {\n  pathname: string;\n  search: string;\n  hash: string;\n  state: RouteData;\n  key?: string;\n}\n\nexport interface BrowserLocation {\n  pathname: string;\n  search: string;\n  hash: string;\n  key?: string;\n}\n\nexport interface TransformRoute {\n  locationToRoute: (location: BrowserLocation) => RouteData;\n  routeToLocation: (routeData: RouteData) => BrowserLocation;\n}\n\nexport type BrowserHistoryOptions = BrowserHistoryBuildOptions & TransformRoute;\nexport type MemoryHistoryOptions = MemoryHistoryBuildOptions & TransformRoute;\nfunction isLocation(data: RouteData | BrowserLocation): data is Location {\n  return !data['views'];\n}\n\nexport interface HistoryActions {\n  push(data: RouteData | BrowserLocation | string): void;\n  replace(data: RouteData | BrowserLocation | string): void;\n  go(n: number): void;\n  goBack(): void;\n  goForward(): void;\n}\nclass BrowserHistoryProxy implements HistoryProxy<Location> {\n  public constructor(protected history: History, protected locationToRoute: (location: BrowserLocation) => RouteData) {}\n  public getLocation() {\n    return this.history.location;\n  }\n  public subscribe(listener: (location: Location) => void) {\n    this.history.listen(listener);\n  }\n  public locationToRouteData(location: Location) {\n    return location.state || this.locationToRoute(location);\n  }\n  public isTimeTravel(storeLocation: Location) {\n    const {pathname: pathnameInStore, search: searchInStore, hash: hashInStore} = storeLocation;\n    const {pathname, search, hash} = this.history.location;\n    return pathname !== pathnameInStore || search !== searchInStore || hash !== hashInStore;\n  }\n  public patch(location: Location, routeData: RouteData): void {\n    this.history.push({...location, state: routeData});\n  }\n}\n\nclass BrowserHistoryActions implements HistoryActions {\n  public constructor(protected history: History, protected routeToLocation: (data: RouteData) => BrowserLocation) {}\n  public push(data: RouteData | BrowserLocation | string): void {\n    if (typeof data === 'string') {\n      this.history.push(data);\n    } else if (isLocation(data)) {\n      this.history.push(data);\n    } else {\n      const location = this.routeToLocation(data as RouteData);\n      this.history.push({...location, state: data});\n    }\n  }\n  public replace(data: RouteData | BrowserLocation | string): void {\n    if (typeof data === 'string') {\n      this.history.replace(data);\n    } else if (isLocation(data)) {\n      this.history.push(data);\n    } else {\n      const location = this.routeToLocation(data as RouteData);\n      this.history.replace({...location, state: data});\n    }\n  }\n  public go(n: number) {\n    this.history.go(n);\n  }\n  public goBack() {\n    this.history.goBack();\n  }\n  public goForward() {\n    this.history.goForward();\n  }\n}\n\nexport function createHistory(options: BrowserHistoryOptions | MemoryHistoryOptions) {\n  const history = isServer() ? createMemoryHistory(options) : createBrowserHistory(options);\n  const historyProxy: HistoryProxy<Location> = new BrowserHistoryProxy(history, options.locationToRoute);\n  const historyActions: HistoryActions = new BrowserHistoryActions(history, options.routeToLocation);\n  return {\n    history,\n    historyProxy,\n    historyActions,\n  };\n}\n"],"file":"index.js"}