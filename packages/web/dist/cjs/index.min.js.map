{"version":3,"file":"index.min.js","sources":["../../src/index.ts"],"sourcesContent":["import {HistoryProxy, RouteData} from '@medux/core';\nimport {LocationToRoute, MeduxLocation, RouteConfig, RouteToLocation, TransformRoute, assignRouteData, buildTransformRoute, deepAssign} from '@medux/route-plan-a';\n\nimport {History} from 'history';\n\nexport {createBrowserHistory, createMemoryHistory, createHashHistory} from 'history';\n\nexport interface BrowserRoutePayload<P = {}> {\n  extend?: RouteData;\n  params?: DeepPartial<P>;\n  paths?: string[];\n}\n\nexport interface HistoryActions<P = {}> {\n  push(data: BrowserRoutePayload<P> | MeduxLocation | string): void;\n  replace(data: BrowserRoutePayload<P> | MeduxLocation | string): void;\n  go(n: number): void;\n  goBack(): void;\n  goForward(): void;\n}\n\ntype DeepPartial<T> = {[P in keyof T]?: DeepPartial<T[P]>};\n\ninterface BrowserLocation {\n  pathname: string;\n  search: string;\n  hash: string;\n  state: RouteData;\n}\n\nexport function fillBrowserRouteData(routePayload: BrowserRoutePayload): RouteData {\n  const extend: RouteData = routePayload.extend || {views: {}, paths: [], stackParams: [], params: {}};\n  const stackParams = [...extend.stackParams];\n  if (routePayload.params) {\n    stackParams[0] = deepAssign({}, stackParams[0], routePayload.params);\n  }\n  return assignRouteData(routePayload.paths || extend.paths, stackParams);\n}\n\nfunction isBrowserRoutePayload(data: MeduxLocation | BrowserRoutePayload): data is BrowserRoutePayload {\n  return !data['pathname'];\n}\nclass BrowserHistoryProxy implements HistoryProxy<BrowserLocation> {\n  public initialized = true;\n  public constructor(protected history: History, protected locationToRoute: LocationToRoute) {}\n  public getLocation() {\n    return this.history.location as any;\n  }\n  public subscribe(listener: (location: BrowserLocation) => void) {\n    this.history.listen(listener as any);\n  }\n  public locationToRouteData(location: BrowserLocation) {\n    return location.state || this.locationToRoute(location);\n  }\n  public equal(a: BrowserLocation, b: BrowserLocation) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n  public patch(location: BrowserLocation, routeData: RouteData): void {\n    this.history.push({...location, state: routeData});\n  }\n}\n\nexport function createRouter(history: History, routeConfig: RouteConfig) {\n  const transformRoute: TransformRoute = buildTransformRoute(routeConfig);\n  const toBrowserUrl: ToBrowserUrl = buildToBrowserUrl(transformRoute.routeToLocation);\n  const historyProxy: HistoryProxy<BrowserLocation> = new BrowserHistoryProxy(history, transformRoute.locationToRoute);\n\n  const historyActions: HistoryActions = {\n    push(data) {\n      if (typeof data === 'string') {\n        history.push(data);\n      } else if (isBrowserRoutePayload(data)) {\n        const routeData = fillBrowserRouteData(data);\n        const location = transformRoute!.routeToLocation(routeData);\n        history.push({...location, state: routeData});\n      } else {\n        history.push({...data, state: undefined});\n      }\n    },\n    replace(data) {\n      if (typeof data === 'string') {\n        history.replace(data);\n      } else if (isBrowserRoutePayload(data)) {\n        const routeData = fillBrowserRouteData(data);\n        const location = transformRoute!.routeToLocation(routeData);\n        history.replace({...location, state: routeData});\n      } else {\n        history.replace({...data, state: undefined});\n      }\n    },\n    go(n: number) {\n      history.go(n);\n    },\n    goBack() {\n      history.goBack();\n    },\n    goForward() {\n      history.goForward();\n    },\n  };\n\n  return {\n    transformRoute,\n    historyProxy,\n    historyActions,\n    toBrowserUrl,\n  };\n}\n\nexport interface ToBrowserUrl<T = {}> {\n  (routeOptions: BrowserRoutePayload<T>): string;\n  (pathname: string, search: string, hash: string): string;\n}\nfunction buildToBrowserUrl(routeToLocation: RouteToLocation): ToBrowserUrl<any> {\n  function toUrl(routeOptions: BrowserRoutePayload<any>): string;\n  function toUrl(pathname: string, search: string, hash: string): string;\n  function toUrl(...args: any[]): string {\n    if (args.length === 1) {\n      const location = routeToLocation(fillBrowserRouteData(args[0]));\n      args = [location.pathname, location.search, location.hash];\n    }\n    const [pathname, search, hash] = args as [string, string, string];\n    let url = pathname;\n    if (search) {\n      url += search;\n    }\n    if (hash) {\n      url += hash;\n    }\n    return url;\n  }\n  return toUrl;\n}\n"],"names":["fillBrowserRouteData","routePayload","extend","views","paths","stackParams","params","deepAssign","assignRouteData","isBrowserRoutePayload","data","BrowserHistoryProxy","history","locationToRoute","getLocation","this","location","subscribe","listener","listen","locationToRouteData","state","equal","a","b","pathname","search","hash","patch","routeData","push","routeConfig","routeToLocation","transformRoute","buildTransformRoute","toBrowserUrl","args","length","url","historyProxy","historyActions","undefined","replace","go","n","goBack","goForward"],"mappings":"sOA8BO,SAASA,EAAqBC,OAC7BC,EAAoBD,EAAaC,QAAU,CAACC,MAAO,GAAIC,MAAO,GAAIC,YAAa,GAAIC,OAAQ,IAC3FD,YAAkBH,EAAOG,oBAC3BJ,EAAaK,SACfD,EAAY,GAAKE,aAAW,GAAIF,EAAY,GAAIJ,EAAaK,SAExDE,kBAAgBP,EAAaG,OAASF,EAAOE,MAAOC,GAG7D,SAASI,EAAsBC,UACrBA,EAAI,aAERC,wBAEyBC,EAA4BC,QAA5BD,QAAAA,OAA4BC,gBAAAA,wBADpC,8BAEdC,YAAP,kBACSC,KAAKH,QAAQI,YAEfC,UAAP,SAAiBC,QACVN,QAAQO,OAAOD,MAEfE,oBAAP,SAA2BJ,UAClBA,EAASK,OAASN,KAAKF,gBAAgBG,MAEzCM,MAAP,SAAaC,EAAoBC,UACxBD,EAAEE,WAAaD,EAAEC,UAAYF,EAAEG,SAAWF,EAAEE,QAAUH,EAAEI,OAASH,EAAEG,QAErEC,MAAP,SAAaZ,EAA2Ba,QACjCjB,QAAQkB,sBAASd,GAAUK,MAAOQ,oXAIpC,SAAsBjB,EAAkBmB,OAmDpBC,EAlDnBC,EAAiCC,sBAAoBH,GACrDI,GAiDmBH,EAjD4BC,EAAeD,sDAoDlDI,2BAAAA,qBACI,IAAhBA,EAAKC,OAAc,KACfrB,EAAWgB,EAAgBhC,EAAqBoC,EAAK,KAC3DA,EAAO,CAACpB,EAASS,SAAUT,EAASU,OAAQV,EAASW,YAEtBS,EAA1BX,OAAUC,OAAQC,OACrBW,EAAMb,SACNC,IACFY,GAAOZ,GAELC,IACFW,GAAOX,GAEFW,IAhEHC,EAA8C,IAAI5B,EAAoBC,EAASqB,EAAepB,iBAE9F2B,EAAiC,CACrCV,cAAKpB,MACiB,iBAATA,EACTE,EAAQkB,KAAKpB,QACR,GAAID,EAAsBC,GAAO,KAChCmB,EAAY7B,EAAqBU,GACjCM,EAAWiB,EAAgBD,gBAAgBH,GACjDjB,EAAQkB,sBAASd,GAAUK,MAAOQ,UAElCjB,EAAQkB,sBAASpB,GAAMW,WAAOoB,MAGlCC,iBAAQhC,MACc,iBAATA,EACTE,EAAQ8B,QAAQhC,QACX,GAAID,EAAsBC,GAAO,KAChCmB,EAAY7B,EAAqBU,GACjCM,EAAWiB,EAAgBD,gBAAgBH,GACjDjB,EAAQ8B,yBAAY1B,GAAUK,MAAOQ,UAErCjB,EAAQ8B,yBAAYhC,GAAMW,WAAOoB,MAGrCE,YAAGC,GACDhC,EAAQ+B,GAAGC,IAEbC,kBACEjC,EAAQiC,UAEVC,qBACElC,EAAQkC,oBAIL,CACLb,eAAAA,EACAM,aAAAA,EACAC,eAAAA,EACAL,aAAAA"}