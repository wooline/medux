"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t,e=(t=require("@babel/runtime/helpers/defineProperty"))&&"object"==typeof t&&"default"in t?t.default:t,r=require("@medux/route-plan-a"),o=require("history");function n(t){var e=t.extend||{views:{},paths:[],stackParams:[],params:{}},o=[].concat(e.stackParams);return t.params&&(o[0]=r.deepAssign({},o[0],t.params)),r.assignRouteData(t.paths||e.paths,o)}function a(t){return!t.pathname}var i=function(){function t(t,r){this.history=t,this.locationToRoute=r,e(this,"initialized",!0)}var r=t.prototype;return r.getLocation=function(){return this.history.location},r.subscribe=function(t){this.history.listen(t)},r.locationToRouteData=function(t){return t.state||this.locationToRoute(t)},r.equal=function(t,e){return t.pathname===e.pathname&&t.search===e.search&&t.hash===e.hash},r.patch=function(t,e){this.history.push(Object.assign({},t,{state:e}))},t}();Object.defineProperty(exports,"createBrowserHistory",{enumerable:!0,get:function(){return o.createBrowserHistory}}),Object.defineProperty(exports,"createHashHistory",{enumerable:!0,get:function(){return o.createHashHistory}}),Object.defineProperty(exports,"createMemoryHistory",{enumerable:!0,get:function(){return o.createMemoryHistory}}),exports.createRouter=function(t,e){var o,s=r.buildTransformRoute(e),u=(o=s.routeToLocation,function(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];if(1===e.length){var a=o(n(e[0]));e=[a.pathname,a.search,a.hash]}var i=e,s=i[0],u=i[1],c=i[2],f=s;return u&&(f+=u),c&&(f+=c),f}),c=new i(t,s.locationToRoute),f={listen:function(e){return t.listen(e)},getLocation:function(){return t.location},getRouteData:function(){return t.location.state||s.locationToRoute(t.location)},push:function(e){if("string"==typeof e)t.push(e);else if(a(e)){var r=n(e),o=s.routeToLocation(r);t.push(Object.assign({},o,{state:r}))}else t.push(Object.assign({},e,{state:void 0}))},replace:function(e){if("string"==typeof e)t.replace(e);else if(a(e)){var r=n(e),o=s.routeToLocation(r);t.replace(Object.assign({},o,{state:r}))}else t.replace(Object.assign({},e,{state:void 0}))},go:function(e){t.go(e)},goBack:function(){t.goBack()},goForward:function(){t.goForward()}};return{transformRoute:s,historyProxy:c,historyActions:f,toBrowserUrl:u}},exports.fillBrowserRouteData=n;
//# sourceMappingURL=index.min.js.map
