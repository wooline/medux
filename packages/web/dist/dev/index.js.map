{"version":3,"sources":["../../src/index.ts"],"names":["createBrowserHistory","createMemoryHistory","isServer","isLocation","data","BrowserHistoryProxy","history","locationToRoute","getLocation","location","subscribe","listener","listen","locationToRouteData","state","equal","a","b","pathname","search","hash","patch","routeData","push","BrowserHistoryActions","routeToLocation","replace","go","n","goBack","goForward","createHistory","options","historyProxy","historyActions"],"mappings":"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","sourcesContent":["import {BrowserHistoryBuildOptions, History, MemoryHistoryBuildOptions, createBrowserHistory, createMemoryHistory} from 'history';\nimport {HistoryProxy, RouteData} from '@medux/core/types/export';\n\nimport {isServer} from '@medux/core';\n\ninterface Location {\n  pathname: string;\n  search: string;\n  hash: string;\n  state: RouteData;\n}\n\nexport interface BrowserLocation {\n  pathname: string;\n  search: string;\n  hash: string;\n}\n\nexport type RoutePayload = Pick<RouteData, 'params' | 'paths'>;\nexport type RouteToLocation = (routeData: RoutePayload) => BrowserLocation;\nexport type LocationToRoute = (location: BrowserLocation) => RouteData;\n\nexport interface TransformRoute {\n  locationToRoute: LocationToRoute;\n  routeToLocation: RouteToLocation;\n}\n\nexport type BrowserHistoryOptions = BrowserHistoryBuildOptions & TransformRoute;\nexport type MemoryHistoryOptions = MemoryHistoryBuildOptions & TransformRoute;\nfunction isLocation(data: RoutePayload | BrowserLocation): data is Location {\n  return !data['params'] && !data['paths'];\n}\n\nexport interface HistoryActions {\n  push(data: RoutePayload | BrowserLocation | string): void;\n  replace(data: RoutePayload | BrowserLocation | string): void;\n  go(n: number): void;\n  goBack(): void;\n  goForward(): void;\n}\nclass BrowserHistoryProxy implements HistoryProxy<Location> {\n  public constructor(protected history: History, protected locationToRoute: LocationToRoute) {}\n  public getLocation() {\n    return this.history.location;\n  }\n  public subscribe(listener: (location: Location) => void) {\n    this.history.listen(listener);\n  }\n  public locationToRouteData(location: Location) {\n    return location.state || this.locationToRoute(location);\n  }\n  public equal(a: Location, b: Location) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n  public patch(location: Location, routeData: RouteData): void {\n    this.history.push({...location, state: routeData});\n  }\n}\n\nclass BrowserHistoryActions implements HistoryActions {\n  public constructor(protected history: History, protected routeToLocation: RouteToLocation) {}\n  public push(data: RoutePayload | BrowserLocation | string): void {\n    if (typeof data === 'string') {\n      this.history.push(data);\n    } else if (isLocation(data)) {\n      this.history.push(data);\n    } else {\n      const location = this.routeToLocation(data as RouteData);\n      this.history.push({...location, state: data});\n    }\n  }\n  public replace(data: RoutePayload | BrowserLocation | string): void {\n    if (typeof data === 'string') {\n      this.history.replace(data);\n    } else if (isLocation(data)) {\n      this.history.push(data);\n    } else {\n      const location = this.routeToLocation(data as RouteData);\n      this.history.replace({...location, state: data});\n    }\n  }\n  public go(n: number) {\n    this.history.go(n);\n  }\n  public goBack() {\n    this.history.goBack();\n  }\n  public goForward() {\n    this.history.goForward();\n  }\n}\n\nexport function createHistory(options: BrowserHistoryOptions | MemoryHistoryOptions) {\n  const history = isServer() ? createMemoryHistory(options) : createBrowserHistory(options);\n  const historyProxy: HistoryProxy<Location> = new BrowserHistoryProxy(history, options.locationToRoute);\n  const historyActions: HistoryActions = new BrowserHistoryActions(history, options.routeToLocation);\n  return {\n    history,\n    historyProxy,\n    historyActions,\n  };\n}\n"],"file":"index.js"}