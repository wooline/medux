{"version":3,"sources":["../../../src/__tests__/route.test.ts"],"names":["fillRouteData","describe","test","transformRoute","global","route","paths","location","routeToLocation","expect","toEqual","pathname","search","hash","stackParams","photos","listSearch","title","page","pageSize","itemId","comments","articleType","articleId","_listKey","locationToRoute","views","app","Main","params","_detailKey","List","Details","isNewest","DetailsList"],"mappings":"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","sourcesContent":["import {Location, TransformRoute, fillRouteData} from '../index';\ndescribe('routeToLocation：', () => {\n  test('/', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({paths: ['app.Main']});\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/',\n      search: '?',\n      hash: '#',\n    });\n  });\n  test('/?q={\"photos\":{}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({paths: ['app.Main'], stackParams: [{photos: {listSearch: {title: '', page: 1, pageSize: 10}}}]});\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/',\n      search: '?q={\"photos\":{}}',\n      hash: '#',\n    });\n  });\n  test('/?q={\"photos\":{\"listSearch\":{\"page\":2}}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({paths: ['app.Main'], stackParams: [{photos: {listSearch: {title: '', page: 2, pageSize: 10}}}]});\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/',\n      search: '?q={\"photos\":{\"listSearch\":{\"page\":2}}}',\n      hash: '#',\n    });\n  });\n  test('/photos?q={\"photos\":{\"listSearch\":{\"page\":2}}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({paths: ['app.Main', 'photos.List'], stackParams: [{photos: {listSearch: {title: '', page: 2, pageSize: 10}}}]});\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/photos',\n      search: '?q={\"photos\":{\"listSearch\":{\"page\":2}}}',\n      hash: '#',\n    });\n  });\n  test('/photos/2', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({paths: ['app.Main', 'photos.Details'], stackParams: [{photos: {itemId: '2'}}]});\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/photos/2',\n      search: '?',\n      hash: '#',\n    });\n  });\n  test('/photos/2?q={\"photos\":{\"listSearch\":{\"page\":2}}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({paths: ['app.Main', 'photos.Details'], stackParams: [{photos: {listSearch: {page: 2}, itemId: '2'}}]});\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/photos/2',\n      search: '?q={\"photos\":{\"listSearch\":{\"page\":2}}}',\n      hash: '#',\n    });\n  });\n  test('/photos/2/comments', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.List'],\n      stackParams: [{photos: {itemId: '2'}, comments: {articleType: 'photos', articleId: '2'}}],\n    });\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/photos/2/comments',\n      search: '?',\n      hash: '#',\n    });\n  });\n  test('/photos/2/comments?q={\"photos\":{\"listSearch\":{\"page\":2}},\"comments\":{\"listSearch\":{\"page\":3}}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.List'],\n      stackParams: [{photos: {itemId: '2', listSearch: {page: 2, title: ''}}, comments: {articleType: 'photos', articleId: '2', listSearch: {page: 3}}}],\n    });\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/photos/2/comments',\n      search: '?q={\"photos\":{\"listSearch\":{\"page\":2}},\"comments\":{\"listSearch\":{\"page\":3}}}',\n      hash: '#',\n    });\n  });\n  test('/photos/2/comments/8', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      stackParams: [{photos: {itemId: '2'}, comments: {articleType: 'photos', articleId: '2', itemId: '8'}}],\n    });\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/photos/2/comments/8',\n      search: '?',\n      hash: '#',\n    });\n  });\n  test('/photos/2/comments/8?q=&q={\"photos\":{\"listSearch\":{\"page\":2}}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      stackParams: [{photos: {itemId: '2'}, comments: {articleType: 'photos', articleId: '2', itemId: '8'}}, {photos: {listSearch: {page: 2}}}],\n    });\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/photos/2/comments/8',\n      search: '?q=&q={\"photos\":{\"listSearch\":{\"page\":2}}}',\n      hash: '#',\n    });\n  });\n  test('/photos/2/comments/9?q=&q={\"photos\":{\"listSearch\":{\"page\":2}},\"comments\":{\"itemId\":\"9\"}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      stackParams: [\n        {photos: {itemId: '2'}, comments: {articleType: 'photos', articleId: '2'}},\n        {photos: {listSearch: {page: 2}}, comments: {itemId: '9'}},\n      ],\n    });\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/photos/2/comments/9',\n      search: '?q=&q={\"photos\":{\"listSearch\":{\"page\":2}},\"comments\":{\"itemId\":\"9\"}}',\n      hash: '#',\n    });\n  });\n  test('/photos/2/comments/9?q={\"photos\":{\"listSearch\":{\"pageSize\":20}}}&q={\"photos\":{\"listSearch\":{\"page\":2}},\"comments\":{\"itemId\":\"9\"}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      stackParams: [\n        {photos: {itemId: '2', listSearch: {pageSize: 20}}, comments: {articleType: 'photos', articleId: '2'}},\n        {photos: {listSearch: {page: 2}}, comments: {itemId: '9'}},\n      ],\n    });\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/photos/2/comments/9',\n      search: '?q={\"photos\":{\"listSearch\":{\"pageSize\":20}}}&q={\"photos\":{\"listSearch\":{\"page\":2}},\"comments\":{\"itemId\":\"9\"}}',\n      hash: '#',\n    });\n  });\n  test('/photos/2/comments/9/99?q={\"photos\":{\"listSearch\":{\"pageSize\":20}}}&q={\"photos\":{\"listSearch\":{\"page\":2}},\"comments\":{\"itemId\":\"9\",\"listSearch\":{\"page\":99}}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.DetailsList'],\n      stackParams: [\n        {photos: {itemId: '2', listSearch: {pageSize: 20}}, comments: {articleType: 'photos', articleId: '2'}},\n        {photos: {listSearch: {page: 2}}, comments: {itemId: '9', listSearch: {page: 99}}},\n      ],\n    });\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/photos/2/comments/9/99',\n      search: '?q={\"photos\":{\"listSearch\":{\"pageSize\":20}}}&q={\"photos\":{\"listSearch\":{\"page\":2}},\"comments\":{\"itemId\":\"9\",\"listSearch\":{\"page\":99}}}',\n      hash: '#',\n    });\n  });\n\n  test('/photos/2/comments/9/99?q={\"photos\":{\"listSearch\":{\"pageSize\":20}}}&q={\"photos\":{\"listSearch\":{\"page\":2}},\"comments\":{\"itemId\":\"9\"}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.DetailsList'],\n      stackParams: [\n        {photos: {itemId: '2', listSearch: {pageSize: 20}}, comments: {articleType: 'photos', articleId: '2', listSearch: {page: 99}}},\n        {photos: {listSearch: {page: 2}}, comments: {itemId: '9'}},\n      ],\n    });\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/photos/2/comments/9/99',\n      search: '?q={\"photos\":{\"listSearch\":{\"pageSize\":20}}}&q={\"photos\":{\"listSearch\":{\"page\":2}},\"comments\":{\"itemId\":\"9\"}}',\n      hash: '#',\n    });\n  });\n\n  test('/photos/2/comments/9?q={\"photos\":{\"listSearch\":{\"pageSize\":20}}}&q={\"photos\":{\"listSearch\":{\"page\":2}},\"comments\":{\"itemId\":\"9\"}}#q={\"photos\":{\"_listKey\":\"sdk\"}}&q={\"comments\":{\"_listKey\":\"dba\"}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const route = fillRouteData<{}>({\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      stackParams: [\n        {photos: {_listKey: 'sdk', itemId: '2', listSearch: {pageSize: 20}}, comments: {articleType: 'photos', articleId: '2'}},\n        {photos: {listSearch: {page: 2}}, comments: {_listKey: 'dba', itemId: '9'}},\n      ],\n    });\n    const location = transformRoute.routeToLocation(route);\n    expect(location).toEqual({\n      pathname: '/photos/2/comments/9',\n      search: '?q={\"photos\":{\"listSearch\":{\"pageSize\":20}}}&q={\"photos\":{\"listSearch\":{\"page\":2}},\"comments\":{\"itemId\":\"9\"}}',\n      hash: '#q={\"photos\":{\"_listKey\":\"sdk\"}}&q={\"comments\":{\"_listKey\":\"dba\"}}',\n    });\n  });\n});\n\ndescribe('locationToRoute：', () => {\n  test('/', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {pathname: '/', search: '', hash: ''};\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}},\n      paths: ['app.Main'],\n      params: {app: {}},\n      stackParams: [{app: {}}],\n    });\n  });\n  test('/?q={\"photos\":{\"listSearch\":{\"page\":2}}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {pathname: '/', search: '?q={\"photos\":{\"listSearch\":{\"page\":2}}}', hash: ''};\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}},\n      paths: ['app.Main'],\n      params: {app: {}, photos: {_detailKey: '', _listKey: '', itemId: '', listSearch: {title: '', page: 2, pageSize: 10}}},\n      stackParams: [{app: {}, photos: {_detailKey: '', _listKey: '', itemId: '', listSearch: {title: '', page: 2, pageSize: 10}}}],\n    });\n  });\n  test('/photos', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {pathname: '/photos', search: '', hash: ''};\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {List: true}},\n      paths: ['app.Main', 'photos.List'],\n      params: {app: {}, photos: {_detailKey: '', _listKey: '', itemId: '', listSearch: {title: '', page: 1, pageSize: 10}}},\n      stackParams: [{app: {}, photos: {_detailKey: '', _listKey: '', itemId: '', listSearch: {title: '', page: 1, pageSize: 10}}}],\n    });\n  });\n\n  test('/photos/', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {pathname: '/photos/', search: '', hash: ''};\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {List: true}},\n      paths: ['app.Main', 'photos.List'],\n      params: {app: {}, photos: {_detailKey: '', _listKey: '', itemId: '', listSearch: {title: '', page: 1, pageSize: 10}}},\n      stackParams: [{app: {}, photos: {_detailKey: '', _listKey: '', itemId: '', listSearch: {title: '', page: 1, pageSize: 10}}}],\n    });\n  });\n\n  test('/photos/2', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {pathname: '/photos/2', search: '', hash: ''};\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}},\n      paths: ['app.Main', 'photos.Details'],\n      params: {app: {}, photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}}},\n      stackParams: [{app: {}, photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}}}],\n    });\n  });\n\n  test('/photos/2/comments', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {pathname: '/photos/2/comments', search: '', hash: ''};\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}, comments: {Main: true, List: true}},\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.List'],\n      params: {\n        photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}},\n        comments: {_detailKey: '', _listKey: '', itemId: '', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 1, pageSize: 10}},\n        app: {},\n      },\n      stackParams: [\n        {\n          photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}},\n          comments: {_detailKey: '', _listKey: '', itemId: '', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 1, pageSize: 10}},\n          app: {},\n        },\n      ],\n    });\n  });\n\n  test('/photos/2/comments#q={\"photos\":{\"_listKey\":\"sdk\"},\"comments\":{\"_listKey\":\"bde\"}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {pathname: '/photos/2/comments', search: '', hash: '#q={\"photos\":{\"_listKey\":\"sdk\"},\"comments\":{\"_listKey\":\"bde\"}}'};\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}, comments: {Main: true, List: true}},\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.List'],\n      params: {\n        photos: {_detailKey: '', _listKey: 'sdk', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}},\n        comments: {_detailKey: '', _listKey: 'bde', itemId: '', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 1, pageSize: 10}},\n        app: {},\n      },\n      stackParams: [\n        {\n          photos: {_detailKey: '', _listKey: 'sdk', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}},\n          comments: {_detailKey: '', _listKey: 'bde', itemId: '', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 1, pageSize: 10}},\n          app: {},\n        },\n      ],\n    });\n  });\n\n  test('/photos/2/comments/8', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {pathname: '/photos/2/comments/8', search: '', hash: ''};\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}, comments: {Main: true, Details: true}},\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      params: {\n        photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}},\n        comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 1, pageSize: 10}},\n        app: {},\n      },\n      stackParams: [\n        {\n          photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}},\n          comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 1, pageSize: 10}},\n          app: {},\n        },\n      ],\n    });\n  });\n  test('/photos/2/comments/8/', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {pathname: '/photos/2/comments/8/', search: '', hash: ''};\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}, comments: {Main: true, Details: true}},\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      params: {\n        photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}},\n        comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 1, pageSize: 10}},\n        app: {},\n      },\n      stackParams: [\n        {\n          photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}},\n          comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 1, pageSize: 10}},\n          app: {},\n        },\n      ],\n    });\n  });\n  test('/photos/2/comments/8/99', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {pathname: '/photos/2/comments/8/99', search: '', hash: ''};\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}, comments: {Main: true, DetailsList: true}},\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.DetailsList'],\n      params: {\n        photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}},\n        comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: '99', pageSize: 10}},\n        app: {},\n      },\n      stackParams: [\n        {\n          photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}},\n          comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: '99', pageSize: 10}},\n          app: {},\n        },\n      ],\n    });\n  });\n  test('/photos/2/comments/8/?q={\"photos\":{\"listSearch\":{\"page\":3}}}&b=swf', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {pathname: '/photos/2/comments/8/', search: '?q={\"photos\":{\"listSearch\":{\"page\":3}}}&b=swf', hash: ''};\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}, comments: {Main: true, Details: true}},\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      params: {\n        photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 3, pageSize: 10}},\n        comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 1, pageSize: 10}},\n        app: {},\n      },\n      stackParams: [\n        {\n          photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 3, pageSize: 10}},\n          comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 1, pageSize: 10}},\n          app: {},\n        },\n      ],\n    });\n  });\n\n  test('/photos/2/comments/8/?q={\"photos\":{\"listSearch\":{\"page\":3}},\"comments\":{\"listSearch\":{\"isNewest\":true}}}&b=swf', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {pathname: '/photos/2/comments/8/', search: '?q={\"photos\":{\"listSearch\":{\"page\":3}},\"comments\":{\"listSearch\":{\"isNewest\":true}}}&b=swf', hash: ''};\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}, comments: {Main: true, Details: true}},\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      params: {\n        photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 3, pageSize: 10}},\n        comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: true, page: 1, pageSize: 10}},\n        app: {},\n      },\n      stackParams: [\n        {\n          photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 3, pageSize: 10}},\n          comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: true, page: 1, pageSize: 10}},\n          app: {},\n        },\n      ],\n    });\n  });\n\n  test('/photos/2/comments/8/?q={\"photos\":{\"listSearch\":{\"page\":3}},\"comments\":{\"listSearch\":{\"isNewest\":true}}}&b=swf#q={\"photos\":{\"_listKey\":\"sdk\"},\"comments\":{\"_listKey\":\"bde\"}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {\n      pathname: '/photos/2/comments/8/',\n      search: '?q={\"photos\":{\"listSearch\":{\"page\":3}},\"comments\":{\"listSearch\":{\"isNewest\":true}}}&b=swf',\n      hash: '#q={\"photos\":{\"_listKey\":\"sdk\"},\"comments\":{\"_listKey\":\"bde\"}}&b=swf',\n    };\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}, comments: {Main: true, Details: true}},\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      params: {\n        photos: {_detailKey: '', _listKey: 'sdk', itemId: '2', listSearch: {title: '', page: 3, pageSize: 10}},\n        comments: {_detailKey: '', _listKey: 'bde', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: true, page: 1, pageSize: 10}},\n        app: {},\n      },\n      stackParams: [\n        {\n          photos: {_detailKey: '', _listKey: 'sdk', itemId: '2', listSearch: {title: '', page: 3, pageSize: 10}},\n          comments: {_detailKey: '', _listKey: 'bde', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: true, page: 1, pageSize: 10}},\n          app: {},\n        },\n      ],\n    });\n  });\n\n  test('/photos/2/comments/8/?q={\"photos\":{\"listSearch\":{\"page\":3}},\"comments\":{\"listSearch\":{\"isNewest\":true}}}&b=swf&q={\"photos\":{\"listSearch\":{\"page\":4}},\"comments\":{\"listSearch\":{\"page\":5}}}', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {\n      pathname: '/photos/2/comments/8/',\n      search: '?q={\"photos\":{\"listSearch\":{\"page\":3}},\"comments\":{\"listSearch\":{\"isNewest\":true}}}&b=swf&q={\"photos\":{\"listSearch\":{\"page\":4}},\"comments\":{\"listSearch\":{\"page\":5}}}',\n      hash: '',\n    };\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}, comments: {Main: true, Details: true}},\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      params: {\n        photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 4, pageSize: 10}},\n        comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: true, page: 5, pageSize: 10}},\n        app: {},\n      },\n      stackParams: [\n        {\n          photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 3, pageSize: 10}},\n          comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: true, page: 1, pageSize: 10}},\n          app: {},\n        },\n        {photos: {listSearch: {page: 4}}, comments: {listSearch: {page: 5}}},\n      ],\n    });\n  });\n\n  test('/photos/2/comments/8/?q={\"photos\":{\"listSearch\":{\"page\":3}},\"comments\":{\"listSearch\":{\"isNewest\":true}}}&b=swf&q={\"photos\":{\"listSearch\":{\"page\":4}},\"comments\":{\"listSearch\":{\"page\":5}}}#q=&q={\"photos\":{\"_listKey\":\"sdk\"},\"comments\":{\"_listKey\":\"bde\"}}&b=swf', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {\n      pathname: '/photos/2/comments/8/',\n      search: '?q={\"photos\":{\"listSearch\":{\"page\":3}},\"comments\":{\"listSearch\":{\"isNewest\":true}}}&b=swf&q={\"photos\":{\"listSearch\":{\"page\":4}},\"comments\":{\"listSearch\":{\"page\":5}}}',\n      hash: '#q=&q={\"photos\":{\"_listKey\":\"sdk\"},\"comments\":{\"_listKey\":\"bde\"}}&b=swf',\n    };\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}, comments: {Main: true, Details: true}},\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      params: {\n        photos: {_detailKey: '', _listKey: 'sdk', itemId: '2', listSearch: {title: '', page: 4, pageSize: 10}},\n        comments: {_detailKey: '', _listKey: 'bde', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: true, page: 5, pageSize: 10}},\n        app: {},\n      },\n      stackParams: [\n        {\n          photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 3, pageSize: 10}},\n          comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: true, page: 1, pageSize: 10}},\n          app: {},\n        },\n        {photos: {_listKey: 'sdk', listSearch: {page: 4}}, comments: {_listKey: 'bde', listSearch: {page: 5}}},\n      ],\n    });\n  });\n\n  test('/photos/2/comments/8/?q=&b=swf&q={\"photos\":{\"listSearch\":{\"page\":4}},\"comments\":{\"listSearch\":{\"page\":5}}}#q=&q={\"photos\":{\"_listKey\":\"sdk\"},\"comments\":{\"_listKey\":\"bde\"}}&b=swf', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {\n      pathname: '/photos/2/comments/8/',\n      search: '?q=&b=swf&q={\"photos\":{\"listSearch\":{\"page\":4}},\"comments\":{\"listSearch\":{\"page\":5}}}',\n      hash: '#q=&q={\"photos\":{\"_listKey\":\"sdk\"},\"comments\":{\"_listKey\":\"bde\"}}&b=swf',\n    };\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}, comments: {Main: true, Details: true}},\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.Details'],\n      params: {\n        photos: {_detailKey: '', _listKey: 'sdk', itemId: '2', listSearch: {title: '', page: 4, pageSize: 10}},\n        comments: {_detailKey: '', _listKey: 'bde', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 5, pageSize: 10}},\n        app: {},\n      },\n      stackParams: [\n        {\n          photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}},\n          comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 1, pageSize: 10}},\n          app: {},\n        },\n        {photos: {_listKey: 'sdk', listSearch: {page: 4}}, comments: {_listKey: 'bde', listSearch: {page: 5}}},\n      ],\n    });\n  });\n\n  test('/photos/2/comments/8/99?q=&b=swf&q={\"photos\":{\"listSearch\":{\"page\":4}},\"comments\":{\"listSearch\":{\"page\":5}}}#q=&q={\"photos\":{\"_listKey\":\"sdk\"},\"comments\":{\"_listKey\":\"bde\"}}&b=swf', () => {\n    const transformRoute: TransformRoute = global['transformRoute'];\n    const location: Location = {\n      pathname: '/photos/2/comments/8/99',\n      search: '?q=&b=swf&q={\"photos\":{\"listSearch\":{\"page\":4}},\"comments\":{\"listSearch\":{\"page\":5}}}',\n      hash: '#q=&q={\"photos\":{\"_listKey\":\"sdk\"},\"comments\":{\"_listKey\":\"bde\"}}&b=swf',\n    };\n    const route = transformRoute.locationToRoute(location);\n    expect(route).toEqual({\n      views: {app: {Main: true}, photos: {Details: true}, comments: {Main: true, DetailsList: true}},\n      paths: ['app.Main', 'photos.Details', 'comments.Main', 'comments.DetailsList'],\n      params: {\n        photos: {_detailKey: '', _listKey: 'sdk', itemId: '2', listSearch: {title: '', page: 4, pageSize: 10}},\n        comments: {_detailKey: '', _listKey: 'bde', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: 5, pageSize: 10}},\n        app: {},\n      },\n      stackParams: [\n        {\n          photos: {_detailKey: '', _listKey: '', itemId: '2', listSearch: {title: '', page: 1, pageSize: 10}},\n          comments: {_detailKey: '', _listKey: '', itemId: '8', articleType: 'photos', articleId: '2', listSearch: {isNewest: false, page: '99', pageSize: 10}},\n          app: {},\n        },\n        {photos: {_listKey: 'sdk', listSearch: {page: 4}}, comments: {_listKey: 'bde', listSearch: {page: 5}}},\n      ],\n    });\n  });\n});\n"],"file":"route.test.js"}