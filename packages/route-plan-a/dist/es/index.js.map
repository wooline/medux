{"version":3,"sources":["../../src/index.ts"],"names":["compilePath","compileToPath","matchPath","assignDeep","config","coreConfig","escape","dateParse","splitKey","defaultRouteParams","setRouteConfig","conf","undefined","excludeDefaultData","data","def","holde","views","result","Object","keys","forEach","moduleName","value","defaultValue","Array","isArray","length","ISO_DATE_FORMAT","prop","test","Date","searchParse","search","unescape","JSON","parse","error","joinSearchString","arr","strs","i","k","push","join","searchStringify","searchData","str","stringify","splitSearch","reg","RegExp","match","stackParams","map","split","pathnameParse","pathname","routeConfig","paths","args","rule","hasOwnProperty","item","viewName","pathConfig","path","exact","VSP","params","compileConfig","parentAbsoluteViewName","viewToRule","ruleToKeys","end","strict","sensitive","reduce","prev","cur","name","absoluteViewName","assignRouteData","firstStackParams","fillRouteData","routePayload","extend","index","extractHashData","searchParams","hashParams","key","startsWith","hash","buildTransformRoute","locationToRoute","location","pathsArgs","hashStackParams","routeToLocation","routeData","firstStackParamsFilter","toPath","searchStrings","hashStrings","substr","fillBrowserRouteData","isBrowserRoutePayload","getBrowserRouteActions","getBrowserHistoryActions","replace","go","n","goBack","goForward"],"mappings":"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CAAChG,IAAD,EAAO;AACZ,UAAI8C,IAAI,GAAG9C,IAAX;;AACA,UAAI6F,qBAAqB,CAAC7F,IAAD,CAAzB,EAAiC;AAC/B8C,QAAAA,IAAI,GAAG8C,oBAAoB,CAAC5F,IAAD,CAA3B;AACD;;AACD+F,MAAAA,wBAAwB,GAAGC,OAA3B,CAAmClD,IAAnC;AACD,KAdI;;AAeLmD,IAAAA,EAAE,CAACC,CAAD,EAAI;AACJH,MAAAA,wBAAwB,GAAGE,EAA3B,CAA8BC,CAA9B;AACD,KAjBI;;AAkBLC,IAAAA,MAAM,GAAG;AACPJ,MAAAA,wBAAwB,GAAGI,MAA3B;AACD,KApBI;;AAqBLC,IAAAA,SAAS,GAAG;AACVL,MAAAA,wBAAwB,GAAGK,SAA3B;AACD;;AAvBI,GAAP;AAyBD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","sourcesContent":["import {DisplayViews, RouteData} from '@medux/core/types/export';\nimport {compilePath, compileToPath, matchPath} from './matchPath';\n\nimport assignDeep from 'deep-extend';\nimport {config as coreConfig} from '@medux/core';\n\nconst config = {\n  escape: true,\n  dateParse: true,\n  splitKey: 'q',\n  defaultRouteParams: {},\n};\nexport function setRouteConfig(conf: {escape?: boolean; dateParse?: boolean; splitKey?: string; defaultRouteParams?: {[moduleName: string]: any}}) {\n  conf.escape !== undefined && (config.escape = conf.escape);\n  conf.dateParse !== undefined && (config.dateParse = conf.dateParse);\n  conf.splitKey && (config.splitKey = conf.splitKey);\n  conf.defaultRouteParams && (config.defaultRouteParams = conf.defaultRouteParams);\n}\n\nexport interface Location {\n  pathname: string;\n  search: string;\n  hash: string;\n}\n\nexport type RouteToLocation = (routeData: RouteData) => Location;\nexport type LocationToRoute = (location: Location) => RouteData;\n\nexport interface TransformRoute {\n  locationToRoute: LocationToRoute;\n  routeToLocation: RouteToLocation;\n}\n\n// 排除默认路由参数，路由中如果参数值与默认参数相同可省去\nfunction excludeDefaultData(data: {[moduleName: string]: any}, def: {[moduleName: string]: any}, holde: boolean, views?: {[moduleName: string]: any}) {\n  const result: any = {};\n  Object.keys(data).forEach(moduleName => {\n    let value = data[moduleName];\n    const defaultValue = def[moduleName];\n    if (value !== defaultValue) {\n      if (typeof value === typeof defaultValue && typeof value === 'object' && !Array.isArray(value)) {\n        value = excludeDefaultData(value, defaultValue, !!views && !views[moduleName]);\n      }\n      if (value !== undefined) {\n        result[moduleName] = value;\n      }\n    }\n  });\n\n  if (Object.keys(result).length === 0 && !holde) {\n    return undefined;\n  }\n  return result;\n}\n\n// 合并默认路由参数，如果路由中某参数没传，将用默认值替代，与上面方法互逆\n// function mergeDefaultData(data: {[moduleName: string]: any}, views: {[moduleName: string]: any}) {\n//   Object.keys(views).forEach(moduleName => {\n//     if (!data[moduleName]) {\n//       data[moduleName] = {};\n//     }\n//   });\n//   Object.keys(data).forEach(moduleName => {\n//     data[moduleName] = assignDeep({}, defaultRouteParams[moduleName], data[moduleName]);\n//   });\n// }\n\n// export const mergeDefaultParamsMiddleware: Middleware = () => (next: Function) => (action: any) => {\n//   if (action.type === ActionTypes.F_ROUTE_CHANGE) {\n//     const payload = getActionData<RouteState>(action);\n//     const params = mergeDefaultData(payload.data.views, payload.data.params, defaultRouteParams);\n//     action = {...action, payload: {...payload, data: {...payload.data, params}}};\n//   }\n//   return next(action);\n// };\n\nexport interface RouteConfig {\n  [path: string]: string | [string, RouteConfig];\n}\n\nconst ISO_DATE_FORMAT = /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(\\.\\d+)?(Z|[+-][01]\\d:[0-5]\\d)$/;\n\nfunction dateParse(prop: any, value: any) {\n  if (typeof value === 'string' && ISO_DATE_FORMAT.test(value)) {\n    return new Date(value);\n  }\n  return value;\n}\n// function getSearch(searchOrHash: string, key: string): string {\n//   if (searchOrHash.length < 4) {\n//     return '';\n//   }\n//   const reg = new RegExp(`[&?#]${key}=`);\n//   const str = searchOrHash.split(reg)[1];\n//   if (!str) {\n//     return '';\n//   }\n//   return str.split('&')[0];\n// }\n\n/*\n  将字符串变成 Data，因为 JSON 中没有 Date 类型，所以用正则表达式匹配自动转换\n*/\nfunction searchParse(search: string): {[moduleName: string]: {[key: string]: any} | undefined} {\n  if (!search) {\n    return {};\n  }\n  if (config.escape) {\n    search = unescape(search);\n  }\n  try {\n    return JSON.parse(search, config.dateParse ? dateParse : undefined);\n  } catch (error) {\n    return {};\n  }\n}\nfunction joinSearchString(arr: string[]): string {\n  const strs = [''];\n  for (let i = 0, k = arr.length; i < k; i++) {\n    strs.push(arr[i] || '');\n  }\n  return strs.join(`&${config.splitKey}=`);\n}\nfunction searchStringify(searchData: any): string {\n  if (typeof searchData !== 'object') {\n    return '';\n  }\n  const str = JSON.stringify(searchData);\n  if (str === '{}') {\n    return '';\n  }\n  if (config.escape) {\n    return escape(str);\n  } else {\n    return str;\n  }\n}\n\nfunction splitSearch(search: string) {\n  const reg = new RegExp(`[&?#]${config.splitKey}=[^&]*`, 'g');\n  const arr = search.match(reg);\n  let stackParams: {[moduleName: string]: {[key: string]: any} | undefined}[] = [];\n  if (arr) {\n    stackParams = arr.map(str => {\n      return searchParse(str.split('=')[1]);\n    });\n  }\n  return stackParams;\n}\n\nfunction pathnameParse(pathname: string, routeConfig: RouteConfig, paths: string[], args: {[moduleName: string]: {[key: string]: any} | undefined}) {\n  for (const rule in routeConfig) {\n    if (routeConfig.hasOwnProperty(rule)) {\n      const item = routeConfig[rule];\n      const [viewName, pathConfig] = typeof item === 'string' ? [item, null] : item;\n      const match = matchPath(pathname, {path: rule, exact: !pathConfig});\n      // const match = matchPath(pathname, {path: rule.replace(/\\$$/, ''), exact: rule.endsWith('$')});\n      if (match) {\n        paths.push(viewName);\n        const moduleName = viewName.split(coreConfig.VSP)[0];\n        const {params} = match;\n        if (params && Object.keys(params).length > 0) {\n          args[moduleName] = {...args[moduleName], ...params};\n        }\n        if (pathConfig) {\n          pathnameParse(pathname, pathConfig, paths, args);\n        }\n        return;\n      }\n    }\n  }\n}\n\nfunction compileConfig(routeConfig: RouteConfig, parentAbsoluteViewName: string = '', viewToRule: {[viewName: string]: string} = {}, ruleToKeys: {[rule: string]: (string | number)[]} = {}) {\n  // ruleToKeys将每条rule中的params key解析出来\n  for (const rule in routeConfig) {\n    if (routeConfig.hasOwnProperty(rule)) {\n      if (!ruleToKeys[rule]) {\n        const {keys} = compilePath(rule, {end: true, strict: false, sensitive: false});\n        ruleToKeys[rule] = keys.reduce((prev: (string | number)[], cur) => {\n          prev.push(cur.name);\n          return prev;\n        }, []);\n      }\n      const item = routeConfig[rule];\n      const [viewName, pathConfig] = typeof item === 'string' ? [item, null] : item;\n      const absoluteViewName = parentAbsoluteViewName + '/' + viewName;\n      viewToRule[absoluteViewName] = rule;\n      if (pathConfig) {\n        compileConfig(pathConfig, absoluteViewName, viewToRule, ruleToKeys);\n      }\n    }\n  }\n  return {viewToRule, ruleToKeys};\n}\ntype DeepPartial<T> = {[P in keyof T]?: DeepPartial<T[P]>};\n\n// type Params = RouteData['params'];\n\nexport interface RoutePayload<P> {\n  extend?: RouteData;\n  stackParams?: DeepPartial<P>[];\n  paths?: string[];\n}\n\nfunction assignRouteData(paths: string[], stackParams: {[moduleName: string]: any}[], args?: {[moduleName: string]: any}): RouteData {\n  if (!stackParams[0]) {\n    stackParams[0] = {};\n  }\n  const firstStackParams = stackParams[0];\n  args && assignDeep(firstStackParams, args);\n  const views: DisplayViews = paths.reduce((prev: DisplayViews, cur) => {\n    const [moduleName, viewName] = cur.split(coreConfig.VSP);\n    if (viewName) {\n      if (!prev[moduleName]) {\n        prev[moduleName] = {};\n      }\n      prev[moduleName]![viewName] = true;\n      if (!firstStackParams[moduleName]) {\n        firstStackParams[moduleName] = {};\n      }\n    }\n    return prev;\n  }, {});\n  Object.keys(firstStackParams).forEach(moduleName => {\n    firstStackParams[moduleName] = assignDeep({}, config.defaultRouteParams[moduleName], firstStackParams[moduleName]);\n  });\n  const params = assignDeep({}, ...stackParams);\n  Object.keys(params).forEach(moduleName => {\n    if (!firstStackParams[moduleName]) {\n      params[moduleName] = assignDeep({}, config.defaultRouteParams[moduleName], params[moduleName]);\n    }\n  });\n  return {views, paths, params, stackParams};\n}\n\nexport function fillRouteData<R>(routePayload: RoutePayload<R>): RouteData {\n  const extend: RouteData = routePayload.extend || {views: {}, paths: [], stackParams: [], params: {}};\n  const stackParams = [...extend.stackParams];\n  if (routePayload.stackParams) {\n    routePayload.stackParams.forEach((item, index) => {\n      if (item) {\n        stackParams[index] = assignDeep({}, stackParams[index], item);\n      }\n    });\n  }\n  return assignRouteData(routePayload.paths || extend.paths, stackParams);\n}\nfunction extractHashData(params: {[moduleName: string]: any}) {\n  const searchParams: {[moduleName: string]: any} = {};\n  const hashParams: {[moduleName: string]: any} = {};\n  for (const moduleName in params) {\n    if (params[moduleName] && params.hasOwnProperty(moduleName)) {\n      const data = params[moduleName]!;\n      const keys = Object.keys(data);\n      if (keys.length > 0) {\n        keys.forEach(key => {\n          if (key.startsWith('_')) {\n            if (!hashParams[moduleName]) {\n              hashParams[moduleName] = {};\n            }\n            hashParams[moduleName][key] = data[key];\n          } else {\n            if (!searchParams[moduleName]) {\n              searchParams[moduleName] = {};\n            }\n            searchParams[moduleName][key] = data[key];\n          }\n        });\n      } else {\n        searchParams[moduleName] = {};\n      }\n    }\n  }\n  return {\n    search: searchStringify(searchParams),\n    hash: searchStringify(hashParams),\n  };\n}\nexport function buildTransformRoute(routeConfig: RouteConfig): TransformRoute {\n  const {viewToRule, ruleToKeys} = compileConfig(routeConfig);\n\n  const locationToRoute: LocationToRoute = location => {\n    const paths: string[] = [];\n    const pathsArgs: {[moduleName: string]: {[key: string]: any}} = {};\n    pathnameParse(location.pathname, routeConfig, paths, pathsArgs);\n    const stackParams = splitSearch(location.search);\n    const hashStackParams = splitSearch(location.hash);\n    hashStackParams.forEach((item, index) => {\n      item && assignDeep(stackParams[index], item);\n    });\n    return assignRouteData(paths, stackParams, pathsArgs);\n  };\n  const routeToLocation: RouteToLocation = routeData => {\n    const {views, paths, params, stackParams} = routeData;\n    const firstStackParams = stackParams[0];\n    let pathname = '';\n    let firstStackParamsFilter: {[moduleName: string]: {[key: string]: any} | undefined};\n    if (paths.length > 0) {\n      firstStackParamsFilter = {};\n      // 将args二层克隆params，因为后面可能会删除path中使用到的变量\n      for (const moduleName in firstStackParams) {\n        if (firstStackParams[moduleName] && firstStackParams.hasOwnProperty(moduleName)) {\n          firstStackParamsFilter[moduleName] = {...firstStackParams[moduleName]};\n        }\n      }\n      paths.reduce((parentAbsoluteViewName, viewName, index) => {\n        const absoluteViewName = parentAbsoluteViewName + '/' + viewName;\n        const rule = viewToRule[absoluteViewName];\n        const moduleName = viewName.split(coreConfig.VSP)[0];\n        //最深的一个view可以决定pathname\n        if (index === paths.length - 1) {\n          // const toPath = compileToPath(rule.replace(/\\$$/, ''));\n          const toPath = compileToPath(rule);\n          pathname = toPath(params[moduleName]);\n        }\n        //pathname中传递的值可以不在params中重复传递\n        const keys = ruleToKeys[rule] || [];\n        keys.forEach(key => {\n          if (firstStackParamsFilter[moduleName]) {\n            delete firstStackParamsFilter[moduleName]![key];\n          }\n        });\n        return absoluteViewName;\n      }, '');\n    } else {\n      firstStackParamsFilter = firstStackParams;\n    }\n    //将带_前缀的变量放到hashData中\n    const arr = [...stackParams];\n    arr[0] = excludeDefaultData(firstStackParamsFilter, config.defaultRouteParams, false, views);\n    const searchStrings: string[] = [];\n    const hashStrings: string[] = [];\n    arr.forEach((params, index) => {\n      const {search, hash} = extractHashData(params);\n      search && (searchStrings[index] = search);\n      hash && (hashStrings[index] = hash);\n    });\n\n    return {\n      pathname,\n      search: '?' + joinSearchString(searchStrings).substr(1),\n      hash: '#' + joinSearchString(hashStrings).substr(1),\n    };\n  };\n  return {\n    locationToRoute,\n    routeToLocation,\n  };\n}\n\nexport interface BrowserRoutePayload<P> {\n  extend?: RouteData;\n  params?: DeepPartial<P>;\n  paths?: string[];\n}\nexport function fillBrowserRouteData<R>(routePayload: BrowserRoutePayload<R>): RouteData {\n  const extend: RouteData = routePayload.extend || {views: {}, paths: [], stackParams: [], params: {}};\n  const stackParams = [...extend.stackParams];\n  if (routePayload.params) {\n    stackParams[0] = assignDeep({}, stackParams[0], routePayload.params);\n  }\n  return assignRouteData(routePayload.paths || extend.paths, stackParams);\n}\n\nexport interface BrowserHistoryActions<P = RouteData> {\n  push(data: P | Location | string): void;\n  replace(data: P | Location | string): void;\n  go(n: number): void;\n  goBack(): void;\n  goForward(): void;\n}\nfunction isBrowserRoutePayload(data: string | Location | BrowserRoutePayload<any>): data is BrowserRoutePayload<any> {\n  return typeof data !== 'string' && !data['pathname'];\n}\nexport function getBrowserRouteActions<T>(getBrowserHistoryActions: () => BrowserHistoryActions<RouteData>): BrowserHistoryActions<BrowserRoutePayload<T>> {\n  return {\n    push(data) {\n      let args = data as any;\n      if (isBrowserRoutePayload(data)) {\n        args = fillBrowserRouteData(data);\n      }\n      getBrowserHistoryActions().push(args);\n    },\n    replace(data) {\n      let args = data as any;\n      if (isBrowserRoutePayload(data)) {\n        args = fillBrowserRouteData(data);\n      }\n      getBrowserHistoryActions().replace(args);\n    },\n    go(n) {\n      getBrowserHistoryActions().go(n);\n    },\n    goBack() {\n      getBrowserHistoryActions().goBack();\n    },\n    goForward() {\n      getBrowserHistoryActions().goForward();\n    },\n  };\n}\n// export function buildTransformRoute(routeConfig: RouteConfig): TransformRoute {\n//   const {viewToRule, ruleToKeys} = compileConfig(routeConfig);\n//   const locationToRoute: LocationToRoute = location => {\n//     const paths: string[] = [];\n//     const {stackParams, params} = splitSearch(location.search);\n//     //算出paths，并将path参数提取出来并入searchParams中\n//     pathnameParse(location.pathname, routeConfig, paths, params);\n//     const views: DisplayViews = paths.reduce((prev: DisplayViews, cur) => {\n//       const [moduleName, viewName] = cur.split(coreConfig.VSP);\n//       if (viewName) {\n//         if (!prev[moduleName]) {\n//           prev[moduleName] = {};\n//         }\n//         prev[moduleName]![viewName] = true;\n//       }\n//       return prev;\n//     }, {});\n//     const {stackParams: hashStackParams, params: hashParams} = splitSearch(location.hash);\n//     //将hash参数并入params中\n//     assignDeep(params, hashParams);\n//     hashStackParams.forEach((item, index) => {\n//       item && assignDeep(stackParams[index], item);\n//     });\n//     mergeDefaultData(params, views);\n//     return {paths, params, views, stackParams};\n//   };\n//   const routeToLocation: RouteToLocation = routeData => {\n//     const {paths, params, stackParams} = routeData;\n//     const mainStackParams = stackParams[0] || {};\n//     let pathname = '';\n//     let args: {[moduleName: string]: {[key: string]: any} | undefined};\n//     if (paths.length > 0) {\n//       args = {};\n//       // 将args二层克隆params，因为后面可能会删除path中使用到的变量\n//       for (const moduleName in mainStackParams) {\n//         if (mainStackParams[moduleName] && mainStackParams.hasOwnProperty(moduleName)) {\n//           args[moduleName] = {...mainStackParams[moduleName]};\n//         }\n//       }\n//       paths.reduce((parentAbsoluteViewName, viewName, index) => {\n//         const absoluteViewName = parentAbsoluteViewName + '/' + viewName;\n//         const rule = viewToRule[absoluteViewName];\n//         const moduleName = viewName.split(coreConfig.VSP)[0];\n//         //最深的一个view可以决定pathname\n//         if (index === paths.length - 1) {\n//           // const toPath = compileToPath(rule.replace(/\\$$/, ''));\n//           const toPath = compileToPath(rule);\n//           pathname = toPath(params[moduleName]);\n//         }\n//         //pathname中传递的值可以不在params中重复传递\n//         const keys = ruleToKeys[rule] || [];\n//         keys.forEach(key => {\n//           if (args[moduleName]) {\n//             delete args[moduleName]![key];\n//           }\n//         });\n//         return absoluteViewName;\n//       }, '');\n//     } else {\n//       args = mainStackParams;\n//     }\n//     //将带_前缀的变量放到hashData中\n//     const searchData = {};\n//     const hashData = {};\n//     for (const moduleName in args) {\n//       if (args[moduleName] && args.hasOwnProperty(moduleName)) {\n//         const data = args[moduleName]!;\n//         const keys = Object.keys(data);\n//         if (keys.length > 0) {\n//           keys.forEach(key => {\n//             if (key.startsWith('_')) {\n//               if (!hashData[moduleName]) {\n//                 hashData[moduleName] = {};\n//               }\n//               hashData[moduleName][key] = data[key];\n//             } else {\n//               if (!searchData[moduleName]) {\n//                 searchData[moduleName] = {};\n//               }\n//               searchData[moduleName][key] = data[key];\n//             }\n//           });\n//         }\n//       }\n//     }\n//     return {\n//       pathname,\n//       search: searchStringify(excludeDefaultData(searchData, defaultRouteParams)),\n//       hash: searchStringify(excludeDefaultData(hashData, defaultRouteParams)),\n//     };\n//   };\n//   return {\n//     locationToRoute,\n//     routeToLocation,\n//   };\n// }\n\n/**\n '/:articleType/:articleId/comments/:itemId'\n www.aa.com/photos/1/comments/23?p={}&p=\n\n paths:[\"app.Main\", \"photos.detail\", \"comments.detail\"]\n params:{app:{},photos:{itemid:1,searchList:{page:1,pageSize:10},_listkey:222222},comments:{articleType:photos,articleId:1,itemid:23,searchList:{page:2,pageSize:10},_listkey:222222}}\n stackParams:[{app:{}}, {photos:{itemid:1,searchList:{page:1,pageSize:10},_listkey:222222}}, {comments:{articleType:photos,articleId:1,itemid:23,searchList:{page:2,pageSize:10},_listkey:222222}}]\n stackParams:[{app:{},photos:{itemid:1,searchList:{page:1,pageSize:10},_listkey:222222},comments:{articleType:photos,articleId:1,itemid:23,searchList:{page:2,pageSize:10},_listkey:222222}}]\n\n web: www.aa.com/photos/1/comments/23?p={comments:{searchList:{page:2}}}#p={photos:{_listkey:222222}, comments:{_listkey:222222}}\n\n rn: www.aa.com/photos/1/comments/23?p={app:{}}&p={photos:{}}&p={comments:{searchList:{page:2}}}#p={}&p={photos:{_listkey:222222}}&p={comments:{_listkey:222222}}\n\n routeData -> location\n1.根据paths得到匹配表达式：'/:articleType/:articleId/comments/:itemId'\n2.根据params填充表达式得到：www.aa.com/photos/1/comments/23\n3.将params中带_的提取为hash\n不作缩减将得到：\nwww.aa.com/photos/1/comments/23?\np={app:{}}&\np={photos:{itemid:1,searchList:{page:1,pageSize:10}}}&\np={comments:{articleType:photos,articleId:1,itemid:23,searchList:{page:2,pageSize:10}}}\n#\np={}&\np={photos:{_listkey:222222}}\np={comments:{_listkey:222222}}\n4.缩\b减默认值：\nwww.aa.com/photos/1/comments/23?\np={app:{}}&\np={photos:{itemid:1}}&\np={comments:{articleType:photos,articleId:1,itemid:23,searchList:{page:2}}}\n#\np={}&\np={photos:{_listkey:222222}}\np={comments:{_listkey:222222}}\n5.缩减路径传参\nwww.aa.com/photos/1/comments/23?\np={app:{}}&\np={photos:{}}&\np={comments:{searchList:{page:2}}}\n#\np={}&\np={photos:{_listkey:222222}}\np={comments:{_listkey:222222}}\n\n\n\n location->routeData\n1.解析出paths、views、pathArgs\n2.\n\n */\n"],"file":"index.js"}