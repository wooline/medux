{"version":3,"sources":["../../src/index.ts"],"names":["config","escape","dateParse","splitKey","defaultRouteParams","setConfig","conf","excludeDefaultData","data","def","holde","views","result","Object","keys","forEach","moduleName","value","defaultValue","Array","isArray","length","ISO_DATE_FORMAT","prop","test","Date","searchParse","search","unescape","JSON","parse","error","joinSearchString","arr","strs","i","k","push","join","searchStringify","searchData","str","stringify","splitSearch","reg","RegExp","match","stackParams","map","split","pathnameParse","pathname","routeConfig","paths","args","rule","hasOwnProperty","item","viewName","pathConfig","path","exact","coreConfig","VSP","params","compileConfig","parentAbsoluteViewName","viewToRule","ruleToKeys","end","strict","sensitive","reduce","prev","cur","name","absoluteViewName","assignRouteData","firstStackParams","assignDeep","fillRouteData","routePayload","extend","index","extractHashData","searchParams","hashParams","key","startsWith","hash","buildTransformRoute","locationToRoute","location","pathsArgs","hashStackParams","routeToLocation","routeData","firstStackParamsFilter","toPath","searchStrings","hashStrings","substr"],"mappings":"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":["import {DisplayViews, RouteData} from '@medux/core/types/export';\nimport {compilePath, compileToPath, matchPath} from './matchPath';\n\nimport assignDeep from 'deep-extend';\nimport {config as coreConfig} from '@medux/core';\n\nconst config = {\n  escape: true,\n  dateParse: true,\n  splitKey: 'q',\n  defaultRouteParams: {},\n};\nexport function setConfig(conf: {escape?: boolean; dateParse?: boolean; splitKey?: string; defaultRouteParams?: {[moduleName: string]: any}}) {\n  conf.escape !== undefined && (config.escape = conf.escape);\n  conf.dateParse !== undefined && (config.dateParse = conf.dateParse);\n  conf.splitKey && (config.splitKey = conf.splitKey);\n  conf.defaultRouteParams && (config.defaultRouteParams = conf.defaultRouteParams);\n}\n// interface Location {\n//   pathname: string;\n//   search: string;\n//   hash: string;\n//   state: RouteData;\n// }\n\nexport interface Location {\n  pathname: string;\n  search: string;\n  hash: string;\n}\n\nexport type RouteToLocation = (routeData: RouteData) => Location;\nexport type LocationToRoute = (location: Location) => RouteData;\n\nexport interface TransformRoute {\n  locationToRoute: LocationToRoute;\n  routeToLocation: RouteToLocation;\n}\n\n// 排除默认路由参数，路由中如果参数值与默认参数相同可省去\nfunction excludeDefaultData(data: {[moduleName: string]: any}, def: {[moduleName: string]: any}, holde: boolean, views?: {[moduleName: string]: any}) {\n  const result: any = {};\n  Object.keys(data).forEach(moduleName => {\n    let value = data[moduleName];\n    const defaultValue = def[moduleName];\n    if (value !== defaultValue) {\n      if (typeof value === typeof defaultValue && typeof value === 'object' && !Array.isArray(value)) {\n        value = excludeDefaultData(value, defaultValue, !!views && !views[moduleName]);\n      }\n      if (value !== undefined) {\n        result[moduleName] = value;\n      }\n    }\n  });\n\n  if (Object.keys(result).length === 0 && !holde) {\n    return undefined;\n  }\n  return result;\n}\n\n// 合并默认路由参数，如果路由中某参数没传，将用默认值替代，与上面方法互逆\n// function mergeDefaultData(data: {[moduleName: string]: any}, views: {[moduleName: string]: any}) {\n//   Object.keys(views).forEach(moduleName => {\n//     if (!data[moduleName]) {\n//       data[moduleName] = {};\n//     }\n//   });\n//   Object.keys(data).forEach(moduleName => {\n//     data[moduleName] = assignDeep({}, defaultRouteParams[moduleName], data[moduleName]);\n//   });\n// }\n\n// export const mergeDefaultParamsMiddleware: Middleware = () => (next: Function) => (action: any) => {\n//   if (action.type === ActionTypes.F_ROUTE_CHANGE) {\n//     const payload = getActionData<RouteState>(action);\n//     const params = mergeDefaultData(payload.data.views, payload.data.params, defaultRouteParams);\n//     action = {...action, payload: {...payload, data: {...payload.data, params}}};\n//   }\n//   return next(action);\n// };\n\nexport interface RouteConfig {\n  [path: string]: string | [string, RouteConfig];\n}\n\nconst ISO_DATE_FORMAT = /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(\\.\\d+)?(Z|[+-][01]\\d:[0-5]\\d)$/;\n\nfunction dateParse(prop: any, value: any) {\n  if (typeof value === 'string' && ISO_DATE_FORMAT.test(value)) {\n    return new Date(value);\n  }\n  return value;\n}\n// function getSearch(searchOrHash: string, key: string): string {\n//   if (searchOrHash.length < 4) {\n//     return '';\n//   }\n//   const reg = new RegExp(`[&?#]${key}=`);\n//   const str = searchOrHash.split(reg)[1];\n//   if (!str) {\n//     return '';\n//   }\n//   return str.split('&')[0];\n// }\n\n/*\n  将字符串变成 Data，因为 JSON 中没有 Date 类型，所以用正则表达式匹配自动转换\n*/\nfunction searchParse(search: string): {[moduleName: string]: {[key: string]: any} | undefined} {\n  if (!search) {\n    return {};\n  }\n  if (config.escape) {\n    search = unescape(search);\n  }\n  try {\n    return JSON.parse(search, config.dateParse ? dateParse : undefined);\n  } catch (error) {\n    return {};\n  }\n}\nfunction joinSearchString(arr: string[]): string {\n  const strs = [''];\n  for (let i = 0, k = arr.length; i < k; i++) {\n    strs.push(arr[i] || '');\n  }\n  return strs.join(`&${config.splitKey}=`);\n}\nfunction searchStringify(searchData: any): string {\n  if (typeof searchData !== 'object') {\n    return '';\n  }\n  const str = JSON.stringify(searchData);\n  if (str === '{}') {\n    return '';\n  }\n  if (config.escape) {\n    return escape(str);\n  } else {\n    return str;\n  }\n}\n\nfunction splitSearch(search: string) {\n  const reg = new RegExp(`[&?#]${config.splitKey}=[^&]*`, 'g');\n  const arr = search.match(reg);\n  let stackParams: {[moduleName: string]: {[key: string]: any} | undefined}[] = [];\n  if (arr) {\n    stackParams = arr.map(str => {\n      return searchParse(str.split('=')[1]);\n    });\n  }\n  return stackParams;\n}\n\nfunction pathnameParse(pathname: string, routeConfig: RouteConfig, paths: string[], args: {[moduleName: string]: {[key: string]: any} | undefined}) {\n  for (const rule in routeConfig) {\n    if (routeConfig.hasOwnProperty(rule)) {\n      const item = routeConfig[rule];\n      const [viewName, pathConfig] = typeof item === 'string' ? [item, null] : item;\n      const match = matchPath(pathname, {path: rule, exact: !pathConfig});\n      // const match = matchPath(pathname, {path: rule.replace(/\\$$/, ''), exact: rule.endsWith('$')});\n      if (match) {\n        paths.push(viewName);\n        const moduleName = viewName.split(coreConfig.VSP)[0];\n        const {params} = match;\n        if (params && Object.keys(params).length > 0) {\n          args[moduleName] = {...args[moduleName], ...params};\n        }\n        if (pathConfig) {\n          pathnameParse(pathname, pathConfig, paths, args);\n        }\n        return;\n      }\n    }\n  }\n}\n\nfunction compileConfig(routeConfig: RouteConfig, parentAbsoluteViewName: string = '', viewToRule: {[viewName: string]: string} = {}, ruleToKeys: {[rule: string]: (string | number)[]} = {}) {\n  // ruleToKeys将每条rule中的params key解析出来\n  for (const rule in routeConfig) {\n    if (routeConfig.hasOwnProperty(rule)) {\n      if (!ruleToKeys[rule]) {\n        const {keys} = compilePath(rule, {end: true, strict: false, sensitive: false});\n        ruleToKeys[rule] = keys.reduce((prev: (string | number)[], cur) => {\n          prev.push(cur.name);\n          return prev;\n        }, []);\n      }\n      const item = routeConfig[rule];\n      const [viewName, pathConfig] = typeof item === 'string' ? [item, null] : item;\n      const absoluteViewName = parentAbsoluteViewName + '/' + viewName;\n      viewToRule[absoluteViewName] = rule;\n      if (pathConfig) {\n        compileConfig(pathConfig, absoluteViewName, viewToRule, ruleToKeys);\n      }\n    }\n  }\n  return {viewToRule, ruleToKeys};\n}\ntype DeepPartial<T> = {[P in keyof T]?: DeepPartial<T[P]>};\n\n// type Params = RouteData['params'];\n\nexport interface RoutePayload<P> {\n  extend?: RouteData;\n  stackParams?: DeepPartial<P>[];\n  paths?: string[];\n}\nfunction assignRouteData(paths: string[], stackParams: {[moduleName: string]: any}[], args?: {[moduleName: string]: any}): RouteData {\n  if (!stackParams[0]) {\n    stackParams[0] = {};\n  }\n  const firstStackParams = stackParams[0];\n  args && assignDeep(firstStackParams, args);\n  const views: DisplayViews = paths.reduce((prev: DisplayViews, cur) => {\n    const [moduleName, viewName] = cur.split(coreConfig.VSP);\n    if (viewName) {\n      if (!prev[moduleName]) {\n        prev[moduleName] = {};\n      }\n      prev[moduleName]![viewName] = true;\n      if (!firstStackParams[moduleName]) {\n        firstStackParams[moduleName] = {};\n      }\n    }\n    return prev;\n  }, {});\n  Object.keys(firstStackParams).forEach(moduleName => {\n    firstStackParams[moduleName] = assignDeep({}, config.defaultRouteParams[moduleName], firstStackParams[moduleName]);\n  });\n  const params = assignDeep({}, ...stackParams);\n  Object.keys(params).forEach(moduleName => {\n    if (!firstStackParams[moduleName]) {\n      params[moduleName] = assignDeep({}, config.defaultRouteParams[moduleName], params[moduleName]);\n    }\n  });\n  return {views, paths, params, stackParams};\n}\nexport function fillRouteData<R>(routePayload: RoutePayload<R>): RouteData {\n  const extend: RouteData = routePayload.extend || {views: {}, paths: [], stackParams: [], params: {}};\n  const stackParams = [...extend.stackParams];\n  if (routePayload.stackParams) {\n    routePayload.stackParams.forEach((item, index) => {\n      if (item) {\n        stackParams[index] = assignDeep({}, stackParams[index], item);\n      }\n    });\n  }\n  return assignRouteData(routePayload.paths || extend.paths, stackParams);\n}\nfunction extractHashData(params: {[moduleName: string]: any}) {\n  const searchParams: {[moduleName: string]: any} = {};\n  const hashParams: {[moduleName: string]: any} = {};\n  for (const moduleName in params) {\n    if (params[moduleName] && params.hasOwnProperty(moduleName)) {\n      const data = params[moduleName]!;\n      const keys = Object.keys(data);\n      if (keys.length > 0) {\n        keys.forEach(key => {\n          if (key.startsWith('_')) {\n            if (!hashParams[moduleName]) {\n              hashParams[moduleName] = {};\n            }\n            hashParams[moduleName][key] = data[key];\n          } else {\n            if (!searchParams[moduleName]) {\n              searchParams[moduleName] = {};\n            }\n            searchParams[moduleName][key] = data[key];\n          }\n        });\n      } else {\n        searchParams[moduleName] = {};\n      }\n    }\n  }\n  return {\n    search: searchStringify(searchParams),\n    hash: searchStringify(hashParams),\n  };\n}\nexport function buildTransformRoute(routeConfig: RouteConfig): TransformRoute {\n  const {viewToRule, ruleToKeys} = compileConfig(routeConfig);\n\n  const locationToRoute: LocationToRoute = location => {\n    const paths: string[] = [];\n    const pathsArgs: {[moduleName: string]: {[key: string]: any}} = {};\n    pathnameParse(location.pathname, routeConfig, paths, pathsArgs);\n    const stackParams = splitSearch(location.search);\n    const hashStackParams = splitSearch(location.hash);\n    hashStackParams.forEach((item, index) => {\n      item && assignDeep(stackParams[index], item);\n    });\n    return assignRouteData(paths, stackParams, pathsArgs);\n  };\n  const routeToLocation: RouteToLocation = routeData => {\n    const {views, paths, params, stackParams} = routeData;\n    const firstStackParams = stackParams[0];\n    let pathname = '';\n    let firstStackParamsFilter: {[moduleName: string]: {[key: string]: any} | undefined};\n    if (paths.length > 0) {\n      firstStackParamsFilter = {};\n      // 将args二层克隆params，因为后面可能会删除path中使用到的变量\n      for (const moduleName in firstStackParams) {\n        if (firstStackParams[moduleName] && firstStackParams.hasOwnProperty(moduleName)) {\n          firstStackParamsFilter[moduleName] = {...firstStackParams[moduleName]};\n        }\n      }\n      paths.reduce((parentAbsoluteViewName, viewName, index) => {\n        const absoluteViewName = parentAbsoluteViewName + '/' + viewName;\n        const rule = viewToRule[absoluteViewName];\n        const moduleName = viewName.split(coreConfig.VSP)[0];\n        //最深的一个view可以决定pathname\n        if (index === paths.length - 1) {\n          // const toPath = compileToPath(rule.replace(/\\$$/, ''));\n          const toPath = compileToPath(rule);\n          pathname = toPath(params[moduleName]);\n        }\n        //pathname中传递的值可以不在params中重复传递\n        const keys = ruleToKeys[rule] || [];\n        keys.forEach(key => {\n          if (firstStackParamsFilter[moduleName]) {\n            delete firstStackParamsFilter[moduleName]![key];\n          }\n        });\n        return absoluteViewName;\n      }, '');\n    } else {\n      firstStackParamsFilter = firstStackParams;\n    }\n    //将带_前缀的变量放到hashData中\n    const arr = [...stackParams];\n    arr[0] = excludeDefaultData(firstStackParamsFilter, config.defaultRouteParams, false, views);\n    const searchStrings: string[] = [];\n    const hashStrings: string[] = [];\n    arr.forEach((params, index) => {\n      const {search, hash} = extractHashData(params);\n      search && (searchStrings[index] = search);\n      hash && (hashStrings[index] = hash);\n    });\n\n    return {\n      pathname,\n      search: '?' + joinSearchString(searchStrings).substr(1),\n      hash: '#' + joinSearchString(hashStrings).substr(1),\n    };\n  };\n  return {\n    locationToRoute,\n    routeToLocation,\n  };\n}\n\n// export function buildTransformRoute(routeConfig: RouteConfig): TransformRoute {\n//   const {viewToRule, ruleToKeys} = compileConfig(routeConfig);\n//   const locationToRoute: LocationToRoute = location => {\n//     const paths: string[] = [];\n//     const {stackParams, params} = splitSearch(location.search);\n//     //算出paths，并将path参数提取出来并入searchParams中\n//     pathnameParse(location.pathname, routeConfig, paths, params);\n//     const views: DisplayViews = paths.reduce((prev: DisplayViews, cur) => {\n//       const [moduleName, viewName] = cur.split(coreConfig.VSP);\n//       if (viewName) {\n//         if (!prev[moduleName]) {\n//           prev[moduleName] = {};\n//         }\n//         prev[moduleName]![viewName] = true;\n//       }\n//       return prev;\n//     }, {});\n//     const {stackParams: hashStackParams, params: hashParams} = splitSearch(location.hash);\n//     //将hash参数并入params中\n//     assignDeep(params, hashParams);\n//     hashStackParams.forEach((item, index) => {\n//       item && assignDeep(stackParams[index], item);\n//     });\n//     mergeDefaultData(params, views);\n//     return {paths, params, views, stackParams};\n//   };\n//   const routeToLocation: RouteToLocation = routeData => {\n//     const {paths, params, stackParams} = routeData;\n//     const mainStackParams = stackParams[0] || {};\n//     let pathname = '';\n//     let args: {[moduleName: string]: {[key: string]: any} | undefined};\n//     if (paths.length > 0) {\n//       args = {};\n//       // 将args二层克隆params，因为后面可能会删除path中使用到的变量\n//       for (const moduleName in mainStackParams) {\n//         if (mainStackParams[moduleName] && mainStackParams.hasOwnProperty(moduleName)) {\n//           args[moduleName] = {...mainStackParams[moduleName]};\n//         }\n//       }\n//       paths.reduce((parentAbsoluteViewName, viewName, index) => {\n//         const absoluteViewName = parentAbsoluteViewName + '/' + viewName;\n//         const rule = viewToRule[absoluteViewName];\n//         const moduleName = viewName.split(coreConfig.VSP)[0];\n//         //最深的一个view可以决定pathname\n//         if (index === paths.length - 1) {\n//           // const toPath = compileToPath(rule.replace(/\\$$/, ''));\n//           const toPath = compileToPath(rule);\n//           pathname = toPath(params[moduleName]);\n//         }\n//         //pathname中传递的值可以不在params中重复传递\n//         const keys = ruleToKeys[rule] || [];\n//         keys.forEach(key => {\n//           if (args[moduleName]) {\n//             delete args[moduleName]![key];\n//           }\n//         });\n//         return absoluteViewName;\n//       }, '');\n//     } else {\n//       args = mainStackParams;\n//     }\n//     //将带_前缀的变量放到hashData中\n//     const searchData = {};\n//     const hashData = {};\n//     for (const moduleName in args) {\n//       if (args[moduleName] && args.hasOwnProperty(moduleName)) {\n//         const data = args[moduleName]!;\n//         const keys = Object.keys(data);\n//         if (keys.length > 0) {\n//           keys.forEach(key => {\n//             if (key.startsWith('_')) {\n//               if (!hashData[moduleName]) {\n//                 hashData[moduleName] = {};\n//               }\n//               hashData[moduleName][key] = data[key];\n//             } else {\n//               if (!searchData[moduleName]) {\n//                 searchData[moduleName] = {};\n//               }\n//               searchData[moduleName][key] = data[key];\n//             }\n//           });\n//         }\n//       }\n//     }\n//     return {\n//       pathname,\n//       search: searchStringify(excludeDefaultData(searchData, defaultRouteParams)),\n//       hash: searchStringify(excludeDefaultData(hashData, defaultRouteParams)),\n//     };\n//   };\n//   return {\n//     locationToRoute,\n//     routeToLocation,\n//   };\n// }\n\n/**\n '/:articleType/:articleId/comments/:itemId'\n www.aa.com/photos/1/comments/23?p={}&p=\n\n paths:[\"app.Main\", \"photos.detail\", \"comments.detail\"]\n params:{app:{},photos:{itemid:1,searchList:{page:1,pageSize:10},_listkey:222222},comments:{articleType:photos,articleId:1,itemid:23,searchList:{page:2,pageSize:10},_listkey:222222}}\n stackParams:[{app:{}}, {photos:{itemid:1,searchList:{page:1,pageSize:10},_listkey:222222}}, {comments:{articleType:photos,articleId:1,itemid:23,searchList:{page:2,pageSize:10},_listkey:222222}}]\n stackParams:[{app:{},photos:{itemid:1,searchList:{page:1,pageSize:10},_listkey:222222},comments:{articleType:photos,articleId:1,itemid:23,searchList:{page:2,pageSize:10},_listkey:222222}}]\n\n web: www.aa.com/photos/1/comments/23?p={comments:{searchList:{page:2}}}#p={photos:{_listkey:222222}, comments:{_listkey:222222}}\n\n rn: www.aa.com/photos/1/comments/23?p={app:{}}&p={photos:{}}&p={comments:{searchList:{page:2}}}#p={}&p={photos:{_listkey:222222}}&p={comments:{_listkey:222222}}\n\n routeData -> location\n1.根据paths得到匹配表达式：'/:articleType/:articleId/comments/:itemId'\n2.根据params填充表达式得到：www.aa.com/photos/1/comments/23\n3.将params中带_的提取为hash\n不作缩减将得到：\nwww.aa.com/photos/1/comments/23?\np={app:{}}&\np={photos:{itemid:1,searchList:{page:1,pageSize:10}}}&\np={comments:{articleType:photos,articleId:1,itemid:23,searchList:{page:2,pageSize:10}}}\n#\np={}&\np={photos:{_listkey:222222}}\np={comments:{_listkey:222222}}\n4.缩\b减默认值：\nwww.aa.com/photos/1/comments/23?\np={app:{}}&\np={photos:{itemid:1}}&\np={comments:{articleType:photos,articleId:1,itemid:23,searchList:{page:2}}}\n#\np={}&\np={photos:{_listkey:222222}}\np={comments:{_listkey:222222}}\n5.缩减路径传参\nwww.aa.com/photos/1/comments/23?\np={app:{}}&\np={photos:{}}&\np={comments:{searchList:{page:2}}}\n#\np={}&\np={photos:{_listkey:222222}}\np={comments:{_listkey:222222}}\n\n\n\n location->routeData\n1.解析出paths、views、pathArgs\n2.\n\n */\n"],"file":"index.js"}