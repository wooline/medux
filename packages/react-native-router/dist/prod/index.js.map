{"version":3,"sources":["../../src/index.tsx"],"names":["AppRegistry","React","renderApp","loadView","exportModule","buildApp","appName","moduleGetter","appModuleName","storeOptions","Provider","AppMainView","App","registerComponent"],"mappings":"AAEA,OAAQA,WAAR,KAA0B,cAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,SAAR,KAAwB,cAAxB,CAEA,OAAQC,QAAR,CAAkBC,YAAlB,KAAqC,cAArC,CAEA,MAAO,SAASC,CAAAA,QAAT,CAA8EC,CAA9E,CAA+FC,CAA/F,CAAgHC,CAAhH,CAAkIC,CAAlI,CAAkL,CACvL,gBADuIA,CACvI,GADuIA,CACvI,CADoK,EACpK,EAAOP,SAAS,CACd,SAACQ,CAAD,CAAWC,CAAX,CAA2B,CACzB,GAAMC,CAAAA,CAAG,CAAG,iBACV,qBAAC,CAAD,MACE,oBAAC,CAAD,MADF,CADU,CAAZ,CAKAZ,WAAW,CAACa,iBAAZ,CAA8BP,CAA9B,CAAuC,iBAAMM,CAAAA,CAAN,CAAvC,CACD,CARa,CASdL,CATc,CAUdC,CAVc,CAWdC,CAXc,CAajB","sourcesContent":["import {RootState as BaseRootState, ModuleGetter, StoreOptions} from '@medux/core/types/export';\n\nimport {AppRegistry} from 'react-native';\nimport React from 'react';\nimport {renderApp} from '@medux/react';\n\nexport {loadView, exportModule} from '@medux/react';\n\nexport function buildApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(appName: string, moduleGetter: M, appModuleName: A, storeOptions: StoreOptions = {}): Promise<void> {\n  return renderApp(\n    (Provider, AppMainView) => {\n      const App = () => (\n        <Provider>\n          <AppMainView />\n        </Provider>\n      );\n      AppRegistry.registerComponent(appName, () => App);\n    },\n    moduleGetter,\n    appModuleName,\n    storeOptions\n  );\n}\n\nexport type RootState<G extends ModuleGetter> = BaseRootState<G>;\n"],"file":"index.js"}