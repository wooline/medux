{"version":3,"sources":["../../src/index.tsx"],"names":["AppRegistry","React","renderApp","loadView","exportModule","buildApp","appName","moduleGetter","appModuleName","storeOptions","Provider","AppMainView","App","registerComponent"],"mappings":"AAEA,SAAQA,WAAR,QAA0B,cAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,cAAxB;AAEA,SAAQC,QAAR,EAAkBC,YAAlB,QAAqC,cAArC;AAEA,OAAO,SAASC,QAAT,CAA8EC,OAA9E,EAA+FC,YAA/F,EAAgHC,aAAhH,EAAkIC,YAAlI,EAAkL;AAAA,MAAhDA,YAAgD;AAAhDA,IAAAA,YAAgD,GAAnB,EAAmB;AAAA;;AACvL,SAAOP,SAAS,CACd,UAACQ,QAAD,EAAWC,WAAX,EAA2B;AACzB,QAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,aACV,oBAAC,QAAD,QACE,oBAAC,WAAD,OADF,CADU;AAAA,KAAZ;;AAKAZ,IAAAA,WAAW,CAACa,iBAAZ,CAA8BP,OAA9B,EAAuC;AAAA,aAAMM,GAAN;AAAA,KAAvC;AACD,GARa,EASdL,YATc,EAUdC,aAVc,EAWdC,YAXc,CAAhB;AAaD","sourcesContent":["import {RootState as BaseRootState, ModuleGetter, StoreOptions} from '@medux/core/types/export';\n\nimport {AppRegistry} from 'react-native';\nimport React from 'react';\nimport {renderApp} from '@medux/react';\n\nexport {loadView, exportModule} from '@medux/react';\n\nexport function buildApp<M extends ModuleGetter, A extends Extract<keyof M, string>>(appName: string, moduleGetter: M, appModuleName: A, storeOptions: StoreOptions = {}): Promise<void> {\n  return renderApp(\n    (Provider, AppMainView) => {\n      const App = () => (\n        <Provider>\n          <AppMainView />\n        </Provider>\n      );\n      AppRegistry.registerComponent(appName, () => App);\n    },\n    moduleGetter,\n    appModuleName,\n    storeOptions\n  );\n}\n\nexport type RootState<G extends ModuleGetter> = BaseRootState<G>;\n"],"file":"index.js"}